/**********************************************************************************************

     TMS5200/5220 simulator

     @version 12th February 2015
     @author Converted to JavaScript by Rasmus Moustgaard (rasmus.moustgard@gmail.com)

     Written for MAME by Frank Palazzolo
     With help from Neill Corlett
     Additional tweaking by Aaron Giles
     TMS6100 Speech Rom support added by Raphael Nabet
     PRNG code by Jarek Burczynski backported from tms5110.c by Lord Nightmare
     Chirp/excitation table fixes by Lord Nightmare
     Various fixes by Lord Nightmare
     Modularization by Lord Nightmare
     Sub-interpolation-cycle parameter updating added by Lord Nightmare
     Preliminary MASSIVE merge of tms5110 and tms5220 cores by Lord Nightmare
     Lattice Filter, Multiplier, and clipping redone by Lord Nightmare
     TMS5220C multi-rate feature added by Lord Nightmare
     Massive rewrite and reorganization by Lord Nightmare
     Additional IP, PC, subcycle timing rewrite by Lord Nightmare
     Updated based on the chip decaps done by digshadow

     Much information regarding the lpc encoding used here comes from US patent 4,209,844
     US patent 4,331,836 describes the complete 51xx chip
     US patent 4,335,277 describes the complete 52xx chip
     Special Thanks to Larry Brantingham for answering questions regarding the chip details

   TMS5200/TMS5220/TMS5220C/CD2501E/CD2501ECD:

                 +-----------------+
        D7(d0)   |  1           28 |  /RS
        ADD1     |  2           27 |  /WS
        ROMCLK   |  3           26 |  D6(d1)
        VDD(-5)  |  4           25 |  ADD2
        VSS(+5)  |  5           24 |  D5(d2)
        OSC      |  6           23 |  ADD4
        T11      |  7           22 |  D4(d3)
        SPKR     |  8           21 |  ADD8/DATA
        I/O      |  9           20 |  TEST
        PROMOUT  | 10           19 |  D3(d4)
        VREF(GND)| 11           18 |  /READY
        D2(d5)   | 12           17 |  /INT
        D1(d6)   | 13           16 |  M1
        D0(d7)   | 14           15 |  M0
                 +-----------------+
Note the standard naming for d* data bits with 7 as MSB and 0 as LSB is in lowercase.
TI's naming has D7 as LSB and D0 as MSB and is in uppercase

TO-DO:
    * Ever since the big rewrite, there are glitches on certain frame transitions
      for example in the word 'robots' during the eprom attract mode,
      I (LN) am not entirely sure why the real chip doesn't have these as well.
      Needs more real hardware testing/dumps for comparison.
    * Ever since the timing rewrite, the above problem is slightly worse. This
      time, however, it is probably a 'real' bug, which I (LN) am in the process
      of tracking down.
      i.e. the word 'congratulations' in victory when you get a high score.
    * Implement a ready callback for pc interfaces
    - this will be quite a challenge since for it to be really accurate
      the whole emulation has to run in sync (lots of timers) with the
      cpu cores.
    * If a command is still executing, /READY will be kept high until the command has
      finished if the next command is written.
    * tomcat has a 5220 which is not hooked up at all
    * Is the TS=0 forcing energy to 0 for next frame in the interpolator actually correct? I'm (LN) guessing no. The patent schematics state that TS=0 shuts off the output dac completely, though doesn't affect the I/O pin.

Pedantic detail from observation of real chip:
The 5200 and 5220 chips outputs the following coefficients over PROMOUT while
'idle' and not speaking, in this order:
e[0 or f] p[0] k1[0] k2[0] k3[0] k4[0] k5[f] k6[f] k7[f] k8[7] k9[7] k10[7]

Patent notes (important timing info for interpolation):
* TCycle ranges from 1 to 20, is clocked based on the clock input or RC clock
  to the chip / 4. This emulation core completely ignores TCycle, as it isn't
  very relevant.
    Every full TCycle count (i.e. overflow from 20 to 1), Subcycle is
    incremented.
* Subcycle ranges from 0 to 2, reload is 0 in SPKSLOW mode, 1 normally, and
  corresponds to whether an interpolation value is being calculated (0 or 1)
  or being written to ram (2). 0 and 1 correspond to 'A' cycles on the
  patent, while 2 corresponds to 'B' cycles.
    Every Subcycle full count (i.e. overflow from 2 to (0 or 1)), PC is
    incremented. (NOTE: if PC=12, overflow happens on the 1->2 transition,
    not 2->0; PC=12 has no B cycle.)
* PC ranges from 0 to 12, and corresponds to the parameter being interpolated
  or otherwise read from rom using PROMOUT.
  The order is:
  0 = Energy
  1 = Pitch
  2 = K1
  3 = K2
  ...
  11 = K10
  12 = nothing
    Every PC full count (i.e. overflow from 12 to 0), IP (aka "Interpolation Period")
    is incremented.
* IP (aka "Interpolation Period") ranges from 0 to 7, and corresponds with the amount
  of rightshift that the difference between current and target for a given
  parameter will have applied to it, before being added to the current
  parameter. Note that when interpolation is inhibited, only IP=0 will
  cause any change to the current values of the coefficients.
  The order is, after new frame parse (last ip was 0 before parse):
  1 = >>3 (/8)
  2 = >>3 (/8)
  3 = >>3 (/8)
  4 = >>2 (/4)
  5 = >>2 (/4)
  6 = >>1 (/2) (NOTE: the patent has an error regarding this value on one table implying it should be /4, but circuit simulation of parts of the patent shows that the /2 value is correct.)
  7 = >>1 (/2)
  0 = >>0 (/1, forcing current values to equal target values)
    Every IP full count, a new frame is parsed, but ONLY on the 0->*
    transition.
    NOTE: on TMS5220C ONLY, the datasheet IMPLIES the following:
    Upon new frame parse (end of IP=0), the IP is forced to a value depending
    on the TMS5220C-specific rate setting. For rate settings 0, 1, 2, 3, it
    will be forced to 1, 3, 5 or 7 respectively. On non-TMS5220 chips, it
    counts as expected (IP=1 follows IP=0) always.
    This means, the tms5220c with rates set to n counts IP as follows:
    (new frame parse is indicated with a #)
    Rate    IP Count
    00      7 0#1 2 3 4 5 6 7 0#1 2 3 4 5 6 7    <- non-tms5220c chips always follow this pattern
    01      7 0#3 4 5 6 7 0#3 4 5 6 7 0#3 4 5
    10      7 0#5 6 7 0#5 6 7 0#5 6 7 0#5 6 7
    11      7 0#7 0#7 0#7 0#7 0#7 0#7 0#7 0#7
    Based on the behavior tested on the CD2501ECD this is assumed to be the same for that chip as well.

Most of the following is based on figure 8c of 4,331,836, which is the
  TMS5100/TMC0280 patent, but the same information applies to the TMS52xx
  as well.

OLDP is a status flag which controls whether unvoiced or voiced excitation is
  being generated. It is latched from "P=0" at IP=7 PC=12 T=16.
  (This means that, during normal operation, between IP=7 PC=12 T16 and
  IP=0 PC=1 T17, OLDP and P=0 are the same)
"P=0" is a status flag which is set if the index value for pitch for the new
  frame being parsed (which will become the new target frame) is zero.
  It is used for determining whether interpolation of the next frame is
  inhibited or not. It is updated at IP=0 PC=1 T17. See next section.
OLDE is a status flag which is only used for determining whether
  interpolation is inhibited or not.
  It is latched from "E=0" at IP=7 PC=12 T=16.
  (This means that, during normal operation, between IP=7 PC=12 T16 and
  IP=0 PC=0 T17, OLDE and E=0 are the same)
"E=0" is a status flag which is set if the index value for energy for the new
  frame being parsed (which will become the new target frame) is zero.
  It is used for determining whether interpolation of the next frame is
  inhibited or not. It is updated at IP=0 PC=0 T17. See next section.

Interpolation is inhibited (i.e. interpolation at IP frames will not happen
  except for IP=0) under the following circumstances:
  "P=0" != "OLDP" ("P=0" = 1, and OLDP = 0; OR "P=0" = 0, and OLDP = 1)
    This means the new frame is unvoiced and the old one was voiced, or vice
    versa.
* TO-DO the 5100 and 5200 patents are inconsistent about the above. Trace the decaps!
  "OLDE" = 1 and "E=0" = 0
    This means the new frame is not silent, and the old frame was silent.



****Documentation of chip commands:***
    x0x0xbcc : on 5200/5220: NOP (does nothing); on 5220C and CD2501ECD: Select frame length by cc, and b selects whether every frame is preceded by 2 bits to select the frame length (instead of using the value set by cc); the default (and after a reset command) is as if '0x00' was written, i.e. for frame length (200 samples) and 0 for whether the preceding 2 bits are enabled (off)

    x001xxxx: READ BYTE (RDBY) Sends eight read bit commands (M0 high M1 low) to VSM and reads the resulting bits serially into a temporary register, which becomes readable as the next byte read from the tms52xx once ready goes active. Note the bit order of the byte read from the TMS52xx is BACKWARDS as compared to the actual data order as in the rom on the VSM chips; the read byte command of the tms5100 reads the bits in the 'correct' order. This was IMHO a rather silly design decision of TI. (I (LN) asked Larry Brantingham about this but he wasn't involved with the TMS52xx chips, just the 5100); There's ASCII data in the TI 99/4 speech module VSMs which has the bit order reversed on purpose because of this!
    TALK STATUS must be CLEAR for this command to work; otherwise it is treated as a NOP.

    x011xxxx: READ AND BRANCH (RB) Sends a read and branch command (M0 high, M1 high) to force VSM to set its data pointer to whatever the data is at its current pointer location is)
    TALK STATUS must be CLEAR for this command to work; otherwise it is treated as a NOP.

    x100aaaa: LOAD ADDRESS (LA) Send a load address command (M0 low M1 high) to VSM with the 4 'a' bits; Note you need to send four or five of these in sequence to actually specify an address to the vsm.
    TALK STATUS must be CLEAR for this command to work; otherwise it is treated as a NOP.

    x101xxxx: SPEAK (SPK) Begins speaking, pulling spech data from the current address pointer location of the VSM modules.

    x110xxxx: SPEAK EXTERNAL (SPKEXT) Clears the FIFO using SPKEE line, then sets TALKD (TALKST remains zero) until 8 bytes have been written to the FIFO, at which point it begins speaking, pulling data from the 16 byte fifo.
    The patent implies TALK STATUS must be CLEAR for this command to work; otherwise it is treated as a NOP, but the decap shows that this is not true, and is an error on the patent diagram.

    x111xxxx: RESET (RST) Resets the speech synthesis core immediately, and clears the FIFO.


    Other chip differences:
    The 5220C (and CD2501ECD maybe?) are quieter due to a better dac arrangement on die which allows less crossover between bits, based on the decap differences.


***MAME Driver specific notes:***

    Victory's initial audio selftest is pretty brutal to the FIFO: it sends a
    sequence of bytes to the FIFO and checks the status bits after each one; if
    even one bit is in the wrong state (i.e. speech starts one byte too early or
    late), the test fails!
    The sample in Victory 'Shields up!' after you activate shields, the 'up' part
    of the sample is missing the STOP frame at the end of it; this causes the
    speech core to run out of bits to parse from the FIFO, cutting the sample off
    by one frame. This appears to be an original game code bug.

Progress list for drivers using old vs new interface:
starwars: uses new interface (couriersud)
gauntlet: uses new interface (couriersud)
atarisy1: uses new interface (Lord Nightmare)
atarisy2: uses new interface (Lord Nightmare)
atarijsa: uses new interface (Lord Nightmare)
firefox: uses new interface (couriersud)
mhavoc: uses old interface, and is in the machine file instead of the driver.
monymony/jackrabt(zaccaria.c): uses new interface (couriersud)
victory(audio/exidy.c): uses new interface (couriersud)
looping: uses old interface
portraits: uses *NO* interface; the i/o cpu hasn't been hooked to anything!
dotron and midwayfb(mcr.c): uses old interface


As for which games used which chips:

TMS5200 AKA TMC0285 AKA CD2501E: (1980 to 1983)
    Arcade: Zaccaria's 'money money' and 'jack rabbit'; Bally/Midway's
'Discs of Tron' (all environmental cabs and a few upright cabs; the code
exists on all versions for the speech though, and upright cabs can be
upgraded to add it by hacking on a 'Squawk & Talk' pinball speech board
(which is also TMS5200 based) with a few modded components)
    Pinball: All Bally/Midway machines which uses the 'Squawk & Talk' board.
    Home computer: TI 99/4 PHP1500 Speech module (along with two VSM
serial chips); Street Electronics Corp.'s Apple II 'Echo 2' Speech
synthesizer (early cards only)

CD2501ECD: (1983)
    Home computer: TI 99/8 (prototypes only)

TMS5220: (mostly on things made between 1981 and 1984-1985)
    Arcade: Bally/Midway's 'NFL Football'; Atari's 'Star Wars',
'Firefox', 'Return of the Jedi', 'Road Runner', 'The Empire Strikes
Back' (all verified with schematics); Venture Line's 'Looping' and 'Sky
Bumper' (need verify for both); Olympia's 'Portraits' (need verify);
Exidy's 'Victory' and 'Victor Banana' (need verify for both)
    Pinball: Several (don't know names offhand, have not checked schematics; likely Zaccaria's 'Farfalla')
    Home computer: Street Electronics Corp.'s Apple II 'Echo 2' Speech
synthesizer (later cards only); Texas Instruments' 'Speak and Learn'
scanner wand unit.

TMS5220C AKA TSP5220C: (on stuff made from 1984 to 1992 or so)
    Arcade: Atari's 'Indiana Jones and the Temple of Doom', '720',
'Gauntlet', 'Gauntlet II', 'A.P.B.', 'Paperboy', 'RoadBlasters',
'Vindicators Pt II'(verify?), and 'Escape from the Planet of the Robot
Monsters' (all verified except for vindicators pt 2)
    Pinball: Several (less common than the tms5220? (not sure about
this), mostly on later pinballs with LPC speech)
    Home computer: Street Electronics Corp.'s 'ECHO' parallel/hobbyist
module (6511 based), IBM PS/2 Speech adapter (parallel port connection
device), PES Speech adapter (serial port connection)

Street electronics had a later 1989-era ECHO appleII card which is TSP50c0x/1x
MCU based speech and not tms5xxx based (though it is likely emulating the tms5220
in MCU code). Look for a 16-pin chip at U6 labeled "ECHO-3 SN".

***********************************************************************************************/

'use strict';

/* *****optional defines***** */

/* Other hacks */
/* HACK?: if defined, outputs the low 4 bits of the lattice filter to the i/o
 * or clip logic, even though the real hardware doesn't do this, partially verified by decap */
TMS5220.ALLOW_4_LSB = false;

/* *****configuration of chip connection stuff***** */
/* must be defined; if 0, output the waveform as if it was tapped on the speaker pin as usual, if 1, output the waveform as if it was tapped on the i/o pin (volume is much lower in the latter case) */
TMS5220.FORCE_DIGITAL = false;

/* must be defined; if 1, normal speech (one A cycle, one B cycle per interpolation step); if 0; speak as if SPKSLOW was used (two A cycles, one B cycle per interpolation step) */
TMS5220.FORCE_SUBC_RELOAD = 1;

TMS5220.FIFO_SIZE = 32; // RM: Changed from 16 to prevent running out of bits in the FIFO

TMS5220.HAS_RATE_CONTROL = false;

TMS5220.USE_JAVASCRIPT_RNG = true;

TMS5220.SAMPLE_RATE = 8000;

// Sample count reload for 5220c and cd2501ecd only; 5200 and 5220 always reload with 0; keep in mind this is loaded on IP=0 PC=12 subcycle=1 so it immediately will increment after one sample, effectively being 1,3,5,7 as in the comments above.
TMS5220.reload_table = [0, 2, 4, 6];

/*
 The TMS5200CNL was decapped and imaged by digshadow in March, 2013.
 It is equivalent to the CD2501E (internally: "TMC0285") chip used
 on the TI 99/4(A) speech module.
 The LPC table is verified to match the decap.
 (It was previously dumped with PROMOUT which matches as well)
 The chirp table is verified to match the decap. (sum = 0x3da)
 Note that the K coefficients are VERY different from the coefficients given
 in the US 4,335,277 patent, which may have been for some sort of prototype or
 otherwise intentionally scrambled. The energy and pitch tables, however, are
 identical to that patent.
 Also note, that the K coefficients are ALMOST identical to the coefficients from the CD2802.
 The interpolation coefficients still come from the patents pending verification
 of the interpolation counter circuit from the chip decap image.
 NOTE FROM DECAP: immediately to the left of each of the K1,2,3,4,5,and 6
 coefficients in the LPC rom are extra columns containing the constants
 -510, -502, 313, 318, or in hex 0x202, 0x20A, 0x139, 0x13E.
 Those EXACT constants DO appear (rather nonsensically) on the lpc table in US
 patent 4,335,277. They don't seem to do anything except take up space and may
 be a leftover from an older design predating even the patent.
 */

TMS5220.coeff = {
    subtype: 8,
    num_k: 10,
    energy_bits: 4,
    pitch_bits: 6,
    kbits: [5, 5, 4, 4, 4, 4, 4, 3, 3, 3],
    /* E */
    energytable: [0, 1, 2, 3, 4, 6, 8, 11, 16, 23, 33, 47, 63, 85, 114, 0],
    /* P */
    pitchtable: [0, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 26, 27, 28,
        29, 30, 31, 32, 34, 36, 38, 40,
        41, 43, 45, 48, 49, 51, 54, 55,
        57, 60, 62, 64, 68, 72, 74, 76,
        81, 85, 87, 90, 96, 99, 103, 107,
        112, 117, 122, 127, 133, 139, 145, 151,
        157, 164, 171, 178, 186, 194, 202, 211],
    ktable: [
        /* K1 */
        [-501, -498, -495, -490, -485, -478, -469, -459,
            -446, -431, -412, -389, -362, -331, -295, -253,
            -207, -156, -102, -45, 13, 70, 126, 179,
            228, 272, 311, 345, 374, 399, 420, 437],
        /* K2 */
        [-376, -357, -335, -312, -286, -258, -227, -195,
            -161, -124, -87, -49, -10, 29, 68, 106,
            143, 178, 212, 243, 272, 299, 324, 346,
            366, 384, 400, 414, 427, 438, 448, 506],
        /* K3 */
        [-407, -381, -349, -311, -268, -218, -162, -102,
            -39, 25, 89, 149, 206, 257, 302, 341],
        /* K4 */
        [-290, -252, -209, -163, -114, -62, -9, 44,
            97, 147, 194, 238, 278, 313, 344, 371],
        /* K5 */
        [-318, -283, -245, -202, -156, -107, -56, -3,
            49, 101, 150, 196, 239, 278, 313, 344],
        /* K6 */
        [-193, -152, -109, -65, -20, 26, 71, 115,
            158, 198, 235, 270, 301, 330, 355, 377],
        /* K7 */
        [-254, -218, -180, -140, -97, -53, -8, 36,
            81, 124, 165, 204, 240, 274, 304, 332],
        /* K8 */
        [-205, -112, -10, 92, 187, 269, 336, 387],
        /* K9 */
        [-249, -183, -110, -32, 48, 126, 198, 261], // verified from decap; on the cd2802 patent the 4th entry is -19 (patent typo?)
        /* K10 */
        [-190, -133, -73, -10, 53, 115, 173, 227]
    ],
    /* Chirp table */
    chirptable: [0x00, 0x03, 0x0F, 0x28, 0x4C, 0x6C, 0x71, 0x50,
        0x25, 0x26, 0x4C, 0x44, 0x1A, 0x32, 0x3B, 0x13,
        0x37, 0x1A, 0x25, 0x1F, 0x1D, 0x00, 0x00, 0x00,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0 ],
    /* interpolation coefficients */
    interp_coeff: [ 0, 3, 3, 3, 2, 2, 1, 1 ]
};

function TMS5220(enabled) {

    this.enabled = enabled;

    this.m_coeff = TMS5220.coeff;
    this.m_speak_external = false;
    this.m_talk_status = false;
    this.m_speaking_now = false;
    this.m_buffer_low = true;
    this.m_buffer_empty = true;
    this.m_schedule_dummy_read = false;
    this.m_fifo_count = 0;
    this.m_fifo_tail = 0;
    this.m_fifo = [];
    this.m_subcycle = 0;
    this.m_subc_reload = 0;
    this.m_c_variant_rate = 0;
    this.m_PC = 0;
    this.m_IP = 0;
    this.m_new_frame_energy_idx = 0;
    this.m_new_frame_pitch_idx = 0;
    this.m_new_frame_k_idx = [];
    this.m_RDB_flag = false;
    this.m_data_register = 0;
    this.m_OLDE = false;
    this.m_OLDP = false;
    this.m_inhibit = false;
    this.m_target_energy = 0;
    this.m_target_pitch = 0;
    this.m_target_k = [];
    this.m_current_k = [];
    this.m_RNG = 0;
    this.m_excitation_data = 0;
    this.m_u = [];
    this.m_x = [];
    this.m_digital_select = false;
    this.m_speechROMaddr = 0;
    this.m_load_pointer = 0;
    this.m_ROM_bits_count = 0;
    this.m_speechROMlen = 0x8000;
    this.m_irq_pin = 0;
    this.m_io_ready = true;
    this.m_irq_handler = null;
    this.m_readyq_handler = null;

    this.log = Log.getLog();
}

TMS5220.prototype = {

    /**********************************************************************************************

     Js99'er interface

    ***********************************************************************************************/

    setTMS9900: function (tms9900) {
        this.tms9900 = tms9900;
    },

    reset: function () {
        this.device_reset();
    },

    writeSpeechData: function (b) {
        if (this.enabled) {
            this.data_write(b);
        }
    },

    readSpeechData: function () {
        return this.enabled ? this.status_read() : 0;
    },

    setSpeechEnabled: function (enabled) {
        this.enabled = enabled;
    },

    update: function (buffer, length) {
        this.process(buffer, length);
    },

    /**********************************************************************************************

     tms5220_data_write -- handle a write to the TMS5220

    ***********************************************************************************************/

    data_write: function (data) {
        if (this.m_speak_external) { // If we're in speak external mode
            this.log.debug("External speech: " + data.toHexByte());
            // add this byte to the FIFO
            if (this.m_fifo_count < TMS5220.FIFO_SIZE) {
                this.m_fifo[this.m_fifo_tail] = data;
                this.m_fifo_tail = (this.m_fifo_tail + 1) % TMS5220.FIFO_SIZE;
                this.m_fifo_count++;

                this.update_status_and_ints();

                if (!this.m_talk_status && !this.m_buffer_low) { // we just unset buffer low with that last write, and talk status *was* zero...
                    this.log.info("Begin talking");
                    var i;
                    // ...then we now have enough bytes to start talking; clear out the new frame parameters (it will become old frame just before the first call to parse_frame() )
                    this.m_subcycle = this.m_subc_reload;
                    this.m_PC = 0;
                    this.m_IP = TMS5220.reload_table[this.m_c_variant_rate & 0x3]; // is this correct? should this be always 7 instead, so that the new frame is loaded quickly?
                    this.m_new_frame_energy_idx = 0;
                    this.m_new_frame_pitch_idx = 0;
                    for (i = 0; i < 4; i++) {
                        this.m_new_frame_k_idx[i] = 0;
                    }
                    for (i = 4; i < 7; i++) {
                        this.m_new_frame_k_idx[i] = 0xF;
                    }
                    for (i = 7; i < this.m_coeff.num_k; i++) {
                        this.m_new_frame_k_idx[i] = 0x7;
                    }
                    this.m_talk_status = this.m_speaking_now = true;
                }
            }
            else {
                this.log.warn("data_write: Ran out of room in the tms52xx FIFO! this should never happen!");
                // at this point, /READY should remain HIGH/inactive until the fifo has at least one byte open in it.
            }
        }
        else { //(! m_speak_external)
            // R Nabet : we parse commands at once.  It is necessary for such commands as read.
            this.process_command(data);
        }
    },

    /**********************************************************************************************

     update_status_and_ints -- check to see if the various flags should be on or off
     Description of flags, and their position in the status register:
     From the data sheet:
     bit D0(bit 7) = TS - Talk Status is active (high) when the VSP is processing speech data.
     Talk Status goes active at the initiation of a Speak command or after nine
     bytes of data are loaded into the FIFO following a Speak External command. It
     goes inactive (low) when the stop code (Energy=1111) is processed, or
     immediately by a buffer empty condition or a reset command.
     bit D1(bit 6) = BL - Buffer Low is active (high) when the FIFO buffer is more than half empty.
     Buffer Low is set when the "Last-In" byte is shifted down past the half-full
     boundary of the stack. Buffer Low is cleared when data is loaded to the stack
     so that the "Last-In" byte lies above the half-full boundary and becomes the
     eighth data byte of the stack.
     bit D2(bit 5) = BE - Buffer Empty is active (high) when the FIFO buffer has run out of data
     while executing a Speak External command. Buffer Empty is set when the last bit
     of the "Last-In" byte is shifted out to the Synthesis Section. This causes
     Talk Status to be cleared. Speech is terminated at some abnormal point and the
     Speak External command execution is terminated.

     ***********************************************************************************************/

    update_status_and_ints: function () {

        /* update flags and set ints if needed */

        this.update_ready_state();

        /* BL is set if neither byte 9 nor 8 of the fifo are in use; this
         translates to having fifo_count (which ranges from 0 bytes in use to 16
         bytes used) being less than or equal to 8. Victory/Victorba depends on this. */
        if (this.m_fifo_count <= TMS5220.FIFO_SIZE / 2) {
            // generate an interrupt if necessary; if /BL was inactive and is now active, set int.
            if (!this.m_buffer_low) {
                this.set_interrupt_state(1);
            }
            this.m_buffer_low = true;
        }
        else {
            this.m_buffer_low = false;
        }

        /* BE is set if neither byte 15 nor 14 of the fifo are in use; this
         translates to having fifo_count equal to exactly 0 */
        if (this.m_fifo_count === 0) {
            // generate an interrupt if necessary; if /BE was inactive and is now active, set int.
            if (!this.m_buffer_empty) {
                this.set_interrupt_state(1);
            }
            this.m_buffer_empty = true;
        }
        else {
            this.m_buffer_empty = false;
        }

        /* TS is talk status and is set elsewhere in the fifo parser and in
         the SPEAK command handler; however, if /BE is true during speak external
         mode, it is immediately unset here. */
        if (this.m_speak_external && this.m_buffer_empty) {
            // generate an interrupt: /TS was active, and is now inactive.
            if (this.m_talk_status) {
                this.m_talk_status = this.m_speak_external = false;
                this.set_interrupt_state(1);
            }
        }
        /* Note that TS being unset will also generate an interrupt when a STOP
         frame is encountered; this is handled in the sample generator code and not here */

        if (this.m_speak_external && this.tms9900) {
            this.tms9900.setSuspended(this.m_fifo_count === TMS5220.FIFO_SIZE);
        }
    },

    /**********************************************************************************************

     extract_bits -- extract a specific number of bits from the current input stream (FIFO or VSM)

     ***********************************************************************************************/

    extract_bits: function (count) {
        var val = 0;

        if (this.m_speak_external) {
            // extract from FIFO
            while (count-- > 0) {
                val = (val << 1) | ((this.m_fifo[this.m_fifo_head] >> this.m_fifo_bits_taken) & 1);
                this.m_fifo_bits_taken++;
                if (this.m_fifo_bits_taken >= 8) {
                    this.m_fifo_count--;
                    this.m_fifo[this.m_fifo_head] = 0; // zero the newly depleted fifo head byte
                    this.m_fifo_head = (this.m_fifo_head + 1) % TMS5220.FIFO_SIZE;
                    this.m_fifo_bits_taken = 0;
                    this.update_status_and_ints();
                }
            }
        }
        else {
            // extract from VSM (speech ROM)
            val = this.rom_read(count);
        }

        return val;
    },

    /**********************************************************************************************

     tms5220_status_read -- read status or data from the TMS5220

     ***********************************************************************************************/

    status_read: function () {
        if (this.m_RDB_flag) {
            /* if last command was read, return data register */
            this.m_RDB_flag = false;
            this.log.info("Read speech data at " + (this.m_speechROMaddr - 1).toHexWord() + ": " + this.m_data_register.toHexByte());
            return this.m_data_register;
        }
        else {   /* read status */

            /* clear the interrupt pin on status read */
            this.set_interrupt_state(0);
            var status = ((this.m_talk_status ? 1 : 0) << 7) | ((this.m_buffer_low ? 1 : 0) << 6) | ((this.m_buffer_empty ? 1 : 0) << 5);
            this.log.debug("Speech: read status " + status.toHexByte());
            return ((this.m_talk_status ? 1 : 0) << 7) | ((this.m_buffer_low ? 1 : 0) << 6) | ((this.m_buffer_empty ? 1 : 0) << 5);
        }
    },

    /**********************************************************************************************

     tms5220_ready_read -- returns the ready state of the TMS5220

     ***********************************************************************************************/

    ready_read: function () {
        return ((this.m_fifo_count < TMS5220.FIFO_SIZE) || (!this.m_speak_external)) && this.m_io_ready;
    },

    /**********************************************************************************************

     tms5220_cycles_to_ready -- returns the number of cycles until ready is asserted
     NOTE: this function is deprecated and is known to be VERY inaccurate.
     Use at your own peril!

     ***********************************************************************************************/

    cycles_to_ready: function () {
        var answer;


        if (this.ready_read()) {
            answer = 0;
        }
        else {
            var val;
            var samples_per_frame = this.m_subc_reload ? 200 : 304; // either (13 A cycles + 12 B cycles) * 8 interps for normal SPEAK/SPKEXT, or (13*2 A cycles + 12 B cycles) * 8 interps for SPKSLOW
            var current_sample = ((this.m_PC * (3 - this.m_subc_reload)) + ((this.m_subc_reload ? 38 : 25) * this.m_IP));
            answer = samples_per_frame - current_sample + 8;

            // total number of bits available in current byte is (8 - m_fifo_bits_taken)
            // if more than 4 are available, we need to check the energy
            if (this.m_fifo_bits_taken < 4) {
                // read energy
                val = (this.m_fifo[this.m_fifo_head] >> this.m_fifo_bits_taken) & 0xf;
                if (val === 0)
                /* 0 -> silence frame: we will only read 4 bits, and we will
                 * therefore need to read another frame before the FIFO is not
                 * full any more */
                    answer += this.m_subc_reload ? 200 : 304;
                /* 15 -> stop frame, we will only read 4 bits, but the FIFO will
                 * we cleared; otherwise, we need to parse the repeat flag (1 bit)
                 * and the pitch (6 bits), so everything will be OK. */
            }
        }

        return answer;
    },

    /**********************************************************************************************

     tms5220_int_read -- returns the interrupt state of the TMS5220

     ***********************************************************************************************/

    int_read: function () {
        return this.m_irq_pin;
    },

    /**********************************************************************************************

     tms5220_process -- fill the buffer with a specific number of samples

     ***********************************************************************************************/

    process: function (buffer, size) {
        var buf_count = 0;
        var i, bitout, zpar;
        var this_sample;

        /* the following gotos are probably safe to remove */
        /* if we're empty and still not speaking, fill with nothingness */
        // if (!this.m_speaking_now) {
        //     goto empty;
        // }

        /* if speak external is set, but talk status is not (yet) set, wait for buffer low to clear */
        // if (!this.m_talk_status && this.m_speak_external && this.m_buffer_low) {
        //     goto empty;
        // }

        if (this.m_speaking_now && !(!this.m_talk_status && this.m_speak_external && this.m_buffer_low)) {

            /* loop until the buffer is full or we've stopped speaking */
            while ((size > 0) && this.m_speaking_now) {
                /* if it is the appropriate time to update the old energy/pitch idxes,
                 * i.e. when IP=7, PC=12, T=17, subcycle=2, do so. Since IP=7 PC=12 T=17
                 * is JUST BEFORE the transition to IP=0 PC=0 T=0 sybcycle=(0 or 1),
                 * which happens 4 T-cycles later), we change on the latter.*/
                if ((this.m_IP === 0) && (this.m_PC === 0) && (this.m_subcycle < 2)) {
                    this.m_OLDE = (this.m_new_frame_energy_idx === 0);
                    this.m_OLDP = (this.m_new_frame_pitch_idx === 0);
                }

                /* if we're ready for a new frame to be applied, i.e. when IP=0, PC=12, Sub=1
                 * (In reality, the frame was really loaded incrementally during the entire IP=0
                 * PC=x time period, but it doesn't affect anything until IP=0 PC=12 happens)
                 */
                if ((this.m_IP === 0) && (this.m_PC === 12) && (this.m_subcycle === 1)) {
                    /* appropriately override the interp count if needed; this will be incremented after the frame parse! */
                    this.m_IP = TMS5220.reload_table[this.m_c_variant_rate & 0x3];

                    /* if the talk status was clear last frame, halt speech now. */
                    if (!this.m_talk_status) {
                        this.m_speaking_now = false; // finally halt speech
                        // goto empty;
                        break;
                    }

                    /* Parse a new frame into the new_target_energy, new_target_pitch and new_target_k[] */
                    this.parse_frame();

                    /* if the new frame is a stop frame, set an interrupt and set talk status to 0 */
                    var NEW_FRAME_STOP_FLAG = (this.m_new_frame_energy_idx === 0xF);     // 1 if this is a stop (Energy = 0xF) frame
                    if (NEW_FRAME_STOP_FLAG) {
                        this.m_talk_status = this.m_speak_external = false;
                        this.set_interrupt_state(1);
                        this.update_status_and_ints();
                    }

                    /* in all cases where interpolation would be inhibited, set the inhibit flag; otherwise clear it.
                     Interpolation inhibit cases:
                     * Old frame was voiced, new is unvoiced
                     * Old frame was silence/zero energy, new has nonzero energy
                     * Old frame was unvoiced, new is voiced (note this is the case on the patent but may not be correct on the real final chip)
                     */
                    var OLD_FRAME_SILENCE_FLAG = this.m_OLDE;   // 1 if E=0, 0 otherwise.
                    var OLD_FRAME_UNVOICED_FLAG = this.m_OLDP;  // 1 if P=0 (unvoiced), 0 if voiced
                    var NEW_FRAME_SILENCE_FLAG = (this.m_new_frame_energy_idx === 0);    // ditto as above
                    var NEW_FRAME_UNVOICED_FLAG = (this.m_new_frame_pitch_idx === 0);    // ditto as above
                    if (
                        (!OLD_FRAME_UNVOICED_FLAG && NEW_FRAME_UNVOICED_FLAG)
                        || (OLD_FRAME_UNVOICED_FLAG && !NEW_FRAME_UNVOICED_FLAG) /* this line needs further investigation, starwars tie fighters may sound better without it */
                        || (OLD_FRAME_SILENCE_FLAG && !NEW_FRAME_SILENCE_FLAG)
                    ) {
                        this.m_inhibit = true;
                    }
                    else { // normal frame, normal interpolation
                        this.m_inhibit = false;
                    }

                    /* load new frame targets from tables, using parsed indices */
                    this.m_target_energy = this.m_coeff.energytable[this.m_new_frame_energy_idx];
                    this.m_target_pitch = this.m_coeff.pitchtable[this.m_new_frame_pitch_idx];
                    zpar = NEW_FRAME_UNVOICED_FLAG ? 1 : 0; // find out if parameters k5-k10 should be zeroed
                    for (i = 0; i < 4; i++) {
                        this.m_target_k[i] = this.m_coeff.ktable[i][this.m_new_frame_k_idx[i]];
                    }
                    for (i = 4; i < this.m_coeff.num_k; i++) {
                        this.m_target_k[i] = (this.m_coeff.ktable[i][this.m_new_frame_k_idx[i]] * (1 - zpar));
                    }

                    /* if TS is now 0, ramp the energy down to 0. Is this really correct to hardware? */
                    if (!this.m_talk_status) {
                        this.m_target_energy = 0;
                    }
                }
                else { // Not a new frame, just interpolate the existing frame.
                    var inhibit_state = this.m_inhibit && (this.m_IP !== 0) ? 1 : 0; // disable inhibit when reaching the last interp period, but don't overwrite the m_inhibit value
                    // Updates to parameters only happen on subcycle '2' (B cycle) of PCs.
                    if (this.m_subcycle === 2) {
                        switch (this.m_PC) {
                            case 0: /* PC = 0, B cycle, write updated energy */
                                this.m_current_energy += (((this.m_target_energy - this.m_current_energy) * (1 - inhibit_state)) >> this.m_coeff.interp_coeff[this.m_IP]);
                                break;
                            case 1: /* PC = 1, B cycle, write updated pitch */
                                this.m_current_pitch += (((this.m_target_pitch - this.m_current_pitch) * (1 - inhibit_state)) >> this.m_coeff.interp_coeff[this.m_IP]);
                                break;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                                /* PC = 2 through 11, B cycle, write updated K1 through K10 */
                                this.m_current_k[this.m_PC - 2] += (((this.m_target_k[this.m_PC - 2] - this.m_current_k[this.m_PC - 2]) * (1 - inhibit_state)) >> this.m_coeff.interp_coeff[this.m_IP]);
                                break;
                            case 12: /* PC = 12, do nothing */
                                break;
                        }
                    }
                }

                // calculate the output
                if (this.m_OLDP) {
                    // generate unvoiced samples here
                    if ((this.m_RNG & 1) !== 0) {
                        this.m_excitation_data = 0xC0; // ~0x3F; /* according to the patent it is (either + or -) half of the maximum value in the chirp table, so either 01000000(0x40) or 11000000(0xC0)*/
                    }
                    else {
                        this.m_excitation_data = 0x40;
                    }
                }
                else /* (!this.m_OLDP) */
                {
                    // generate voiced samples here
                    /* US patent 4331836 Figure 14B shows, and logic would hold, that a pitch based chirp
                     * function has a chirp/peak and then a long chain of zeroes.
                     * The last entry of the chirp rom is at address 0b110011 (51d), the 52nd sample,
                     * and if the address reaches that point the ADDRESS incrementer is
                     * disabled, forcing all samples beyond 51d to be == 51d
                     */
                    if (this.m_pitch_count >= 51) {
                        this.m_excitation_data = this.m_coeff.chirptable[51];
                    }
                    else { /* m_pitch_count < 51 */
                        this.m_excitation_data = this.m_coeff.chirptable[this.m_pitch_count];
                    }
                }

                if (TMS5220.USE_JAVASCRIPT_RNG) {
                    // RM: Don't want to spend time on this in JavaScript - just use built in RNG
                    this.m_RNG = Math.random() > 0.5 ? 1 : 0;
                }
                else {
                    // Update LFSR *20* times every sample (once per T cycle), like patent shows
                    for (i = 0; i < 20; i++) {
                        bitout =
                            ((this.m_RNG >> 12) & 1) ^
                            ((this.m_RNG >> 3) & 1) ^
                            ((this.m_RNG >> 2) & 1) ^
                            ((this.m_RNG >> 0) & 1);
                        this.m_RNG <<= 1;
                        this.m_RNG |= bitout;
                        this.m_RNG &= 0xFFFF; // RM: Truncate to 16 bits
                    }
                }

                this_sample = this.lattice_filter();
                /* execute lattice filter */

                /* next, force result to 14 bits (since its possible that the addition at the final (k1) stage of the lattice overflowed) */
                while (this_sample > 16383) {
                    this_sample -= 32768;
                }
                while (this_sample < -16384) {
                    this_sample += 32768;
                }
                if (!this.m_digital_select) {// analog SPK pin output is only 8 bits, with clipping
                    buffer[buf_count] = this.clip_analog(this_sample);
                }
                else { // digital I/O pin output is 12 bits
                    if (TMS5220.ALLOW_4_LSB) {
                        // input:  ssss ssss ssss ssss ssnn nnnn nnnn nnnn
                        // N taps:                       ^                 = 0x2000;
                        // output: ssss ssss ssss ssss snnn nnnn nnnn nnnN
                        buffer[buf_count] = (this_sample << 1) | ((this_sample & 0x2000) >> 13);
                    }
                    else {
                        this_sample &= ~0xF;
                        // input:  ssss ssss ssss ssss ssnn nnnn nnnn 0000
                        // N taps:                       ^^ ^^^            = 0x3E00;
                        // output: ssss ssss ssss ssss snnn nnnn nnnN NNNN
                        buffer[buf_count] = (this_sample << 1) | ((this_sample & 0x3E00) >> 9);
                    }
                }
                // Update all counts
                this.m_subcycle++;
                if ((this.m_subcycle === 2) && (this.m_PC === 12)) {
                    /* Circuit 412 in the patent acts a reset, resetting the pitch counter to 0
                     * if INHIBIT was true during the most recent frame transition.
                     * The exact time this occurs is betwen IP=7, PC=12 sub=0, T=t12
                     * and m_IP = 0, PC=0 sub=0, T=t12, a period of exactly 20 cycles,
                     * which overlaps the time OLDE and OLDP are updated at IP=7 PC=12 T17
                     * (and hence INHIBIT itself 2 t-cycles later). We do it here because it is
                     * convenient and should make no difference in output.
                     */
                    if ((this.m_IP === 7) && (this.m_inhibit)) {
                        this.m_pitch_count = 0;
                    }
                    this.m_subcycle = this.m_subc_reload;
                    this.m_PC = 0;
                    this.m_IP++;
                    this.m_IP &= 0x7;
                }
                else if (this.m_subcycle === 3) {
                    this.m_subcycle = this.m_subc_reload;
                    this.m_PC++;
                }
                this.m_pitch_count++;
                if (this.m_pitch_count >= this.m_current_pitch) {
                    this.m_pitch_count = 0;
                }
                this.m_pitch_count &= 0x1FF;
                buf_count++;
                size--;
            }
        }

        // empty:
        while (size > 0) {
            this.m_subcycle++;
            if ((this.m_subcycle === 2) && (this.m_PC === 12)) {
                this.m_subcycle = this.m_subc_reload;
                this.m_PC = 0;
                this.m_IP++;
                this.m_IP &= 0x7;
            }
            else if (this.m_subcycle === 3) {
                this.m_subcycle = this.m_subc_reload;
                this.m_PC++;
            }
            buffer[buf_count] = -1;
            /* should be just -1; actual chip outputs -1 every idle sample; (cf note in data sheet, p 10, table 4) */
            buf_count++;
            size--;
        }
    },

    /**********************************************************************************************

     clip_analog -- clips the 14 bit return value from the lattice filter to its final 10 bit value (-512 to 511), and upshifts/range extends this to 16 bits

     ***********************************************************************************************/

    clip_analog: function (cliptemp) {
        /* clipping, just like the patent shows:
         * the top 10 bits of this result are visible on the digital output IO pin.
         * next, if the top 3 bits of the 14 bit result are all the same, the lowest of those 3 bits plus the next 7 bits are the signed analog output, otherwise the low bits are all forced to match the inverse of the topmost bit, i.e.:
         * 1x xxxx xxxx xxxx -> 0b10000000
         * 11 1bcd efgh xxxx -> 0b1bcdefgh
         * 00 0bcd efgh xxxx -> 0b0bcdefgh
         * 0x xxxx xxxx xxxx -> 0b01111111
         */
        if (cliptemp > 2047) {
            cliptemp = 2047;
        }
        else if (cliptemp < -2048) {
            cliptemp = -2048;
        }
        /* at this point the analog output is tapped */
        if (TMS5220.ALLOW_4_LSB) {
            // input:  ssss snnn nnnn nnnn
            // N taps:       ^^^ ^         = 0x0780
            // output: snnn nnnn nnnn NNNN
            return (cliptemp << 4) | ((cliptemp & 0x780) >> 7); // upshift and range adjust
        }
        else {
            cliptemp &= ~0xF;
            // input:  ssss snnn nnnn 0000
            // N taps:       ^^^ ^^^^      = 0x07F0
            // P taps:       ^             = 0x0400
            // output: snnn nnnn NNNN NNNP
            return (cliptemp << 4) | ((cliptemp & 0x7F0) >> 3) | ((cliptemp & 0x400) >> 10); // upshift and range adjust
        }
    },

    /**********************************************************************************************

     matrix_multiply -- does the proper multiply and shift
     a is the k coefficient and is clamped to 10 bits (9 bits plus a sign)
     b is the running result and is clamped to 14 bits.
     output is 14 bits, but note the result LSB bit is always 1.
     Because the low 4 bits of the result are trimmed off before
     output, this makes almost no difference in the computation.

     **********************************************************************************************/
    matrix_multiply: function (a, b) {
        while (a > 511) {
            a -= 1024;
        }
        while (a < -512) {
            a += 1024;
        }
        while (b > 16383) {
            b -= 32768;
        }
        while (b < -16384) {
            b += 32768;
        }
        return ((a * b) >> 9) | 1; // &(~1);
    },

    /**********************************************************************************************

     lattice_filter -- executes one 'full run' of the lattice filter on a specific byte of
     excitation data, and specific values of all the current k constants,  and returns the
     resulting sample.

     ***********************************************************************************************/

    lattice_filter: function () {
        // Lattice filter here
        // Aug/05/07: redone as unrolled loop, for clarity - LN
        /* Originally Copied verbatim from table I in US patent 4,209,804, now updated to be in same order as the actual chip does it, not that it matters.
         notation equivalencies from table:
         Yn(i) == m_u[n-1]
         Kn = m_current_k[n-1]
         bn = m_x[n-1]
         */
        /*
         int ep = matrix_multiply(m_previous_energy, (m_excitation_data<<6));  //Y(11)
         m_u[10] = ep;
         for (int i = 0; i < 10; i++)
         {
         int ii = 10-i; // for m = 10, this would be 11 - i, and since i is from 1 to 10, then ii ranges from 10 to 1
         //int jj = ii+1; // this variable, even on the fortran version, is never used. it probably was intended to be used on the two lines below the next one to save some redundant additions on each.
         ep = ep - (((m_current_k[ii-1] * m_x[ii-1])>>9)|1); // subtract reflection from lower stage 'top of lattice'
         m_u[ii-1] = ep;
         m_x[ii] = m_x[ii-1] + (((m_current_k[ii-1] * ep)>>9)|1); // add reflection from upper stage 'bottom of lattice'
         }
         m_x[0] = ep; // feed the last section of the top of the lattice directly to the bottom of the lattice
         */
        var m_u = this.m_u;
        var m_x = this.m_x;
        var m_current_k = this.m_current_k;
        m_u[10] = this.matrix_multiply(this.m_previous_energy, (this.m_excitation_data << 6));  //Y(11)
        m_u[9] = m_u[10] - this.matrix_multiply(m_current_k[9], m_x[9]);
        m_u[8] = m_u[9] - this.matrix_multiply(m_current_k[8], m_x[8]);
        m_u[7] = m_u[8] - this.matrix_multiply(m_current_k[7], m_x[7]);
        m_u[6] = m_u[7] - this.matrix_multiply(m_current_k[6], m_x[6]);
        m_u[5] = m_u[6] - this.matrix_multiply(m_current_k[5], m_x[5]);
        m_u[4] = m_u[5] - this.matrix_multiply(m_current_k[4], m_x[4]);
        m_u[3] = m_u[4] - this.matrix_multiply(m_current_k[3], m_x[3]);
        m_u[2] = m_u[3] - this.matrix_multiply(m_current_k[2], m_x[2]);
        m_u[1] = m_u[2] - this.matrix_multiply(m_current_k[1], m_x[1]);
        m_u[0] = m_u[1] - this.matrix_multiply(m_current_k[0], m_x[0]);
        m_x[9] = m_x[8] + this.matrix_multiply(m_current_k[8], m_u[8]);
        m_x[8] = m_x[7] + this.matrix_multiply(m_current_k[7], m_u[7]);
        m_x[7] = m_x[6] + this.matrix_multiply(m_current_k[6], m_u[6]);
        m_x[6] = m_x[5] + this.matrix_multiply(m_current_k[5], m_u[5]);
        m_x[5] = m_x[4] + this.matrix_multiply(m_current_k[4], m_u[4]);
        m_x[4] = m_x[3] + this.matrix_multiply(m_current_k[3], m_u[3]);
        m_x[3] = m_x[2] + this.matrix_multiply(m_current_k[2], m_u[2]);
        m_x[2] = m_x[1] + this.matrix_multiply(m_current_k[1], m_u[1]);
        m_x[1] = m_x[0] + this.matrix_multiply(m_current_k[0], m_u[0]);
        m_x[0] = m_u[0];
        this.m_previous_energy = this.m_current_energy;
        // this.log.info(m_u[0]);
        return m_u[0];
    },


    /**********************************************************************************************

     process_command -- extract a byte from the FIFO and interpret it as a command

     ***********************************************************************************************/

    process_command: function (cmd) {
        /* parse the command */
        switch (cmd & 0x70) {
            case 0x10 : /* read byte */
                this.log.info("Speech: read byte");
                if (this.m_talk_status === 0) { /* TALKST must be clear for RDBY */
                    if (this.m_schedule_dummy_read) {
                        this.m_schedule_dummy_read = false;
                        this.rom_read(1);
                    }
                    this.m_data_register = this.rom_read(8);
                    /* read one byte from speech ROM... */
                    this.m_RDB_flag = true;
                }
                break;

            case 0x00:
            case 0x20: /* set rate (tms5220c and cd2501ecd only), otherwise NOP */
                this.log.info("Speech: load frame rate");
                if (TMS5220.HAS_RATE_CONTROL) {
                    this.m_c_variant_rate = cmd & 0x0F;
                }
                break;

            case 0x30 : /* read and branch */
                if (!this.m_talk_status) {/* TALKST must be clear for RB */
                    this.log.info("Speech: read and branch");
                    this.m_RDB_flag = false;
                    this.rom_read_and_branch();
                }
                break;

            case 0x40 : /* load address */
                if (!this.m_talk_status) { /* TALKST must be clear for LA */
                    this.log.debug("Speech: load address nybble " + (cmd & 0x0f).toHexByte());
                    /* tms5220 data sheet says that if we load only one 4-bit nibble, it won't work.
                     This code does not care about this. */
                    this.rom_load_address(cmd & 0x0f);
                    this.m_schedule_dummy_read = true;
                }
                break;

            case 0x50 : /* speak */
                this.log.info("Speech: speak");
                if (this.m_schedule_dummy_read) {
                    this.m_schedule_dummy_read = false;
                    this.rom_read(1);
                }
                this.m_speaking_now = true;
                this.m_speak_external = false;
                this.m_talk_status = true;
                /* start immediately */
                /* clear out variables before speaking */
                // TO-DO: similar to the victory case described above, but for VSM speech
                this.m_subcycle = this.m_subc_reload;
                this.m_PC = 0;
                this.m_IP = TMS5220.reload_table[this.m_c_variant_rate & 0x3];
                this.m_new_frame_energy_idx = 0;
                this.m_new_frame_pitch_idx = 0;
                var i;
                for (i = 0; i < 4; i++) {
                    this.m_new_frame_k_idx[i] = 0;
                }
                for (i = 4; i < 7; i++) {
                    this.m_new_frame_k_idx[i] = 0xF;
                }
                for (i = 7; i < this.m_coeff.num_k; i++) {
                    this.m_new_frame_k_idx[i] = 0x7;
                }
                break;

            case 0x60 : /* speak external */
                this.log.info("Speech: speak external");
                //SPKEXT going active activates SPKEE which clears the fifo
                this.m_fifo_head = this.m_fifo_tail = this.m_fifo_count = this.m_fifo_bits_taken = 0;
                this.m_speak_external = 1;
                this.m_RDB_flag = false;
                break;

            case 0x70 : /* reset */
                this.log.info("Speech: reset");
                if (this.m_schedule_dummy_read) {
                    this.m_schedule_dummy_read = false;
                    this.rom_read(1);
                }
                this.reset();
                break;
        }

        /* update the buffer low state */
        this.update_status_and_ints();
    },

    /******************************************************************************************

     parse_frame -- parse a new frame's worth of data; returns 0 if not enough bits in buffer

     ******************************************************************************************/

    parse_frame: function () {
        var indx, i, rep_flag;

        // We actually don't care how many bits are left in the fifo here; the frame subpart will be processed normally,
        // and any bits extracted 'past the end' of the fifo will be read as zeroes; the fifo being emptied will set the
        // /BE latch which will halt speech exactly as if a stop frame had been encountered (instead of whatever partial
        // frame was read); the same exact circuitry is used for both on the real chip, see us patent 4335277 sheet 16,
        // gates 232a (decode stop frame) and 232b (decode /BE plus DDIS (decode disable) which is active during speak external).

        /* if the chip is a tms5220C, and the rate mode is set to that each frame (0x04 bit set)
         has a 2 bit rate preceding it, grab two bits here and store them as the rate; */
        if ((this.m_c_variant_rate & 0x04) !== 0) {
            indx = this.extract_bits(2);
            this.m_IP = TMS5220.reload_table[indx];
        }
        else { // non-5220C and 5220C in fixed rate mode
            this.m_IP = TMS5220.reload_table[this.m_c_variant_rate & 0x3];
        }

        this.update_status_and_ints();
        if (!this.m_talk_status) {
            // goto ranout;
            this.log.warn("Ran out of bits on a parse (1)");
            return;
        }

        // attempt to extract the energy index
        this.m_new_frame_energy_idx = this.extract_bits(this.m_coeff.energy_bits);
        this.update_status_and_ints();
        if (!this.m_talk_status) {
            // goto ranout;
            this.log.warn("Ran out of bits on a parse (2)");
            return;
        }
        // if the energy index is 0 or 15, we're done
        if ((this.m_new_frame_energy_idx === 0) || (this.m_new_frame_energy_idx === 15)) {
            return;
        }

        // attempt to extract the repeat flag
        rep_flag = this.extract_bits(1);

        // attempt to extract the pitch
        this.m_new_frame_pitch_idx = this.extract_bits(this.m_coeff.pitch_bits);
        this.update_status_and_ints();
        if (!this.m_talk_status) {
            // goto ranout;
            this.log.warn("Ran out of bits on a parse (3)");
            return;
        }

        // if this is a repeat frame, just do nothing, it will reuse the old coefficients
        if (rep_flag) {
            return;
        }

        // extract first 4 K coefficients
        for (i = 0; i < 4; i++) {
            this.m_new_frame_k_idx[i] = this.extract_bits(this.m_coeff.kbits[i]);
            this.update_status_and_ints();
            if (!this.m_talk_status) {
                // goto ranout;
                this.log.warn("Ran out of bits on a parse (4)");
                return;
            }
        }

        // if the pitch index was zero, we only need 4 K's...
        if (this.m_new_frame_pitch_idx === 0) {
            /* and the rest of the coefficients are zeroed, but that's done in the generator code */
            return;
        }

        // If we got here, we need the remaining 6 K's
        for (i = 4; i < this.m_coeff.num_k; i++) {
            this.m_new_frame_k_idx[i] = this.extract_bits(this.m_coeff.kbits[i]);
            this.update_status_and_ints();
            if (!this.m_talk_status) {
                // goto ranout;
                this.log.warn("Ran out of bits on a parse (5)");
                return;
            }
        }

        if (this.m_speak_external) {
            this.log.debug("Parsed a frame successfully in FIFO - bits remaining: " + (this.m_fifo_count * 8 - this.m_fifo_bits_taken));
        }
        else {
            this.log.debug("Parsed a frame successfully in ROM\n");
        }

        // ranout:
        // return;
    },

    /**********************************************************************************************

     set_interrupt_state -- generate an interrupt

     ***********************************************************************************************/

    set_interrupt_state: function (state) {
        if (this.m_irq_handler && state !== this.m_irq_pin) {
            this.m_irq_handler(!state);
        }
        this.m_irq_pin = state;
    },

    /**********************************************************************************************

     update_ready_state -- update the ready line

     ***********************************************************************************************/

    update_ready_state: function () {
        var state = this.ready_read();
        if (this.m_readyq_handler && state !== this.m_ready_pin) {
            this.m_readyq_handler(!state);
        }
        this.m_ready_pin = state;
    },

    //-------------------------------------------------
    //  device_reset - device-specific reset
    //-------------------------------------------------

    device_reset: function () {
        // var i;

        this.m_digital_select = TMS5220.FORCE_DIGITAL; // assume analog output
        /* initialize the FIFO */
        this.m_fifo = new Uint8Array(TMS5220.FIFO_SIZE);
        this.m_fifo_head = this.m_fifo_tail = this.m_fifo_count = this.m_fifo_bits_taken = 0;

        /* initialize the chip state */
        /* Note that we do not actually clear IRQ on start-up : IRQ is even raised if m_buffer_empty or m_buffer_low are 0 */
        this.m_speaking_now = this.m_speak_external = this.m_talk_status = false;
        this.m_irq_pin = this.m_ready_pin = 0;
        this.set_interrupt_state(0);
        this.update_ready_state();
        this.m_buffer_empty = this.m_buffer_low = true;

        this.m_RDB_flag = false;

        /* initialize the energy/pitch/k states */
        this.m_new_frame_energy_idx = this.m_current_energy = this.m_target_energy = 0;
        this.m_new_frame_pitch_idx = this.m_current_pitch = this.m_target_pitch = 0;

        this.m_new_frame_k_idx = new Uint8Array(10);
        this.m_current_k = new Int16Array(10);
        this.m_target_k = new Int16Array(10);

        /* initialize the sample generators */
        this.m_inhibit = true;
        this.m_subcycle = this.m_c_variant_rate = this.m_pitch_count = this.m_PC = 0;

        this.m_subc_reload = TMS5220.FORCE_SUBC_RELOAD;
        this.m_OLDE = this.m_OLDP = true;
        this.m_IP = TMS5220.reload_table[this.m_c_variant_rate & 0x3];
        this.m_RNG = 0x1FFF;

        this.m_u = new Int32Array(11);
        this.m_x = new Int32Array(10);

        this.rom_load_address(0);
        // MZ: Do the dummy read immediately. The previous line will cause a
        // shift in the address pointer in the VSM. When the next command is a
        // load_address, no dummy read will occur, hence the address will be
        // falsely shifted.
        this.rom_read(1);
        this.m_schedule_dummy_read = false;
    },

    /**********************************************************************************************

     Speech ROM function

    ***********************************************************************************************/

    /*
     Read 'count' bits serially from speech ROM
    */
    rom_read: function (count) {
        var val;

        if (this.m_load_pointer !== 0) {   /* first read after load address is ignored */
            this.m_load_pointer = 0;
            count--;
        }

        if (this.m_speechROMaddr < this.m_speechROMlen) {
            if (count < this.m_ROM_bits_count) {
                this.m_ROM_bits_count -= count;
                val = (TMS5220.ROM[this.m_speechROMaddr] >> this.m_ROM_bits_count) & (0xFF >> (8 - count));
            }
            else {
                val = TMS5220.ROM[this.m_speechROMaddr] << 8;

                this.m_speechROMaddr = (this.m_speechROMaddr + 1) & (this.m_speechROMlen - 1);

                if (this.m_speechROMaddr < this.m_speechROMlen) {
                    val |= TMS5220.ROM[this.m_speechROMaddr];
                }

                this.m_ROM_bits_count += 8 - count;

                val = (val >> this.m_ROM_bits_count) & (0xFF >> (8 - count));
            }
        }
        else {
            val = 0;
        }

        return val;
    },

    /*
     Write an address nibble to speech ROM
     */
    rom_load_address: function (data)
    {
        /* tms5220 data sheet says that if we load only one 4-bit nibble, it won't work.
         This code does not care about this. */
        this.m_speechROMaddr = ( (this.m_speechROMaddr & ~(0xf << this.m_load_pointer))
            | (((data & 0xf)) << this.m_load_pointer) ) & (this.m_speechROMlen - 1);
        this.m_load_pointer += 4;
        this.m_ROM_bits_count = 8;
    },

    /*
     Perform a read and branch command
     */
    rom_read_and_branch: function ()
    {
        /* tms5220 data sheet says that if more than one speech ROM (tms6100) is present,
         there is a bus contention.  This code does not care about this. */
        if (this.m_speechROMaddr < this.m_speechROMlen - 1) {
            this.m_speechROMaddr = (this.m_speechROMaddr & 0x3c000)
                | ((((TMS5220.ROM[this.m_speechROMaddr]) << 8)
                | TMS5220.ROM[this.m_speechROMaddr + 1]) & 0x3fff);
        }
        else if (this.m_speechROMaddr === this.m_speechROMlen - 1) {
            this.m_speechROMaddr = (this.m_speechROMaddr & 0x3c000)
                | (((TMS5220.ROM[this.m_speechROMaddr]) << 8) & 0x3fff);
        }
        else {
            this.m_speechROMaddr = (this.m_speechROMaddr & 0x3c000);
        }

        this.m_ROM_bits_count = 8;
    }
};

TMS5220.ROM = [
    0xAA, 0x04, 0x4D, 0x4F, 0x52, 0x45, 0x04, 0xB6, 0x0E, 0xB5, 0x00, 0x46, 0x42, 0x51, 0x01, 0x2D,
    0x09, 0xA8, 0x00, 0x18, 0x00, 0x48, 0xDC, 0x7D, 0x01, 0x2E, 0x00, 0x00, 0x00, 0x22, 0x00, 0x50,
    0xEC, 0x5C, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0xC3, 0x46, 0x01, 0x31, 0x00, 0x0E,
    0x00, 0x4A, 0x00, 0x14, 0x09, 0x53, 0x01, 0x32, 0x00, 0x00, 0x00, 0x40, 0x00, 0x14, 0x5C, 0x3E,
    0x01, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x9A, 0x4D, 0x01, 0x34, 0x00, 0x36, 0x00, 0x54,
    0x00, 0x14, 0xE7, 0x4A, 0x01, 0x35, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x15, 0x31, 0x77, 0x01, 0x36,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0xA8, 0x40, 0x01, 0x37, 0x00, 0x2C, 0x00, 0xA9, 0x00, 0x15,
    0xE8, 0x4F, 0x01, 0x38, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x16, 0x37, 0x2D, 0x01, 0x39, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x16, 0x64, 0x80, 0x01, 0x41, 0x00, 0x72, 0x00, 0x90, 0x00, 0x16, 0xE4, 0x1C,
    0x02, 0x41, 0x31, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x17, 0x00, 0x14, 0x05, 0x41, 0x42, 0x4F, 0x55,
    0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x14, 0x55, 0x05, 0x41, 0x46, 0x54, 0x45, 0x52, 0x00,
    0x86, 0x00, 0xD1, 0x00, 0x17, 0x69, 0x3C, 0x05, 0x41, 0x47, 0x41, 0x49, 0x4E, 0x00, 0x00, 0x00,
    0xC5, 0x00, 0x17, 0xA5, 0x62, 0x03, 0x41, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x07,
    0x29, 0x02, 0x41, 0x4D, 0x00, 0xB7, 0x00, 0xDC, 0x00, 0x18, 0x30, 0x46, 0x02, 0x41, 0x4E, 0x00,
    0x00, 0x00, 0xE7, 0x00, 0x18, 0x76, 0x36, 0x03, 0x41, 0x4E, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0xAC, 0x67, 0x06, 0x41, 0x4E, 0x53, 0x57, 0x45, 0x52, 0x00, 0x68, 0x01, 0x7E, 0x00, 0x19,
    0x13, 0x4F, 0x03, 0x41, 0x4E, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x62, 0x45, 0x03, 0x41,
    0x52, 0x45, 0x01, 0x02, 0x01, 0x1A, 0x00, 0x55, 0x6E, 0x32, 0x02, 0x41, 0x53, 0x00, 0x00, 0x01,
    0x25, 0x00, 0x19, 0xA7, 0x41, 0x06, 0x41, 0x53, 0x53, 0x55, 0x4D, 0x45, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x19, 0xE8, 0x3D, 0x02, 0x41, 0x54, 0x01, 0x0E, 0x01, 0x56, 0x00, 0x1A, 0x25, 0x1D, 0x01,
    0x42, 0x00, 0x00, 0x01, 0x49, 0x00, 0x1A, 0x42, 0x22, 0x04, 0x42, 0x41, 0x43, 0x4B, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1A, 0x64, 0x2B, 0x04, 0x42, 0x41, 0x53, 0x45, 0x01, 0x3F, 0x01, 0x63, 0x00,
    0x1A, 0x8F, 0x4F, 0x02, 0x42, 0x45, 0x00, 0x00, 0x01, 0x6E, 0x00, 0x1A, 0x42, 0x22, 0x07, 0x42,
    0x45, 0x54, 0x57, 0x45, 0x45, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0xDE, 0x69, 0x05, 0x42,
    0x4C, 0x41, 0x43, 0x4B, 0x01, 0x34, 0x01, 0xCD, 0x00, 0x1B, 0x47, 0x43, 0x04, 0x42, 0x4C, 0x55,
    0x45, 0x00, 0x00, 0x01, 0x99, 0x00, 0x1B, 0x8A, 0x2C, 0x04, 0x42, 0x4F, 0x54, 0x48, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1B, 0xB6, 0x34, 0x06, 0x42, 0x4F, 0x54, 0x54, 0x4F, 0x4D, 0x01, 0x8C, 0x01,
    0xB5, 0x00, 0x1B, 0xEA, 0x36, 0x03, 0x42, 0x55, 0x54, 0x00, 0x00, 0x01, 0xC1, 0x00, 0x1C, 0x20,
    0x28, 0x03, 0x42, 0x55, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x48, 0x3E, 0x02, 0x42, 0x59,
    0x01, 0xA6, 0x01, 0xEE, 0x00, 0x1C, 0x48, 0x3E, 0x03, 0x42, 0x59, 0x45, 0x00, 0x00, 0x01, 0xE4,
    0x00, 0x1C, 0x48, 0x3E, 0x01, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x86, 0x53, 0x03, 0x43,
    0x41, 0x4E, 0x01, 0xD8, 0x01, 0xFA, 0x00, 0x1C, 0xD9, 0x37, 0x08, 0x43, 0x41, 0x53, 0x53, 0x45,
    0x54, 0x54, 0x45, 0x00, 0x00, 0x02, 0x0B, 0x00, 0x1D, 0x10, 0x37, 0x06, 0x43, 0x45, 0x4E, 0x54,
    0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x47, 0x3B, 0x05, 0x43, 0x48, 0x45, 0x43, 0x4B,
    0x00, 0xF3, 0x03, 0x72, 0x00, 0x1D, 0x82, 0x20, 0x06, 0x43, 0x48, 0x4F, 0x49, 0x43, 0x45, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1D, 0xA2, 0x44, 0x05, 0x43, 0x4C, 0x45, 0x41, 0x52, 0x02, 0x28, 0x02,
    0x45, 0x00, 0x1D, 0xE6, 0x3A, 0x05, 0x43, 0x4F, 0x4C, 0x4F, 0x52, 0x00, 0x00, 0x02, 0x53, 0x00,
    0x1E, 0x20, 0x34, 0x04, 0x43, 0x4F, 0x4D, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x54, 0x33,
    0x05, 0x43, 0x4F, 0x4D, 0x45, 0x53, 0x02, 0x37, 0x02, 0x8C, 0x00, 0x1E, 0x87, 0x57, 0x05, 0x43,
    0x4F, 0x4D, 0x4D, 0x41, 0x00, 0x00, 0x02, 0x7C, 0x00, 0x1E, 0xDE, 0x3C, 0x07, 0x43, 0x4F, 0x4D,
    0x4D, 0x41, 0x4E, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1A, 0x57, 0x08, 0x43, 0x4F, 0x4D,
    0x50, 0x4C, 0x45, 0x54, 0x45, 0x02, 0x6E, 0x02, 0x9D, 0x00, 0x1F, 0x71, 0x5C, 0x09, 0x43, 0x4F,
    0x4D, 0x50, 0x4C, 0x45, 0x54, 0x45, 0x44, 0x00, 0x00, 0x02, 0xAF, 0x00, 0x1F, 0xCD, 0x67, 0x08,
    0x43, 0x4F, 0x4D, 0x50, 0x55, 0x54, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x34, 0x57,
    0x09, 0x43, 0x4F, 0x4E, 0x4E, 0x45, 0x43, 0x54, 0x45, 0x44, 0x02, 0x60, 0x03, 0x18, 0x00, 0x20,
    0x8B, 0x68, 0x07, 0x43, 0x4F, 0x4E, 0x53, 0x4F, 0x4C, 0x45, 0x00, 0x00, 0x02, 0xE2, 0x00, 0x20,
    0xF3, 0x49, 0x07, 0x43, 0x4F, 0x52, 0x52, 0x45, 0x43, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x3C, 0x46, 0x06, 0x43, 0x4F, 0x55, 0x52, 0x53, 0x45, 0x02, 0xD2, 0x03, 0x01, 0x00, 0x21, 0x82,
    0x3E, 0x04, 0x43, 0x59, 0x41, 0x4E, 0x00, 0x00, 0x03, 0x0E, 0x00, 0x21, 0xC0, 0x43, 0x01, 0x44,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x03, 0x39, 0x04, 0x44, 0x41, 0x54, 0x41, 0x02, 0xF2, 0x03,
    0x43, 0x00, 0x22, 0x3C, 0x58, 0x06, 0x44, 0x45, 0x43, 0x49, 0x44, 0x45, 0x00, 0x00, 0x03, 0x34,
    0x00, 0x22, 0x94, 0x69, 0x06, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x22, 0xFD, 0x69, 0x03, 0x44, 0x49, 0x44, 0x03, 0x25, 0x03, 0x4F, 0x00, 0x23, 0x66, 0x5E, 0x09,
    0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4E, 0x54, 0x00, 0x00, 0x03, 0x61, 0x00, 0x23, 0xC4,
    0x69, 0x08, 0x44, 0x49, 0x53, 0x4B, 0x45, 0x54, 0x54, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
    0x2D, 0x53, 0x02, 0x44, 0x4F, 0x02, 0xC0, 0x04, 0x12, 0x00, 0x24, 0x80, 0x33, 0x04, 0x44, 0x4F,
    0x45, 0x53, 0x00, 0x00, 0x03, 0x8A, 0x00, 0x24, 0xB3, 0x37, 0x05, 0x44, 0x4F, 0x49, 0x4E, 0x47,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0xEA, 0x54, 0x04, 0x44, 0x4F, 0x4E, 0x45, 0x03, 0x7D, 0x03,
    0xA5, 0x00, 0x25, 0x3E, 0x5B, 0x06, 0x44, 0x4F, 0x55, 0x42, 0x4C, 0x45, 0x00, 0x00, 0x03, 0xB4,
    0x00, 0x25, 0x99, 0x3A, 0x04, 0x44, 0x4F, 0x57, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0xD3,
    0x3F, 0x04, 0x44, 0x52, 0x41, 0x57, 0x03, 0x98, 0x03, 0xE8, 0x00, 0x26, 0x12, 0x56, 0x07, 0x44,
    0x52, 0x41, 0x57, 0x49, 0x4E, 0x47, 0x00, 0x00, 0x03, 0xDE, 0x00, 0x26, 0x68, 0x63, 0x01, 0x45,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0xCB, 0x25, 0x04, 0x45, 0x41, 0x43, 0x48, 0x03, 0xCE, 0x03,
    0xF5, 0x00, 0x26, 0xF0, 0x33, 0x05, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x04, 0x03, 0x00,
    0x16, 0x37, 0x2D, 0x06, 0x45, 0x49, 0x47, 0x48, 0x54, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27,
    0x23, 0x36, 0x06, 0x45, 0x4C, 0x45, 0x56, 0x45, 0x4E, 0x03, 0xC1, 0x04, 0x63, 0x00, 0x27, 0x59,
    0x5D, 0x04, 0x45, 0x4C, 0x53, 0x45, 0x00, 0x00, 0x04, 0x2E, 0x00, 0x27, 0xB6, 0x3F, 0x03, 0x45,
    0x4E, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xF5, 0x71, 0x04, 0x45, 0x4E, 0x44, 0x53, 0x04,
    0x21, 0x04, 0x47, 0x00, 0x28, 0x66, 0x47, 0x05, 0x45, 0x4E, 0x54, 0x45, 0x52, 0x00, 0x00, 0x04,
    0x55, 0x00, 0x28, 0xAD, 0x42, 0x05, 0x45, 0x52, 0x52, 0x4F, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x28, 0xEF, 0x48, 0x07, 0x45, 0x58, 0x41, 0x43, 0x54, 0x4C, 0x59, 0x04, 0x3A, 0x04, 0x89, 0x00,
    0x29, 0x37, 0x68, 0x03, 0x45, 0x59, 0x45, 0x00, 0x00, 0x04, 0x7F, 0x00, 0x37, 0x93, 0x3C, 0x01,
    0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x9F, 0x23, 0x07, 0x46, 0x49, 0x46, 0x54, 0x45, 0x45,
    0x4E, 0x04, 0x73, 0x04, 0x99, 0x00, 0x29, 0xC2, 0x5B, 0x05, 0x46, 0x49, 0x46, 0x54, 0x59, 0x00,
    0x00, 0x04, 0xA7, 0x00, 0x2A, 0x1D, 0x43, 0x06, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x2A, 0x60, 0x77, 0x04, 0x46, 0x49, 0x4E, 0x44, 0x02, 0x1A, 0x07, 0x2A, 0x00,
    0x2A, 0xD7, 0x47, 0x04, 0x46, 0x49, 0x4E, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x1E, 0x3D,
    0x06, 0x46, 0x49, 0x4E, 0x49, 0x53, 0x48, 0x04, 0xC3, 0x04, 0xDF, 0x00, 0x2B, 0x5B, 0x39, 0x08,
    0x46, 0x49, 0x4E, 0x49, 0x53, 0x48, 0x45, 0x44, 0x00, 0x00, 0x04, 0xF0, 0x00, 0x2B, 0x94, 0x43,
    0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xD7, 0x3D, 0x03, 0x46,
    0x49, 0x54, 0x04, 0xD0, 0x05, 0x23, 0x00, 0x2C, 0x14, 0x2A, 0x04, 0x46, 0x49, 0x56, 0x45, 0x00,
    0x00, 0x05, 0x17, 0x00, 0x15, 0x31, 0x77, 0x03, 0x46, 0x4F, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x14, 0xE7, 0x4A, 0x05, 0x46, 0x4F, 0x52, 0x54, 0x59, 0x05, 0x0A, 0x05, 0x31, 0x00, 0x2C, 0x3E,
    0x41, 0x04, 0x46, 0x4F, 0x55, 0x52, 0x00, 0x00, 0x05, 0x3E, 0x00, 0x14, 0xE7, 0x4A, 0x08, 0x46,
    0x4F, 0x55, 0x52, 0x54, 0x45, 0x45, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x7F, 0x9A, 0x06,
    0x46, 0x4F, 0x55, 0x52, 0x54, 0x48, 0x04, 0xFE, 0x05, 0x9D, 0x00, 0x2D, 0x19, 0x5B, 0x04, 0x46,
    0x52, 0x4F, 0x4D, 0x00, 0x00, 0x05, 0x6B, 0x00, 0x2D, 0x74, 0x48, 0x05, 0x46, 0x52, 0x4F, 0x4E,
    0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xBC, 0x2F, 0x01, 0x47, 0x05, 0x5E, 0x05, 0x83, 0x00,
    0x2D, 0xEB, 0x3D, 0x05, 0x47, 0x41, 0x4D, 0x45, 0x53, 0x00, 0x00, 0x05, 0x91, 0x00, 0x2E, 0x28,
    0x64, 0x03, 0x47, 0x45, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x8C, 0x2E, 0x07, 0x47, 0x45,
    0x54, 0x54, 0x49, 0x4E, 0x47, 0x05, 0x79, 0x05, 0xC8, 0x00, 0x2E, 0xBA, 0x7E, 0x04, 0x47, 0x49,
    0x56, 0x45, 0x00, 0x00, 0x05, 0xBA, 0x00, 0x2F, 0x38, 0x55, 0x05, 0x47, 0x49, 0x56, 0x45, 0x53,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x8D, 0x6F, 0x02, 0x47, 0x4F, 0x05, 0xAD, 0x05, 0xD3, 0x00,
    0x2F, 0xFC, 0x35, 0x04, 0x47, 0x4F, 0x45, 0x53, 0x00, 0x00, 0x05, 0xE0, 0x00, 0x30, 0x31, 0x48,
    0x05, 0x47, 0x4F, 0x49, 0x4E, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x79, 0x5D, 0x04, 0x47,
    0x4F, 0x4F, 0x44, 0x05, 0x4F, 0x06, 0x8B, 0x00, 0x30, 0xD6, 0x24, 0x09, 0x47, 0x4F, 0x4F, 0x44,
    0x20, 0x57, 0x4F, 0x52, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xFA, 0x4E, 0x07, 0x47, 0x4F,
    0x4F, 0x44, 0x42, 0x59, 0x45, 0x05, 0xFB, 0x06, 0x1D, 0x00, 0x31, 0x48, 0x58, 0x03, 0x47, 0x4F,
    0x54, 0x00, 0x00, 0x06, 0x29, 0x00, 0x31, 0xA0, 0x31, 0x04, 0x47, 0x52, 0x41, 0x59, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x31, 0xD1, 0x4C, 0x05, 0x47, 0x52, 0x45, 0x45, 0x4E, 0x06, 0x0D, 0x06, 0x5C,
    0x00, 0x32, 0x1D, 0x61, 0x05, 0x47, 0x55, 0x45, 0x53, 0x53, 0x00, 0x00, 0x06, 0x52, 0x00, 0x32,
    0x7E, 0x42, 0x01, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0xC0, 0x2F, 0x03, 0x48, 0x41, 0x44,
    0x06, 0x44, 0x06, 0x68, 0x00, 0x32, 0xEF, 0x4A, 0x04, 0x48, 0x41, 0x4E, 0x44, 0x00, 0x00, 0x06,
    0x75, 0x00, 0x33, 0x39, 0x46, 0x0D, 0x48, 0x41, 0x4E, 0x44, 0x48, 0x45, 0x4C, 0x44, 0x20, 0x55,
    0x4E, 0x49, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x7F, 0x86, 0x03, 0x48, 0x41, 0x53, 0x06,
    0x36, 0x06, 0xD9, 0x00, 0x34, 0x05, 0x45, 0x04, 0x48, 0x41, 0x56, 0x45, 0x00, 0x00, 0x06, 0xA4,
    0x00, 0x34, 0x4A, 0x42, 0x04, 0x48, 0x45, 0x41, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x8C,
    0x59, 0x04, 0x48, 0x45, 0x41, 0x52, 0x06, 0x97, 0x06, 0xBE, 0x00, 0x34, 0xE5, 0x35, 0x05, 0x48,
    0x45, 0x4C, 0x4C, 0x4F, 0x00, 0x00, 0x06, 0xCC, 0x00, 0x35, 0x1A, 0x57, 0x04, 0x48, 0x45, 0x4C,
    0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x71, 0x3D, 0x04, 0x48, 0x45, 0x52, 0x45, 0x06, 0xB1,
    0x07, 0x01, 0x00, 0x34, 0xE5, 0x35, 0x06, 0x48, 0x49, 0x47, 0x48, 0x45, 0x52, 0x00, 0x00, 0x06,
    0xF5, 0x00, 0x35, 0xAE, 0x5C, 0x03, 0x48, 0x49, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x0A,
    0x34, 0x04, 0x48, 0x4F, 0x4D, 0x45, 0x06, 0xE6, 0x07, 0x0E, 0x00, 0x36, 0x3E, 0x4B, 0x03, 0x48,
    0x4F, 0x57, 0x00, 0x00, 0x07, 0x1A, 0x00, 0x36, 0x89, 0x66, 0x07, 0x48, 0x55, 0x4E, 0x44, 0x52,
    0x45, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xEF, 0x68, 0x05, 0x48, 0x55, 0x52, 0x52, 0x59,
    0x05, 0xEE, 0x08, 0x61, 0x00, 0x37, 0x57, 0x3C, 0x01, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37,
    0x93, 0x3C, 0x05, 0x49, 0x20, 0x57, 0x49, 0x4E, 0x07, 0x38, 0x07, 0x50, 0x00, 0x37, 0xCF, 0x81,
    0x02, 0x49, 0x46, 0x00, 0x00, 0x07, 0x5B, 0x00, 0x38, 0x50, 0x22, 0x02, 0x49, 0x4E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x38, 0x72, 0x43, 0x04, 0x49, 0x4E, 0x43, 0x48, 0x07, 0x42, 0x07, 0x96, 0x00,
    0x38, 0xB5, 0x45, 0x06, 0x49, 0x4E, 0x43, 0x48, 0x45, 0x53, 0x00, 0x00, 0x07, 0x82, 0x00, 0x38,
    0xFA, 0x51, 0x0B, 0x49, 0x4E, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x39, 0x4B, 0x72, 0x0C, 0x49, 0x4E, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49,
    0x4F, 0x4E, 0x53, 0x07, 0x73, 0x07, 0xAB, 0x00, 0x39, 0xBD, 0x75, 0x02, 0x49, 0x53, 0x00, 0x00,
    0x07, 0xB6, 0x00, 0x3A, 0x32, 0x48, 0x02, 0x49, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x7A,
    0x34, 0x01, 0x4A, 0x07, 0x66, 0x08, 0x10, 0x00, 0x3A, 0xAE, 0x3F, 0x08, 0x4A, 0x4F, 0x59, 0x53,
    0x54, 0x49, 0x43, 0x4B, 0x00, 0x00, 0x07, 0xDC, 0x00, 0x3A, 0xED, 0x5F, 0x04, 0x4A, 0x55, 0x53,
    0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x4C, 0x3E, 0x01, 0x4B, 0x07, 0xCB, 0x07, 0xF3, 0x00,
    0x3B, 0x8A, 0x2F, 0x03, 0x4B, 0x45, 0x59, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x3B, 0xB9, 0x30, 0x08,
    0x4B, 0x45, 0x59, 0x42, 0x4F, 0x41, 0x52, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0xE9, 0x66,
    0x04, 0x4B, 0x4E, 0x4F, 0x57, 0x07, 0xE9, 0x08, 0x35, 0x00, 0x3C, 0x4F, 0x40, 0x01, 0x4C, 0x00,
    0x00, 0x08, 0x27, 0x00, 0x3C, 0x8F, 0x41, 0x05, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0xD0, 0x49, 0x06, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x52, 0x08, 0x1D, 0x08, 0x44,
    0x00, 0x3D, 0x19, 0x4E, 0x07, 0x4C, 0x41, 0x52, 0x47, 0x45, 0x53, 0x54, 0x00, 0x00, 0x08, 0x54,
    0x00, 0x3D, 0x67, 0x77, 0x04, 0x4C, 0x41, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xDE,
    0x40, 0x05, 0x4C, 0x45, 0x41, 0x52, 0x4E, 0x07, 0xC1, 0x09, 0x00, 0x00, 0x3E, 0x1E, 0x5A, 0x04,
    0x4C, 0x45, 0x46, 0x54, 0x00, 0x00, 0x08, 0x7C, 0x00, 0x3E, 0x78, 0x3A, 0x04, 0x4C, 0x45, 0x53,
    0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xB2, 0x56, 0x03, 0x4C, 0x45, 0x54, 0x08, 0x6F, 0x08,
    0x95, 0x00, 0x3F, 0x08, 0x27, 0x04, 0x4C, 0x49, 0x4B, 0x45, 0x00, 0x00, 0x08, 0xA2, 0x00, 0x3F,
    0x2F, 0x3B, 0x05, 0x4C, 0x49, 0x4B, 0x45, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x6A, 0x6B,
    0x04, 0x4C, 0x49, 0x4E, 0x45, 0x08, 0x89, 0x08, 0xD7, 0x00, 0x3F, 0xD5, 0x76, 0x04, 0x4C, 0x4F,
    0x41, 0x44, 0x00, 0x00, 0x08, 0xCA, 0x00, 0x40, 0x4B, 0x88, 0x04, 0x4C, 0x4F, 0x4E, 0x47, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x40, 0xD3, 0x6A, 0x04, 0x4C, 0x4F, 0x4F, 0x4B, 0x08, 0xBD, 0x08, 0xE4,
    0x00, 0x41, 0x3D, 0x54, 0x05, 0x4C, 0x4F, 0x4F, 0x4B, 0x53, 0x00, 0x00, 0x08, 0xF2, 0x00, 0x41,
    0x91, 0x56, 0x05, 0x4C, 0x4F, 0x57, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xE7, 0x4C,
    0x01, 0x4D, 0x08, 0xB0, 0x09, 0x4C, 0x00, 0x42, 0x33, 0x34, 0x04, 0x4D, 0x41, 0x44, 0x45, 0x00,
    0x00, 0x09, 0x17, 0x00, 0x42, 0x67, 0x47, 0x07, 0x4D, 0x41, 0x47, 0x45, 0x4E, 0x54, 0x41, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x42, 0xAE, 0x80, 0x04, 0x4D, 0x41, 0x4B, 0x45, 0x09, 0x0A, 0x09, 0x34,
    0x00, 0x43, 0x2E, 0x4F, 0x02, 0x4D, 0x45, 0x00, 0x00, 0x09, 0x3F, 0x00, 0x43, 0x7D, 0x40, 0x04,
    0x4D, 0x45, 0x41, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xBD, 0x48, 0x06, 0x4D, 0x45, 0x4D,
    0x4F, 0x52, 0x59, 0x09, 0x27, 0x09, 0x7C, 0x00, 0x44, 0x05, 0x67, 0x07, 0x4D, 0x45, 0x53, 0x53,
    0x41, 0x47, 0x45, 0x00, 0x00, 0x09, 0x6B, 0x00, 0x44, 0x6C, 0x6B, 0x08, 0x4D, 0x45, 0x53, 0x53,
    0x41, 0x47, 0x45, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0xD7, 0x7A, 0x06, 0x4D, 0x49, 0x44,
    0x44, 0x4C, 0x45, 0x09, 0x5B, 0x09, 0x8B, 0x00, 0x45, 0x51, 0x42, 0x05, 0x4D, 0x49, 0x47, 0x48,
    0x54, 0x00, 0x00, 0x09, 0x99, 0x00, 0x45, 0x93, 0x4C, 0x06, 0x4D, 0x4F, 0x44, 0x55, 0x4C, 0x45,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0xDF, 0x63, 0x01, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51,
    0xB3, 0x7E, 0x04, 0x4D, 0x4F, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x93, 0x4C, 0x04,
    0x4D, 0x4F, 0x56, 0x45, 0x09, 0xB2, 0x09, 0xCC, 0x00, 0x46, 0xDF, 0x5E, 0x04, 0x4D, 0x55, 0x53,
    0x54, 0x00, 0x00, 0x09, 0xD9, 0x00, 0x47, 0x3D, 0x49, 0x01, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x47, 0x86, 0x3A, 0x04, 0x4E, 0x41, 0x4D, 0x45, 0x09, 0xBF, 0x0A, 0x0A, 0x00, 0x47, 0xC0, 0x73,
    0x04, 0x4E, 0x45, 0x41, 0x52, 0x00, 0x00, 0x09, 0xFD, 0x00, 0x48, 0x33, 0x4D, 0x04, 0x4E, 0x45,
    0x45, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x80, 0x5C, 0x08, 0x4E, 0x45, 0x47, 0x41, 0x54,
    0x49, 0x56, 0x45, 0x09, 0xF0, 0x0A, 0x1B, 0x00, 0x48, 0xDC, 0x7D, 0x04, 0x4E, 0x45, 0x58, 0x54,
    0x00, 0x00, 0x0A, 0x28, 0x00, 0x49, 0x59, 0x4C, 0x08, 0x4E, 0x49, 0x43, 0x45, 0x20, 0x54, 0x52,
    0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0xA5, 0xA9, 0x04, 0x4E, 0x49, 0x4E, 0x45, 0x09, 0xE3,
    0x0A, 0x87, 0x00, 0x16, 0x64, 0x80, 0x06, 0x4E, 0x49, 0x4E, 0x45, 0x54, 0x59, 0x00, 0x00, 0x0A,
    0x55, 0x00, 0x4A, 0x4E, 0x5D, 0x02, 0x4E, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x4F, 0x40,
    0x03, 0x4E, 0x4F, 0x54, 0x0A, 0x46, 0x0A, 0x6C, 0x00, 0x4A, 0xAB, 0x2F, 0x03, 0x4E, 0x4F, 0x57,
    0x00, 0x00, 0x0A, 0x78, 0x00, 0x4A, 0xDA, 0x46, 0x06, 0x4E, 0x55, 0x4D, 0x42, 0x45, 0x52, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x4B, 0x20, 0x5D, 0x01, 0x4F, 0x0A, 0x60, 0x0A, 0xA8, 0x00, 0x4B, 0x7D,
    0x3D, 0x02, 0x4F, 0x46, 0x00, 0x00, 0x0A, 0x9C, 0x00, 0x4B, 0xBA, 0x59, 0x03, 0x4F, 0x46, 0x46,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x13, 0x2E, 0x02, 0x4F, 0x48, 0x0A, 0x91, 0x0A, 0xB3, 0x00,
    0x4B, 0x7D, 0x3D, 0x02, 0x4F, 0x4E, 0x00, 0x00, 0x0A, 0xBE, 0x00, 0x4C, 0x41, 0x4A, 0x03, 0x4F,
    0x4E, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x09, 0x53, 0x04, 0x4F, 0x4E, 0x4C, 0x59, 0x0A,
    0x39, 0x0B, 0x68, 0x00, 0x4C, 0x8B, 0x51, 0x02, 0x4F, 0x52, 0x00, 0x00, 0x0A, 0xE2, 0x00, 0x4C,
    0xDC, 0x58, 0x05, 0x4F, 0x52, 0x44, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4D, 0x34, 0x56,
    0x05, 0x4F, 0x54, 0x48, 0x45, 0x52, 0x0A, 0xD7, 0x0A, 0xFE, 0x00, 0x4D, 0x8A, 0x4A, 0x03, 0x4F,
    0x55, 0x54, 0x00, 0x00, 0x0B, 0x0A, 0x00, 0x4D, 0xD4, 0x36, 0x04, 0x4F, 0x56, 0x45, 0x52, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x4E, 0x0A, 0x5C, 0x01, 0x50, 0x0A, 0xF0, 0x0B, 0x3E, 0x00, 0x4E, 0x66,
    0x39, 0x04, 0x50, 0x41, 0x52, 0x54, 0x00, 0x00, 0x0B, 0x2E, 0x00, 0x4E, 0x9F, 0x41, 0x07, 0x50,
    0x41, 0x52, 0x54, 0x4E, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0xE0, 0x51, 0x05, 0x50,
    0x41, 0x52, 0x54, 0x53, 0x0B, 0x21, 0x0B, 0x4C, 0x00, 0x4F, 0x31, 0x50, 0x06, 0x50, 0x45, 0x52,
    0x49, 0x4F, 0x44, 0x00, 0x00, 0x0B, 0x5B, 0x00, 0x4F, 0x81, 0x64, 0x04, 0x50, 0x4C, 0x41, 0x59,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0xE5, 0x48, 0x05, 0x50, 0x4C, 0x41, 0x59, 0x53, 0x0B, 0x17,
    0x0B, 0xC3, 0x00, 0x50, 0x2D, 0x66, 0x06, 0x50, 0x4C, 0x45, 0x41, 0x53, 0x45, 0x00, 0x00, 0x0B,
    0x85, 0x00, 0x50, 0x93, 0x59, 0x05, 0x50, 0x4F, 0x49, 0x4E, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0xEC, 0x5C, 0x08, 0x50, 0x4F, 0x53, 0x49, 0x54, 0x49, 0x4F, 0x4E, 0x0B, 0x76, 0x0B, 0xA4,
    0x00, 0x51, 0x48, 0x6B, 0x08, 0x50, 0x4F, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x00, 0x00, 0x0B,
    0xB5, 0x00, 0x51, 0xB3, 0x7E, 0x05, 0x50, 0x52, 0x45, 0x53, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x52, 0x31, 0x3C, 0x05, 0x50, 0x52, 0x49, 0x4E, 0x54, 0x0B, 0x93, 0x0B, 0xF1, 0x00, 0x52, 0x6D,
    0x3D, 0x07, 0x50, 0x52, 0x49, 0x4E, 0x54, 0x45, 0x52, 0x00, 0x00, 0x0B, 0xE1, 0x00, 0x52, 0xAA,
    0x4F, 0x07, 0x50, 0x52, 0x4F, 0x42, 0x4C, 0x45, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0xF9,
    0x67, 0x08, 0x50, 0x52, 0x4F, 0x42, 0x4C, 0x45, 0x4D, 0x53, 0x0B, 0xD1, 0x0C, 0x02, 0x00, 0x53,
    0x60, 0x8E, 0x07, 0x50, 0x52, 0x4F, 0x47, 0x52, 0x41, 0x4D, 0x00, 0x00, 0x0C, 0x12, 0x00, 0x53,
    0xEE, 0x89, 0x03, 0x50, 0x55, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x77, 0x33, 0x07, 0x50,
    0x55, 0x54, 0x54, 0x49, 0x4E, 0x47, 0x0A, 0xCA, 0x0D, 0x62, 0x00, 0x54, 0xAA, 0x76, 0x01, 0x51,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x20, 0x4E, 0x01, 0x52, 0x0C, 0x2E, 0x0C, 0x42, 0x00, 0x55,
    0x6E, 0x32, 0x08, 0x52, 0x41, 0x4E, 0x44, 0x4F, 0x4D, 0x4C, 0x59, 0x00, 0x00, 0x0C, 0x53, 0x00,
    0x55, 0xA0, 0xB2, 0x04, 0x52, 0x45, 0x41, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x52, 0x61,
    0x05, 0x52, 0x45, 0x41, 0x44, 0x31, 0x0C, 0x38, 0x0C, 0x96, 0x00, 0x57, 0xC1, 0x40, 0x0E, 0x52,
    0x45, 0x41, 0x44, 0x59, 0x20, 0x54, 0x4F, 0x20, 0x53, 0x54, 0x41, 0x52, 0x54, 0x00, 0x00, 0x0C,
    0x85, 0x00, 0x56, 0xB3, 0x92, 0x08, 0x52, 0x45, 0x43, 0x4F, 0x52, 0x44, 0x45, 0x52, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x57, 0x45, 0x7C, 0x03, 0x52, 0x45, 0x44, 0x0C, 0x6E, 0x0C, 0xA2, 0x00, 0x57,
    0xC1, 0x40, 0x05, 0x52, 0x45, 0x46, 0x45, 0x52, 0x00, 0x00, 0x0C, 0xB0, 0x00, 0x58, 0x01, 0x60,
    0x08, 0x52, 0x45, 0x4D, 0x45, 0x4D, 0x42, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x61,
    0x6E, 0x06, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4E, 0x0C, 0x60, 0x0D, 0x12, 0x00, 0x58, 0xCF, 0x6B,
    0x06, 0x52, 0x45, 0x57, 0x49, 0x4E, 0x44, 0x00, 0x00, 0x0C, 0xDF, 0x00, 0x59, 0x3A, 0x88, 0x05,
    0x52, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x38, 0x55, 0x05, 0x52, 0x4F,
    0x55, 0x4E, 0x44, 0x0C, 0xD0, 0x0C, 0xFB, 0x00, 0x59, 0xC2, 0x98, 0x01, 0x53, 0x00, 0x00, 0x0D,
    0x05, 0x00, 0x5A, 0x5A, 0x47, 0x04, 0x53, 0x41, 0x49, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A,
    0xA1, 0x4E, 0x04, 0x53, 0x41, 0x56, 0x45, 0x0C, 0xED, 0x0D, 0x38, 0x00, 0x5A, 0xEF, 0x76, 0x03,
    0x53, 0x41, 0x59, 0x00, 0x00, 0x0D, 0x2B, 0x00, 0x5B, 0x65, 0x3D, 0x04, 0x53, 0x41, 0x59, 0x53,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0xA2, 0x59, 0x06, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4E, 0x0D,
    0x1F, 0x0D, 0x47, 0x00, 0x5B, 0xFB, 0x60, 0x06, 0x53, 0x45, 0x43, 0x4F, 0x4E, 0x44, 0x00, 0x00,
    0x0D, 0x56, 0x00, 0x5C, 0x5B, 0x64, 0x03, 0x53, 0x45, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
    0x86, 0x53, 0x04, 0x53, 0x45, 0x45, 0x53, 0x0C, 0xC1, 0x0E, 0x0C, 0x00, 0x5C, 0xBF, 0x5C, 0x03,
    0x53, 0x45, 0x54, 0x00, 0x00, 0x0D, 0x7B, 0x00, 0x5D, 0x1B, 0x35, 0x05, 0x53, 0x45, 0x56, 0x45,
    0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0xE8, 0x4F, 0x07, 0x53, 0x45, 0x56, 0x45, 0x4E, 0x54,
    0x59, 0x0D, 0x6F, 0x0D, 0x99, 0x00, 0x5D, 0x50, 0x55, 0x05, 0x53, 0x48, 0x41, 0x50, 0x45, 0x00,
    0x00, 0x0D, 0xA7, 0x00, 0x5D, 0xA5, 0x39, 0x06, 0x53, 0x48, 0x41, 0x50, 0x45, 0x53, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x5D, 0xDE, 0x49, 0x05, 0x53, 0x48, 0x49, 0x46, 0x54, 0x0D, 0x89, 0x0D, 0xE2,
    0x00, 0x5E, 0x27, 0x35, 0x05, 0x53, 0x48, 0x4F, 0x52, 0x54, 0x00, 0x00, 0x0D, 0xD2, 0x00, 0x5E,
    0x5C, 0x49, 0x07, 0x53, 0x48, 0x4F, 0x52, 0x54, 0x45, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E,
    0xA5, 0x7F, 0x06, 0x53, 0x48, 0x4F, 0x55, 0x4C, 0x44, 0x0D, 0xC4, 0x0D, 0xF1, 0x00, 0x5F, 0x24,
    0x49, 0x04, 0x53, 0x49, 0x44, 0x45, 0x00, 0x00, 0x0D, 0xFE, 0x00, 0x5F, 0x6D, 0x5B, 0x05, 0x53,
    0x49, 0x44, 0x45, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0xC8, 0x52, 0x03, 0x53, 0x49, 0x58,
    0x0D, 0xB6, 0x0E, 0x60, 0x00, 0x15, 0xA8, 0x40, 0x05, 0x53, 0x49, 0x58, 0x54, 0x59, 0x00, 0x00,
    0x0E, 0x26, 0x00, 0x60, 0x1A, 0x56, 0x05, 0x53, 0x4D, 0x41, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x60, 0x70, 0x3E, 0x07, 0x53, 0x4D, 0x41, 0x4C, 0x4C, 0x45, 0x52, 0x0E, 0x18, 0x0E, 0x44,
    0x00, 0x60, 0xAE, 0x43, 0x08, 0x53, 0x4D, 0x41, 0x4C, 0x4C, 0x45, 0x53, 0x54, 0x00, 0x00, 0x0E,
    0x55, 0x00, 0x60, 0xF1, 0x62, 0x02, 0x53, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x53, 0x44,
    0x04, 0x53, 0x4F, 0x4D, 0x45, 0x0E, 0x34, 0x0E, 0x89, 0x00, 0x61, 0x97, 0x2F, 0x05, 0x53, 0x4F,
    0x52, 0x52, 0x59, 0x00, 0x00, 0x0E, 0x7B, 0x00, 0x61, 0xC6, 0x60, 0x05, 0x53, 0x50, 0x41, 0x43,
    0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x26, 0x37, 0x06, 0x53, 0x50, 0x41, 0x43, 0x45, 0x53,
    0x0E, 0x6D, 0x0E, 0x98, 0x00, 0x62, 0x5D, 0x6F, 0x05, 0x53, 0x50, 0x45, 0x4C, 0x4C, 0x00, 0x00,
    0x0E, 0xA6, 0x00, 0x62, 0xCC, 0x67, 0x06, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x63, 0x33, 0x49, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x0C, 0x1E, 0x11, 0x5B, 0x00,
    0x63, 0x7C, 0x49, 0x04, 0x53, 0x54, 0x45, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0xC5, 0x32,
    0x04, 0x53, 0x54, 0x4F, 0x50, 0x0E, 0xC3, 0x0E, 0xDD, 0x00, 0x63, 0xF7, 0x2C, 0x03, 0x53, 0x55,
    0x4D, 0x00, 0x00, 0x0E, 0xE9, 0x00, 0x61, 0x97, 0x2F, 0x08, 0x53, 0x55, 0x50, 0x50, 0x4F, 0x53,
    0x45, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x23, 0x66, 0x0B, 0x53, 0x55, 0x50, 0x50, 0x4F,
    0x53, 0x45, 0x44, 0x20, 0x54, 0x4F, 0x0E, 0xD0, 0x0F, 0x25, 0x00, 0x64, 0x89, 0x6B, 0x04, 0x53,
    0x55, 0x52, 0x45, 0x00, 0x00, 0x0F, 0x1B, 0x00, 0x64, 0xF4, 0x5D, 0x01, 0x54, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x65, 0x51, 0x3A, 0x04, 0x54, 0x41, 0x4B, 0x45, 0x0F, 0x0E, 0x0F, 0x32, 0x00, 0x65,
    0x8B, 0x34, 0x04, 0x54, 0x45, 0x45, 0x4E, 0x00, 0x00, 0x0F, 0x3F, 0x00, 0x65, 0xBF, 0x44, 0x04,
    0x54, 0x45, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x03, 0x4B, 0x03, 0x54, 0x45, 0x4E,
    0x0E, 0xFA, 0x0F, 0xBC, 0x00, 0x66, 0x4E, 0x48, 0x11, 0x54, 0x45, 0x58, 0x41, 0x53, 0x20, 0x49,
    0x4E, 0x53, 0x54, 0x52, 0x55, 0x4D, 0x45, 0x4E, 0x54, 0x53, 0x00, 0x00, 0x0F, 0x72, 0x00, 0x66,
    0x96, 0xC5, 0x04, 0x54, 0x48, 0x41, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x5B, 0x5B, 0x04,
    0x54, 0x48, 0x41, 0x54, 0x0F, 0x58, 0x0F, 0x8C, 0x00, 0x67, 0xB6, 0x60, 0x11, 0x54, 0x48, 0x41,
    0x54, 0x20, 0x49, 0x53, 0x20, 0x49, 0x4E, 0x43, 0x4F, 0x52, 0x52, 0x45, 0x43, 0x54, 0x00, 0x00,
    0x0F, 0xA6, 0x00, 0x68, 0x16, 0xE8, 0x0D, 0x54, 0x48, 0x41, 0x54, 0x20, 0x49, 0x53, 0x20, 0x52,
    0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0xFE, 0x76, 0x03, 0x54, 0x48, 0x45,
    0x0F, 0x7F, 0x0F, 0xE3, 0x00, 0x69, 0x74, 0x42, 0x04, 0x54, 0x48, 0x45, 0x31, 0x00, 0x00, 0x0F,
    0xD5, 0x00, 0x69, 0xB6, 0x2B, 0x05, 0x54, 0x48, 0x45, 0x49, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x6A, 0x72, 0x6C, 0x04, 0x54, 0x48, 0x45, 0x4E, 0x0F, 0xC8, 0x0F, 0xF0, 0x00, 0x69, 0xE1, 0x91,
    0x05, 0x54, 0x48, 0x45, 0x52, 0x45, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x6A, 0x72, 0x6C, 0x05, 0x54,
    0x48, 0x45, 0x53, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6A, 0xDE, 0x69, 0x04, 0x54, 0x48, 0x45,
    0x59, 0x0F, 0x4C, 0x10, 0xB8, 0x00, 0x6B, 0x47, 0x59, 0x05, 0x54, 0x48, 0x49, 0x4E, 0x47, 0x00,
    0x00, 0x10, 0x27, 0x00, 0x6B, 0xA0, 0x6F, 0x06, 0x54, 0x48, 0x49, 0x4E, 0x47, 0x53, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6C, 0x0F, 0x64, 0x05, 0x54, 0x48, 0x49, 0x4E, 0x4B, 0x10, 0x19, 0x10, 0x44,
    0x00, 0x6C, 0x73, 0x49, 0x05, 0x54, 0x48, 0x49, 0x52, 0x44, 0x00, 0x00, 0x10, 0x52, 0x00, 0x6C,
    0xBC, 0x55, 0x08, 0x54, 0x48, 0x49, 0x52, 0x54, 0x45, 0x45, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x6D, 0x11, 0x91, 0x06, 0x54, 0x48, 0x49, 0x52, 0x54, 0x59, 0x10, 0x36, 0x10, 0x8D, 0x00, 0x6D,
    0xA2, 0x3C, 0x04, 0x54, 0x48, 0x49, 0x53, 0x00, 0x00, 0x10, 0x7F, 0x00, 0x6D, 0xDE, 0x48, 0x05,
    0x54, 0x48, 0x52, 0x45, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x9A, 0x4D, 0x05, 0x54, 0x48,
    0x52, 0x45, 0x57, 0x10, 0x72, 0x10, 0x9B, 0x00, 0x6E, 0x26, 0x43, 0x07, 0x54, 0x48, 0x52, 0x4F,
    0x55, 0x47, 0x48, 0x00, 0x00, 0x10, 0xAB, 0x00, 0x6E, 0x26, 0x43, 0x04, 0x54, 0x49, 0x4D, 0x45,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x69, 0x47, 0x02, 0x54, 0x4F, 0x10, 0x63, 0x11, 0x05, 0x00,
    0x14, 0x5C, 0x3E, 0x08, 0x54, 0x4F, 0x47, 0x45, 0x54, 0x48, 0x45, 0x52, 0x00, 0x00, 0x10, 0xD4,
    0x00, 0x6E, 0xB0, 0x6F, 0x04, 0x54, 0x4F, 0x4E, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F, 0x1F,
    0x6E, 0x03, 0x54, 0x4F, 0x4F, 0x10, 0xC3, 0x10, 0xED, 0x00, 0x14, 0x5C, 0x3E, 0x03, 0x54, 0x4F,
    0x50, 0x00, 0x00, 0x10, 0xF9, 0x00, 0x6F, 0x8D, 0x2E, 0x03, 0x54, 0x52, 0x59, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x6F, 0xBB, 0x54, 0x09, 0x54, 0x52, 0x59, 0x20, 0x41, 0x47, 0x41, 0x49, 0x4E, 0x10,
    0xE1, 0x11, 0x33, 0x00, 0x70, 0x0F, 0x83, 0x04, 0x54, 0x55, 0x52, 0x4E, 0x00, 0x00, 0x11, 0x24,
    0x00, 0x70, 0x92, 0x3C, 0x06, 0x54, 0x57, 0x45, 0x4C, 0x56, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x70, 0xCE, 0x4B, 0x06, 0x54, 0x57, 0x45, 0x4E, 0x54, 0x59, 0x11, 0x17, 0x11, 0x42, 0x00, 0x71,
    0x19, 0x57, 0x03, 0x54, 0x57, 0x4F, 0x00, 0x00, 0x11, 0x4E, 0x00, 0x14, 0x5C, 0x3E, 0x04, 0x54,
    0x59, 0x50, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x70, 0x4E, 0x01, 0x55, 0x10, 0x0C, 0x12,
    0x8D, 0x00, 0x71, 0xBE, 0x36, 0x04, 0x55, 0x48, 0x4F, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71,
    0xF4, 0x51, 0x05, 0x55, 0x4E, 0x44, 0x45, 0x52, 0x11, 0x65, 0x11, 0x80, 0x00, 0x72, 0x45, 0x58,
    0x0A, 0x55, 0x4E, 0x44, 0x45, 0x52, 0x53, 0x54, 0x41, 0x4E, 0x44, 0x00, 0x00, 0x11, 0x93, 0x00,
    0x72, 0x9D, 0x92, 0x05, 0x55, 0x4E, 0x54, 0x49, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x2F,
    0x70, 0x02, 0x55, 0x50, 0x11, 0x72, 0x11, 0xC6, 0x00, 0x73, 0x9F, 0x24, 0x05, 0x55, 0x50, 0x50,
    0x45, 0x52, 0x00, 0x00, 0x11, 0xBA, 0x00, 0x73, 0xC3, 0x40, 0x03, 0x55, 0x53, 0x45, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x74, 0x03, 0x46, 0x01, 0x56, 0x11, 0xAC, 0x11, 0xD0, 0x00, 0x74, 0x49, 0x3E,
    0x04, 0x56, 0x41, 0x52, 0x59, 0x00, 0x00, 0x11, 0xDD, 0x00, 0x74, 0x87, 0x53, 0x04, 0x56, 0x45,
    0x52, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xDA, 0x46, 0x01, 0x57, 0x11, 0xA1, 0x12, 0x33,
    0x00, 0x75, 0x20, 0x7D, 0x04, 0x57, 0x41, 0x49, 0x54, 0x00, 0x00, 0x12, 0x01, 0x00, 0x75, 0x9D,
    0x42, 0x04, 0x57, 0x41, 0x4E, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0xDF, 0x42, 0x05, 0x57,
    0x41, 0x4E, 0x54, 0x53, 0x11, 0xF4, 0x12, 0x1C, 0x00, 0x76, 0x21, 0x5C, 0x03, 0x57, 0x41, 0x59,
    0x00, 0x00, 0x12, 0x28, 0x00, 0x76, 0xB0, 0x67, 0x02, 0x57, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x76, 0x7D, 0x33, 0x05, 0x57, 0x45, 0x49, 0x47, 0x48, 0x12, 0x0E, 0x12, 0x5D, 0x00, 0x76, 0xB0,
    0x67, 0x06, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x12, 0x50, 0x00, 0x75, 0x9D, 0x42,
    0x04, 0x57, 0x45, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x17, 0x45, 0x04, 0x57, 0x45,
    0x52, 0x45, 0x12, 0x41, 0x12, 0x6A, 0x00, 0x77, 0x5C, 0x60, 0x04, 0x57, 0x48, 0x41, 0x54, 0x00,
    0x00, 0x12, 0x77, 0x00, 0x77, 0xBC, 0x2D, 0x0D, 0x57, 0x48, 0x41, 0x54, 0x20, 0x57, 0x41, 0x53,
    0x20, 0x54, 0x48, 0x41, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xE9, 0x8C, 0x04, 0x57, 0x48,
    0x45, 0x4E, 0x11, 0xEA, 0x13, 0x2A, 0x00, 0x78, 0x75, 0x36, 0x05, 0x57, 0x48, 0x45, 0x52, 0x45,
    0x00, 0x00, 0x12, 0xA8, 0x00, 0x78, 0xAB, 0x49, 0x05, 0x57, 0x48, 0x49, 0x43, 0x48, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x78, 0xF4, 0x30, 0x05, 0x57, 0x48, 0x49, 0x54, 0x45, 0x12, 0x9A, 0x12, 0xC4,
    0x00, 0x79, 0x24, 0x45, 0x03, 0x57, 0x48, 0x4F, 0x00, 0x00, 0x12, 0xD0, 0x00, 0x79, 0x69, 0x4B,
    0x03, 0x57, 0x48, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xB4, 0x5D, 0x04, 0x57, 0x49, 0x4C,
    0x4C, 0x12, 0xB6, 0x13, 0x02, 0x00, 0x7A, 0x11, 0x5A, 0x04, 0x57, 0x49, 0x54, 0x48, 0x00, 0x00,
    0x12, 0xF6, 0x00, 0x7A, 0x6B, 0x40, 0x03, 0x57, 0x4F, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14,
    0x09, 0x53, 0x04, 0x57, 0x4F, 0x52, 0x44, 0x12, 0xE9, 0x13, 0x0F, 0x00, 0x7A, 0xAB, 0x5F, 0x05,
    0x57, 0x4F, 0x52, 0x44, 0x53, 0x00, 0x00, 0x13, 0x1D, 0x00, 0x7B, 0x0A, 0x6B, 0x04, 0x57, 0x4F,
    0x52, 0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7B, 0x75, 0x47, 0x07, 0x57, 0x4F, 0x52, 0x4B, 0x49,
    0x4E, 0x47, 0x12, 0xDC, 0x13, 0x77, 0x00, 0x7B, 0xBC, 0x7C, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45,
    0x00, 0x00, 0x13, 0x48, 0x00, 0x7C, 0x38, 0x55, 0x01, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
    0x8D, 0x25, 0x01, 0x59, 0x13, 0x3A, 0x13, 0x5C, 0x00, 0x7C, 0xB2, 0x46, 0x06, 0x59, 0x45, 0x4C,
    0x4C, 0x4F, 0x57, 0x00, 0x00, 0x13, 0x6B, 0x00, 0x7C, 0xF8, 0x60, 0x03, 0x59, 0x45, 0x53, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7D, 0x58, 0x41, 0x03, 0x59, 0x45, 0x54, 0x13, 0x52, 0x13, 0x9F, 0x00,
    0x7D, 0x99, 0x42, 0x03, 0x59, 0x4F, 0x55, 0x00, 0x00, 0x13, 0x8F, 0x00, 0x71, 0xBE, 0x36, 0x07,
    0x59, 0x4F, 0x55, 0x20, 0x57, 0x49, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7D, 0xDB, 0x72, 0x04,
    0x59, 0x4F, 0x55, 0x52, 0x13, 0x83, 0x13, 0xAC, 0x00, 0x7E, 0x4D, 0x4C, 0x01, 0x5A, 0x00, 0x00,
    0x13, 0xB6, 0x00, 0x7E, 0x99, 0x3B, 0x04, 0x5A, 0x45, 0x52, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x13, 0xC3, 0x46, 0xB5, 0x9A, 0x5C, 0x13, 0x18, 0xBF, 0x79, 0x45, 0x99, 0x2C, 0xC4, 0x97, 0xEE,
    0x4D, 0x07, 0xBB, 0x23, 0x55, 0xB3, 0x92, 0x3A, 0x6C, 0xCD, 0x35, 0x6C, 0xD4, 0x8D, 0xA2, 0x4B,
    0xCC, 0x4E, 0xF7, 0x36, 0x2A, 0x65, 0xCE, 0x9E, 0x92, 0x7B, 0xAB, 0x1B, 0x54, 0x97, 0x95, 0x7B,
    0xE6, 0xF7, 0x60, 0x99, 0xDD, 0x25, 0xB4, 0xAE, 0x98, 0x2A, 0x2D, 0xF4, 0x8B, 0x2D, 0x9E, 0x0F,
    0xC1, 0xF8, 0x3F, 0x37, 0xE8, 0xDD, 0x3C, 0x00, 0x00, 0x65, 0xA5, 0x6C, 0xFB, 0x91, 0x37, 0xA5,
    0x61, 0xDB, 0x9F, 0x42, 0x6A, 0x59, 0x54, 0x87, 0xDF, 0xD0, 0x1C, 0xBE, 0xF6, 0x62, 0xC6, 0x3E,
    0xB9, 0x46, 0xA4, 0x79, 0xB3, 0x14, 0x3A, 0x35, 0x4C, 0x57, 0x1C, 0xDD, 0x58, 0xB2, 0x11, 0x6A,
    0x54, 0xCA, 0xE6, 0x6E, 0x9E, 0x0E, 0xC1, 0xCF, 0x29, 0x36, 0x97, 0x6B, 0x30, 0x73, 0x86, 0x51,
    0x2D, 0xDC, 0x6C, 0x53, 0x04, 0x58, 0x3B, 0xB5, 0xB3, 0x14, 0xB1, 0x1E, 0xDE, 0xDA, 0x64, 0xC9,
    0x08, 0x56, 0xA9, 0x79, 0x5B, 0x32, 0xA4, 0xA1, 0x59, 0x5A, 0x59, 0xE0, 0x40, 0x1B, 0x8A, 0x3C,
    0x00, 0xE3, 0x5E, 0x18, 0x04, 0xA1, 0x47, 0xA7, 0x68, 0x86, 0xA2, 0xA6, 0x9B, 0xF6, 0x3D, 0xC7,
    0x99, 0x2D, 0x2C, 0x8A, 0xD6, 0x92, 0x93, 0x7B, 0xD5, 0x6A, 0xDC, 0x88, 0x95, 0x74, 0x9B, 0xCE,
    0xD7, 0x5E, 0x96, 0x54, 0xB3, 0xAD, 0xD9, 0x58, 0x1A, 0x54, 0xCE, 0xCF, 0xB3, 0x56, 0x09, 0x46,
    0x51, 0xCB, 0xCB, 0x55, 0x82, 0x8F, 0x72, 0xEE, 0xAE, 0x4F, 0x30, 0x10, 0x53, 0x22, 0x40, 0x58,
    0x0D, 0x02, 0x13, 0xB2, 0xA8, 0xCE, 0xD3, 0x2D, 0x9C, 0xF0, 0x9D, 0x97, 0x28, 0x67, 0xB5, 0x7D,
    0x27, 0x7E, 0x0A, 0x0A, 0x95, 0xFB, 0x89, 0xA7, 0xA4, 0xA0, 0x84, 0x9E, 0xE2, 0x7A, 0x5E, 0x18,
    0x90, 0xBD, 0xFA, 0xA2, 0xD3, 0x83, 0x15, 0x6F, 0x6E, 0x6A, 0xB5, 0xB4, 0x82, 0x19, 0xCD, 0xF7,
    0x2B, 0x74, 0x30, 0x7A, 0x91, 0xA7, 0x66, 0xA6, 0xFC, 0x1D, 0x83, 0xD6, 0x4F, 0x59, 0x70, 0xC6,
    0x62, 0xF5, 0x1C, 0xD5, 0xCA, 0x33, 0xC0, 0x03, 0x00, 0xC4, 0xB4, 0x24, 0x05, 0x80, 0xD0, 0x1A,
    0x04, 0xA3, 0x3D, 0xEF, 0x88, 0x32, 0x59, 0x59, 0x25, 0x21, 0x6F, 0x9C, 0xA1, 0x76, 0xE9, 0xC9,
    0x19, 0x21, 0x31, 0xAF, 0x7A, 0xA2, 0xB3, 0x7B, 0x54, 0x89, 0xC6, 0x4B, 0x1A, 0xBE, 0xD6, 0xAA,
    0x8D, 0x4F, 0x64, 0xB7, 0x95, 0xE7, 0xDB, 0x43, 0xD2, 0x3F, 0x5D, 0x92, 0x74, 0x91, 0xAA, 0x2F,
    0xC7, 0x66, 0xAD, 0xA9, 0xD5, 0x33, 0xDD, 0xD9, 0xB7, 0x0C, 0x6F, 0x88, 0xAC, 0x6E, 0xDE, 0x00,
    0x00, 0x03, 0x01, 0x17, 0xB3, 0x62, 0x77, 0x39, 0xF6, 0x8C, 0x66, 0x9C, 0x9D, 0xCF, 0xAC, 0xA2,
    0x6B, 0x2F, 0x26, 0x7B, 0xEE, 0xE4, 0x9E, 0xBB, 0xC9, 0x5E, 0xFB, 0xB8, 0x28, 0xA2, 0x72, 0x67,
    0xC2, 0xE9, 0xCE, 0xA0, 0xBC, 0xA2, 0x10, 0xBA, 0xA3, 0xA8, 0xA7, 0x2A, 0x84, 0x6A, 0x60, 0xE6,
    0x09, 0xCA, 0xE3, 0x2A, 0xA8, 0x28, 0xAE, 0xF2, 0xD8, 0xD5, 0xE8, 0xC2, 0xA4, 0x9A, 0xBA, 0x36,
    0x7A, 0x55, 0x9A, 0xAE, 0x2F, 0x95, 0x9A, 0x96, 0xAB, 0x2B, 0x8B, 0xE3, 0x56, 0x85, 0x7A, 0xCA,
    0xDB, 0x08, 0xD1, 0x61, 0x62, 0xBA, 0xB6, 0xC2, 0x14, 0x58, 0x58, 0xAC, 0x2D, 0x2F, 0x74, 0xD2,
    0x95, 0xAE, 0x46, 0xCC, 0x19, 0x45, 0x63, 0x5A, 0x90, 0x9B, 0x04, 0xA9, 0xDE, 0x99, 0xDD, 0x60,
    0x20, 0x1C, 0xE4, 0x21, 0x00, 0xA7, 0xAB, 0xF8, 0x60, 0x19, 0x6D, 0x23, 0x80, 0xF4, 0x66, 0x62,
    0x04, 0x80, 0xCB, 0x69, 0x18, 0x02, 0x20, 0xF5, 0x69, 0x25, 0x06, 0x85, 0x4A, 0xD1, 0xF6, 0x4D,
    0x49, 0x1A, 0x23, 0xA3, 0xE6, 0x93, 0x72, 0x62, 0xA9, 0x59, 0x1D, 0x22, 0xB4, 0x6E, 0xBE, 0x12,
    0x1B, 0xC8, 0xA8, 0xC0, 0x00, 0x08, 0x06, 0x45, 0xD1, 0x00, 0x71, 0xB5, 0x4A, 0x03, 0xF3, 0x79,
    0x58, 0x08, 0x03, 0xF1, 0x67, 0xF0, 0x00, 0x00, 0x30, 0x1F, 0x7B, 0x32, 0x40, 0x58, 0x0B, 0x01,
    0xA0, 0x34, 0x0D, 0x46, 0xE8, 0xB4, 0xC2, 0xD4, 0x8F, 0xB2, 0x76, 0x4D, 0xCB, 0x49, 0x98, 0xF8,
    0x76, 0x37, 0x8A, 0x3A, 0xA7, 0x9D, 0x5A, 0x1A, 0x5C, 0x6E, 0xA9, 0xEF, 0x79, 0x78, 0x0C, 0xF5,
    0xEE, 0xA6, 0x4D, 0x94, 0x42, 0x34, 0x65, 0x1D, 0x9B, 0x26, 0xB3, 0x09, 0x51, 0xA7, 0x66, 0xC8,
    0x1C, 0x31, 0xCB, 0xB9, 0x1A, 0x2D, 0xE8, 0xD8, 0x94, 0xEF, 0x46, 0x8C, 0x7A, 0xA3, 0x24, 0xCB,
    0x11, 0xB3, 0x9E, 0x6B, 0x09, 0x8E, 0xEF, 0xB4, 0xF4, 0xA3, 0x2A, 0xC5, 0xC6, 0xAD, 0x3D, 0x2A,
    0xAA, 0xB3, 0x78, 0x4C, 0x4D, 0x5A, 0xA1, 0x1D, 0x5D, 0x73, 0x73, 0x66, 0x6C, 0xD1, 0x6A, 0xAB,
    0x44, 0x13, 0xAA, 0xCE, 0xC6, 0xF4, 0xE0, 0x00, 0x00, 0x40, 0x22, 0xB6, 0x53, 0x80, 0x20, 0x18,
    0x84, 0x61, 0x81, 0xE0, 0x01, 0x4A, 0x55, 0x4C, 0xD4, 0x5B, 0x6D, 0x95, 0x35, 0xA9, 0x96, 0xB3,
    0x12, 0x75, 0x8D, 0x7A, 0xE3, 0xB5, 0xB2, 0x75, 0x5C, 0x5D, 0x30, 0x8A, 0x55, 0x4E, 0x55, 0x07,
    0xDC, 0xA4, 0x0D, 0xB3, 0x95, 0x36, 0x39, 0x2C, 0xB3, 0x54, 0xD4, 0xEE, 0x86, 0x4B, 0x34, 0xD7,
    0x31, 0x3B, 0xDF, 0x92, 0x4B, 0x94, 0x4C, 0x50, 0xE8, 0xE3, 0xB3, 0x44, 0x57, 0x95, 0x46, 0x15,
    0x0E, 0x93, 0x5E, 0xE5, 0xB2, 0x9C, 0xCC, 0x1A, 0xD9, 0x71, 0x74, 0x6E, 0xB0, 0xAB, 0x15, 0xCB,
    0x5F, 0x0B, 0xC2, 0x2D, 0xAC, 0x6E, 0x98, 0x4A, 0x69, 0x0B, 0x33, 0x13, 0xA6, 0x11, 0xC2, 0xA2,
    0xC4, 0x55, 0x5D, 0x8C, 0x30, 0xC4, 0xB3, 0x18, 0xC3, 0x62, 0x98, 0xA4, 0x4A, 0xCD, 0x65, 0x58,
    0x2D, 0xC7, 0x12, 0x95, 0x11, 0x66, 0x28, 0x6A, 0xBC, 0x44, 0xD8, 0x61, 0x8B, 0x94, 0xEC, 0x53,
    0x31, 0xD0, 0x00, 0x0F, 0xE5, 0x51, 0x73, 0xA4, 0xE5, 0x54, 0xBB, 0x46, 0xE7, 0xDC, 0xFD, 0x9F,
    0xB5, 0x6A, 0xAB, 0x4E, 0x05, 0x22, 0xBE, 0x99, 0xB2, 0xB7, 0x3F, 0x07, 0xE1, 0xE0, 0x00, 0x00,
    0xB5, 0x6C, 0xA4, 0x62, 0x3E, 0x34, 0xB3, 0x66, 0x6C, 0xCD, 0xB7, 0xB6, 0xF7, 0x4E, 0xE7, 0xDD,
    0x1B, 0xFC, 0x00, 0x00, 0x85, 0x10, 0x74, 0xF3, 0x52, 0xDB, 0xEF, 0x46, 0x2A, 0x93, 0x63, 0x9D,
    0x93, 0x5B, 0x6A, 0xA2, 0xC7, 0xD8, 0x73, 0xBA, 0xAA, 0xB4, 0xC2, 0x60, 0x55, 0xE5, 0x61, 0x8A,
    0xA0, 0xA9, 0xB7, 0x64, 0xDD, 0xEA, 0xA7, 0xB6, 0xAD, 0xD5, 0xBD, 0x7B, 0xAB, 0x75, 0x72, 0xA7,
    0xBF, 0x2D, 0x96, 0x2B, 0xB9, 0xAA, 0xF5, 0x52, 0xB6, 0x43, 0x71, 0x12, 0x2B, 0xAE, 0xAD, 0xAC,
    0xCF, 0x35, 0x6C, 0xE2, 0x2B, 0x45, 0xED, 0xD2, 0xE1, 0xA6, 0x00, 0x00, 0x40, 0x26, 0xB7, 0x81,
    0x01, 0xC5, 0xBB, 0x08, 0x07, 0xB2, 0x18, 0x03, 0xC0, 0xA4, 0xD1, 0xC4, 0xC3, 0x85, 0xC3, 0x39,
    0x34, 0x6F, 0x4C, 0xE7, 0x55, 0x5E, 0xCD, 0xD9, 0xFB, 0x47, 0x6A, 0xAD, 0x8C, 0x01, 0xA8, 0x63,
    0x58, 0x0B, 0x00, 0x01, 0x80, 0x51, 0x4C, 0xF2, 0xA1, 0xFA, 0x37, 0x69, 0x59, 0xBD, 0xEB, 0xAD,
    0xD3, 0xC1, 0xD8, 0x37, 0x05, 0x11, 0x31, 0x2E, 0x46, 0x2D, 0xC0, 0x55, 0x34, 0x48, 0xCD, 0x93,
    0x6E, 0x6B, 0x33, 0x0E, 0x4F, 0x10, 0x0B, 0x8B, 0xBD, 0xAA, 0x75, 0xE5, 0xCE, 0x2A, 0xB5, 0xCA,
    0xA3, 0x18, 0x87, 0x45, 0xD2, 0xF2, 0xB9, 0x42, 0x15, 0x91, 0x6E, 0xB6, 0xAD, 0xED, 0x44, 0x84,
    0x97, 0xB5, 0x6C, 0xCD, 0xB8, 0xB2, 0x8D, 0x44, 0x75, 0xE9, 0x25, 0xE7, 0xC4, 0xD4, 0x91, 0xBA,
    0xC6, 0x49, 0x37, 0x36, 0xE5, 0xC4, 0xB4, 0xAB, 0x42, 0x2E, 0x28, 0xF3, 0x36, 0x27, 0x95, 0xA2,
    0x10, 0xB1, 0xC7, 0xBA, 0xF7, 0x66, 0x2D, 0x8D, 0xE6, 0x4D, 0x66, 0x47, 0x9B, 0xF1, 0x7C, 0x31,
    0x10, 0x4F, 0x31, 0xD8, 0x60, 0x97, 0xA5, 0x33, 0x62, 0x6D, 0xF8, 0x37, 0x04, 0xE0, 0x2C, 0x0B,
    0x08, 0x99, 0x5B, 0x49, 0x78, 0x00, 0x00, 0x94, 0x8D, 0x67, 0xEA, 0x9D, 0x67, 0x2B, 0x2D, 0xE5,
    0xC4, 0xAC, 0x77, 0x6B, 0x1B, 0xD9, 0x73, 0x2E, 0x66, 0xCD, 0x59, 0xAB, 0x35, 0xD2, 0xC4, 0xD7,
    0x31, 0x46, 0xDC, 0x95, 0xBA, 0x17, 0x23, 0x5B, 0x6A, 0x14, 0xA6, 0x7D, 0xEB, 0xBD, 0x37, 0xF8,
    0xC5, 0x14, 0xB2, 0xBB, 0x26, 0xA8, 0xB9, 0x45, 0x2C, 0xD0, 0xAB, 0x52, 0x2E, 0x55, 0x3C, 0xB4,
    0x22, 0x54, 0xAB, 0xB5, 0x76, 0xAE, 0x55, 0x2B, 0xAD, 0x9A, 0xCC, 0x73, 0xB5, 0xF2, 0xB8, 0xD6,
    0x29, 0x59, 0xEA, 0x9B, 0xB7, 0x16, 0xB6, 0x95, 0x6A, 0x93, 0x1B, 0xB5, 0xAC, 0x71, 0xD2, 0xA3,
    0x2A, 0xDF, 0x73, 0xEE, 0x65, 0xCB, 0x71, 0x52, 0xC3, 0xBB, 0x19, 0x72, 0x5E, 0x92, 0xA7, 0x6E,
    0x57, 0xDC, 0xBB, 0xFC, 0x00, 0x00, 0xC5, 0x53, 0xCB, 0x32, 0x3D, 0x44, 0xFB, 0x46, 0xA8, 0xA6,
    0x99, 0xCD, 0x72, 0x39, 0xBA, 0x3B, 0x47, 0x2A, 0xA6, 0x1E, 0x4C, 0xEE, 0x47, 0xDA, 0xB7, 0x56,
    0xEB, 0xC5, 0xB1, 0xB2, 0xC2, 0x9C, 0xC8, 0xA5, 0x6B, 0x5E, 0x56, 0x8B, 0x6E, 0xC6, 0xDC, 0xDB,
    0xD5, 0x7A, 0x60, 0x70, 0xA9, 0x92, 0x35, 0xDE, 0xBB, 0xFC, 0x00, 0x00, 0x85, 0x13, 0xCB, 0x32,
    0x3D, 0x44, 0xF3, 0x46, 0x27, 0xA6, 0x99, 0xCD, 0x72, 0x39, 0xD9, 0xB3, 0x35, 0xA6, 0xA6, 0x1E,
    0x4C, 0xEE, 0x47, 0x69, 0xE9, 0x1A, 0x54, 0x66, 0xCD, 0xDA, 0xA9, 0xCA, 0x8D, 0x59, 0xB2, 0x96,
    0xAE, 0x54, 0x96, 0x45, 0x5C, 0xE5, 0xAC, 0x8C, 0xE9, 0x89, 0x9B, 0x35, 0x2B, 0xA4, 0xFA, 0xA1,
    0x74, 0xCD, 0xC2, 0xF5, 0xC1, 0x59, 0x59, 0xEB, 0x6E, 0xBD, 0x50, 0x3A, 0x46, 0xC7, 0x03, 0xAF,
    0x4C, 0x0E, 0x91, 0xEE, 0x34, 0xCB, 0xD2, 0xE2, 0xB6, 0x5C, 0x8D, 0x2B, 0x05, 0xB4, 0x75, 0x9B,
    0x22, 0x49, 0xC4, 0xF9, 0x43, 0x2A, 0x29, 0xD1, 0x1E, 0x36, 0x0B, 0xC5, 0x18, 0x4A, 0x32, 0xAE,
    0xB3, 0x5A, 0xF0, 0xA5, 0x11, 0x9A, 0xD4, 0x3D, 0x54, 0x7B, 0x57, 0x28, 0x96, 0x1E, 0x51, 0x6A,
    0x39, 0xD9, 0xF7, 0x3E, 0x26, 0x7C, 0xA4, 0xA0, 0xE6, 0xBC, 0xE9, 0x5A, 0xF3, 0x77, 0x1E, 0xB6,
    0xAE, 0x69, 0x55, 0x79, 0xD4, 0xB2, 0xB2, 0x8D, 0x80, 0x76, 0x0A, 0xCF, 0x02, 0x60, 0x38, 0x0E,
    0x4D, 0xDE, 0xD6, 0x46, 0x32, 0xCA, 0xB0, 0xED, 0xA5, 0xAE, 0xBA, 0x32, 0xDA, 0xD9, 0xA1, 0x7A,
    0xEE, 0x53, 0x34, 0xF3, 0xA6, 0x60, 0xBB, 0x8E, 0x5B, 0xC5, 0xA9, 0x58, 0x26, 0xE7, 0x3B, 0x30,
    0x99, 0xF0, 0xE5, 0x55, 0xB4, 0xCA, 0x2A, 0xEB, 0x7B, 0x57, 0x68, 0xED, 0x14, 0xA2, 0x11, 0x49,
    0x35, 0xC5, 0x55, 0x28, 0xA6, 0x9E, 0x10, 0x67, 0x4B, 0xDA, 0xB5, 0x6D, 0x74, 0x8C, 0x83, 0x39,
    0xCB, 0x5D, 0x6A, 0xA9, 0xAB, 0x5E, 0x4E, 0x18, 0x4A, 0x04, 0xCF, 0x5B, 0x00, 0x66, 0x0F, 0x4A,
    0xAD, 0x5B, 0xB0, 0xD5, 0x8B, 0xDC, 0x47, 0xB4, 0xCD, 0x45, 0x63, 0x03, 0xB9, 0x9B, 0xD3, 0xAD,
    0x19, 0x3D, 0x4A, 0x6E, 0xF3, 0x2C, 0xF0, 0xE4, 0xF4, 0xBC, 0xCA, 0xAB, 0x69, 0x79, 0x45, 0x2F,
    0x32, 0xAA, 0xF9, 0xEE, 0xD1, 0xCA, 0x21, 0x79, 0x94, 0x69, 0xB2, 0xF6, 0xAE, 0xD5, 0xAA, 0xDF,
    0x47, 0x94, 0x69, 0xC6, 0xEE, 0xCB, 0xDB, 0x7B, 0x67, 0x6C, 0x2D, 0x55, 0x1E, 0x5A, 0x2A, 0x1A,
    0xEB, 0x55, 0x27, 0x87, 0x8C, 0x89, 0x32, 0xD6, 0x9E, 0x9A, 0x17, 0x25, 0x13, 0xB5, 0x40, 0x68,
    0x88, 0xA9, 0x00, 0xE0, 0x14, 0x02, 0x81, 0xE0, 0xB5, 0x8C, 0x94, 0xC2, 0xC4, 0xE4, 0xF3, 0x65,
    0xEC, 0xA5, 0x8D, 0x7C, 0x4A, 0xBC, 0x74, 0xA7, 0x83, 0x80, 0x98, 0x21, 0x9E, 0x03, 0xC0, 0x70,
    0x1E, 0x74, 0x3C, 0xC0, 0x78, 0x16, 0x85, 0xAB, 0x98, 0x58, 0x9B, 0xD6, 0x64, 0xBC, 0x97, 0x96,
    0xB3, 0x5E, 0x8A, 0xD5, 0x4A, 0xD8, 0xE3, 0xA5, 0x46, 0x55, 0xCE, 0xD8, 0xDC, 0xFB, 0xDF, 0x83,
    0x71, 0x6E, 0x2D, 0xCB, 0xC0, 0xD4, 0xD1, 0x93, 0x5C, 0xBC, 0xE5, 0x3B, 0x47, 0x68, 0xED, 0x1B,
    0xAA, 0xF6, 0x46, 0xC0, 0x00, 0x50, 0x13, 0x53, 0xA3, 0x00, 0xD2, 0x1D, 0x88, 0x03, 0x95, 0x06,
    0x01, 0xE0, 0xD5, 0xB7, 0x8B, 0x28, 0xBA, 0xDD, 0xB5, 0x6D, 0xA2, 0xEA, 0x0F, 0x7B, 0x5C, 0x59,
    0x9A, 0x29, 0x8C, 0x46, 0xB3, 0x76, 0x6E, 0xCD, 0xD9, 0x9B, 0x2F, 0x6D, 0x6D, 0x8D, 0xED, 0xBC,
    0xF7, 0xF8, 0x00, 0x00, 0xE5, 0xB2, 0x9A, 0xD3, 0x9C, 0x6B, 0xB9, 0x84, 0x2A, 0xB6, 0xC9, 0x73,
    0x6E, 0x61, 0x2A, 0xB5, 0xB3, 0x5C, 0xB7, 0xB7, 0xF6, 0xEE, 0xDB, 0xDB, 0x7B, 0x54, 0xE8, 0x00,
    0x10, 0x0B, 0x43, 0x22, 0x80, 0x84, 0xD1, 0x50, 0x04, 0x9E, 0xE4, 0x20, 0x1D, 0x14, 0x3F, 0x65,
    0x67, 0x3C, 0xC4, 0xBC, 0x48, 0x39, 0x54, 0xA7, 0x10, 0x6C, 0x77, 0x6E, 0x55, 0x39, 0xB2, 0x2C,
    0x4F, 0x97, 0xB5, 0xF2, 0xB9, 0xC9, 0x8D, 0x66, 0x74, 0xBA, 0xAE, 0x6F, 0x63, 0x4A, 0x9C, 0xDF,
    0x6B, 0xB5, 0x93, 0x52, 0xA3, 0xEC, 0x64, 0xED, 0x6C, 0xE6, 0xA8, 0x8B, 0x5A, 0x49, 0x5D, 0x95,
    0xB3, 0x19, 0x45, 0xB1, 0x40, 0x74, 0xE8, 0x8A, 0x03, 0xCD, 0x54, 0x60, 0x1F, 0x8B, 0x2B, 0x00,
    0xFD, 0x9C, 0xD8, 0x07, 0xA6, 0xA4, 0xA0, 0x34, 0x9B, 0x61, 0x00, 0xD9, 0x50, 0x78, 0x85, 0x61,
    0x65, 0xCC, 0xC4, 0x38, 0xB9, 0x45, 0x5A, 0xD0, 0x72, 0xB7, 0xEE, 0x55, 0x56, 0xB3, 0x9B, 0xA6,
    0xF5, 0x97, 0x24, 0xB1, 0x2D, 0x51, 0x2A, 0x03, 0x01, 0x8A, 0xAC, 0x98, 0x09, 0xC2, 0xA8, 0x80,
    0x3F, 0x2C, 0xC2, 0x00, 0xD7, 0x43, 0xB4, 0xCF, 0x44, 0xCC, 0x38, 0x5C, 0xF5, 0x3C, 0x97, 0x4A,
    0xAC, 0x77, 0x3D, 0x51, 0x59, 0x38, 0xA5, 0x45, 0xCF, 0x35, 0x6A, 0xAC, 0x56, 0x0C, 0x1E, 0x2D,
    0x7B, 0xAF, 0x76, 0x6E, 0xDD, 0xDD, 0x9B, 0xA1, 0x73, 0x9E, 0x4D, 0x30, 0xB9, 0xB7, 0x5A, 0xD6,
    0x86, 0xC3, 0x53, 0x6D, 0x96, 0x25, 0xA7, 0xCE, 0xD6, 0xD2, 0x55, 0x87, 0x62, 0xE5, 0x2C, 0xC6,
    0x11, 0x62, 0x54, 0x91, 0x6B, 0x32, 0x3F, 0x25, 0x48, 0x3D, 0x4C, 0x44, 0x39, 0x29, 0x5B, 0x1E,
    0xDC, 0x4B, 0x2F, 0x3D, 0x55, 0x06, 0xA6, 0xD0, 0xBC, 0xBB, 0x95, 0x35, 0xD1, 0xB2, 0x13, 0x25,
    0xE5, 0x4F, 0x93, 0x72, 0x26, 0x3B, 0x7B, 0x5F, 0x2B, 0x85, 0x9F, 0x12, 0x2D, 0xD9, 0xDB, 0x77,
    0x75, 0x2F, 0x85, 0xCE, 0x5A, 0x69, 0x85, 0x5C, 0x1B, 0x80, 0x02, 0x00, 0x8E, 0x1C, 0x90, 0x04,
    0x68, 0xA0, 0x60, 0x24, 0xF9, 0x01, 0x00, 0xE8, 0x29, 0x78, 0xB4, 0xD0, 0x81, 0xE3, 0x29, 0xAB,
    0xF1, 0x54, 0xE4, 0x38, 0xE4, 0x8E, 0xFC, 0xD5, 0xAA, 0x9A, 0xE9, 0x85, 0x44, 0x9E, 0xEE, 0xAD,
    0xD5, 0x9A, 0xF3, 0x6D, 0xEE, 0x85, 0xE8, 0x6D, 0xD2, 0xC0, 0xCD, 0xDF, 0x79, 0xB0, 0x34, 0x36,
    0x52, 0xE6, 0x49, 0xE0, 0x00, 0x00, 0x45, 0xA2, 0x94, 0xB3, 0x35, 0x4B, 0x75, 0x5A, 0xDF, 0x3C,
    0xA5, 0x13, 0xCE, 0xD5, 0xDA, 0xB5, 0x52, 0x9D, 0x5D, 0x02, 0xF7, 0x5D, 0xD7, 0x7A, 0xE5, 0x6A,
    0x29, 0x74, 0x84, 0xFE, 0x79, 0xDC, 0xDB, 0x93, 0x80, 0x10, 0x08, 0xA5, 0xD1, 0x40, 0x4A, 0x11,
    0x4B, 0x01, 0x80, 0x4D, 0xD6, 0xC4, 0x01, 0xD6, 0x83, 0x0F, 0x45, 0xC4, 0x45, 0x3C, 0x34, 0x39,
    0xF5, 0x53, 0xDD, 0x3E, 0x90, 0xB9, 0xCE, 0xD5, 0xBA, 0xB5, 0x5B, 0x65, 0x5C, 0x6C, 0xF5, 0xDD,
    0xD9, 0x7B, 0x14, 0x02, 0x55, 0x2A, 0x90, 0x29, 0x5B, 0x6C, 0xFA, 0x4F, 0x0E, 0xCB, 0xD7, 0x5B,
    0x23, 0x6B, 0xAE, 0x5B, 0xD7, 0x0D, 0xE9, 0x58, 0xFB, 0x9B, 0x72, 0x70, 0x3E, 0x1E, 0x00, 0x00,
    0x55, 0xA3, 0x65, 0x33, 0xB4, 0x4B, 0x75, 0x54, 0x18, 0xFE, 0xD4, 0x9A, 0xBD, 0xD5, 0xDA, 0xBB,
    0x57, 0x6B, 0xCD, 0x72, 0xB1, 0xB5, 0x67, 0x49, 0xC8, 0x5A, 0x6C, 0x00, 0x00, 0x70, 0x13, 0x33,
    0xB0, 0x80, 0x5B, 0xDC, 0xC3, 0xC0, 0x00, 0x00, 0x75, 0x43, 0x65, 0x33, 0xB4, 0x4B, 0x79, 0x43,
    0xE5, 0x1E, 0x89, 0x13, 0x2E, 0xD5, 0xCA, 0x9D, 0x2C, 0xC5, 0x0C, 0x71, 0xF6, 0xAE, 0xD5, 0xDA,
    0xB9, 0x5B, 0xA9, 0x76, 0xC9, 0x8D, 0xFE, 0xD7, 0xDB, 0x35, 0x74, 0x32, 0xD2, 0x93, 0x69, 0x3B,
    0xDD, 0x6B, 0xA1, 0x47, 0x86, 0x98, 0xA5, 0xDA, 0xF8, 0x51, 0x95, 0xEE, 0x22, 0x77, 0xBE, 0x77,
    0x46, 0xF4, 0xDF, 0xE0, 0x00, 0x00, 0x10, 0x0B, 0x2D, 0x42, 0x00, 0xD1, 0x11, 0x5C, 0x07, 0xD4,
    0xAB, 0x00, 0x3F, 0x18, 0x67, 0x81, 0x10, 0x1E, 0x03, 0x00, 0xF2, 0xD5, 0x38, 0xE5, 0x1F, 0x06,
    0x8C, 0xBE, 0xCE, 0x47, 0x58, 0xC9, 0x1B, 0xB7, 0xD7, 0xB1, 0xF6, 0x4E, 0xCD, 0x8A, 0x2F, 0x59,
    0x40, 0x58, 0xF6, 0xEE, 0xAD, 0xD7, 0x9B, 0x29, 0x6D, 0x2C, 0x44, 0x95, 0x95, 0xC9, 0xDD, 0x0B,
    0xA4, 0xE3, 0x29, 0xE9, 0x85, 0xB2, 0xE7, 0xA9, 0x0F, 0x79, 0x18, 0xAC, 0xBA, 0x2F, 0x05, 0xCB,
    0x94, 0x32, 0xAE, 0x83, 0x41, 0x61, 0x9D, 0xCD, 0xE0, 0x30, 0x16, 0x42, 0x33, 0x00, 0xCC, 0x54,
    0xDC, 0x04, 0x96, 0xAB, 0x49, 0x67, 0x97, 0x65, 0x59, 0xAE, 0xF6, 0xAE, 0xD5, 0xCA, 0xA5, 0x76,
    0x74, 0x7A, 0x8A, 0xF6, 0xBE, 0xD9, 0xDB, 0x37, 0x66, 0xED, 0xCD, 0x97, 0xB2, 0x55, 0xB5, 0xE5,
    0x68, 0xB6, 0xEC, 0x9D, 0x73, 0xAD, 0xD5, 0x26, 0x07, 0x0A, 0x99, 0x23, 0x7D, 0x67, 0xB3, 0xC0,
    0x70, 0x0F, 0xA4, 0x12, 0xC0, 0x58, 0x16, 0x9D, 0x92, 0xB3, 0x87, 0xB8, 0xD5, 0x6A, 0x60, 0x1A,
    0x6B, 0xB3, 0x40, 0x68, 0x0E, 0x03, 0xED, 0x98, 0x68, 0x09, 0x02, 0xD5, 0x3B, 0x0C, 0xEF, 0x17,
    0x5D, 0xDD, 0x7B, 0xAF, 0x36, 0x62, 0xB7, 0x59, 0xA1, 0x9E, 0xE3, 0x95, 0xA9, 0x35, 0x02, 0xC0,
    0x78, 0x04, 0x01, 0x2A, 0x95, 0x18, 0x1E, 0x40, 0x1F, 0x49, 0xAA, 0x00, 0xEF, 0x58, 0x54, 0x07,
    0xE8, 0xA2, 0xC0, 0x3F, 0x68, 0x57, 0x01, 0xF9, 0x2B, 0x18, 0x06, 0x59, 0x57, 0x93, 0xC2, 0xF4,
    0x6E, 0xAF, 0x75, 0xED, 0x5D, 0xAB, 0x15, 0x3D, 0xEA, 0xD2, 0x11, 0x5C, 0x8D, 0x92, 0x02, 0xAE,
    0x78, 0xB5, 0x6E, 0xB2, 0x2C, 0x4B, 0x5C, 0xFB, 0x66, 0x6C, 0xBD, 0x95, 0xB2, 0x35, 0xAE, 0xB4,
    0xD9, 0xE0, 0x70, 0x19, 0xBD, 0x4C, 0xC0, 0x88, 0x06, 0x00, 0xCE, 0x78, 0xC4, 0x70, 0x9B, 0xB3,
    0xCC, 0xE3, 0x37, 0x2E, 0xE5, 0xDC, 0xF9, 0xAA, 0xF6, 0x3E, 0xC0, 0x00, 0x68, 0x07, 0x00, 0x60,
    0x0C, 0x0F, 0x60, 0x19, 0x95, 0x54, 0xC0, 0x68, 0x02, 0x00, 0xD9, 0xB9, 0xD4, 0x6D, 0x64, 0xDC,
    0x49, 0xCF, 0x77, 0x26, 0xE5, 0xD4, 0xD1, 0x5C, 0xE3, 0xC1, 0xCD, 0xB7, 0x56, 0xAB, 0x8C, 0x71,
    0x5E, 0x0A, 0xE7, 0x9B, 0xAD, 0x84, 0x99, 0x2E, 0xB4, 0xF6, 0x3A, 0x60, 0xFA, 0x39, 0x4B, 0xDC,
    0x52, 0x18, 0xC6, 0x0E, 0x88, 0x91, 0x98, 0x20, 0x1F, 0x7A, 0x12, 0xC0, 0x58, 0x0D, 0x01, 0x60,
    0x24, 0x02, 0x81, 0xE0, 0x00, 0x00, 0x40, 0x10, 0x8D, 0x14, 0x00, 0x7B, 0xE2, 0x60, 0x05, 0x5C,
    0xD4, 0x80, 0x1C, 0xFA, 0x9D, 0x46, 0xC5, 0x5C, 0xA4, 0x25, 0xB7, 0x72, 0x72, 0x59, 0x49, 0x8D,
    0x6A, 0x2D, 0x9D, 0x9B, 0xB3, 0x6E, 0x7E, 0x55, 0x2A, 0xB1, 0xAC, 0xBD, 0xD7, 0xB5, 0x5A, 0xB7,
    0xE8, 0x66, 0xD9, 0xB4, 0x75, 0xB6, 0x76, 0xBE, 0xE6, 0xDC, 0xBB, 0xD3, 0x87, 0x80, 0x00, 0x00,
    0x70, 0x11, 0xE3, 0xAC, 0x00, 0x8C, 0xA8, 0xDE, 0x02, 0xC0, 0xE4, 0x6F, 0x75, 0x5B, 0xB2, 0x4D,
    0xBB, 0x1E, 0x23, 0x5B, 0xBE, 0x8D, 0x4F, 0x57, 0x79, 0x27, 0x35, 0xE8, 0xD5, 0x4E, 0x8C, 0xC1,
    0xD1, 0xDB, 0x77, 0x66, 0x6E, 0x95, 0xED, 0xB2, 0xB4, 0xD9, 0x6D, 0x23, 0x82, 0xF0, 0x5E, 0x29,
    0xC3, 0xC0, 0x00, 0x00, 0x70, 0x11, 0xB3, 0x2B, 0x80, 0x73, 0x9D, 0x1C, 0x04, 0x5D, 0x2A, 0xA0,
    0x23, 0x38, 0x58, 0x49, 0x26, 0x55, 0xB4, 0x1C, 0xB7, 0xB3, 0x76, 0x6E, 0x4C, 0xE8, 0x5D, 0xAB,
    0x1D, 0x93, 0xB3, 0xEE, 0xAB, 0x56, 0xD9, 0xA5, 0x2A, 0x14, 0xB2, 0x36, 0xC6, 0xD8, 0xDB, 0x1B,
    0x9F, 0x73, 0x6F, 0x4D, 0xE5, 0xBF, 0xC0, 0x60, 0x10, 0xBA, 0xA3, 0x80, 0x7C, 0x58, 0x58, 0x04,
    0xA1, 0x68, 0x60, 0x15, 0x56, 0x6E, 0x49, 0x09, 0xD3, 0xB3, 0xAD, 0xCF, 0x92, 0x42, 0x17, 0x2E,
    0xE9, 0x64, 0xEC, 0xBC, 0x95, 0xB2, 0xC9, 0x46, 0x6A, 0x26, 0xE6, 0xC5, 0x4D, 0x9E, 0x41, 0x42,
    0xC9, 0x25, 0x63, 0xDC, 0x34, 0xA9, 0x0F, 0x78, 0xD9, 0x1B, 0x63, 0x6C, 0x2D, 0x63, 0x4E, 0x91,
    0x29, 0xDB, 0x0B, 0x5A, 0xB7, 0x86, 0x70, 0xB1, 0xCA, 0xEF, 0x30, 0x5E, 0x0D, 0x25, 0xAC, 0x03,
    0x42, 0x02, 0x60, 0x1D, 0x41, 0xB2, 0x80, 0xFC, 0x4D, 0x58, 0x07, 0x90, 0x6D, 0xE0, 0x80, 0x10,
    0xCB, 0x1C, 0x00, 0x8B, 0x21, 0x5C, 0x04, 0xA5, 0xAE, 0x40, 0x15, 0xC6, 0x6D, 0x44, 0xDB, 0xD4,
    0x3B, 0xBD, 0x73, 0xB2, 0x76, 0x4D, 0x48, 0xBB, 0x73, 0xA4, 0xBC, 0x72, 0xD4, 0x36, 0x69, 0x4A,
    0x85, 0x2C, 0xBD, 0x55, 0xAB, 0x16, 0x2F, 0x16, 0x8D, 0x0D, 0x20, 0xBD, 0xB6, 0xBD, 0xB1, 0xB7,
    0x84, 0x1B, 0x15, 0x70, 0x7E, 0x0B, 0xBF, 0xC0, 0x00, 0x00, 0x60, 0x10, 0xDB, 0x1A, 0x80, 0x7B,
    0xA4, 0xD8, 0x03, 0x26, 0xA7, 0xCA, 0xA4, 0xCA, 0xB6, 0x83, 0x96, 0xF6, 0xAE, 0xD5, 0x8A, 0xA1,
    0x02, 0xA7, 0x06, 0x93, 0xE6, 0xAC, 0xD5, 0xAA, 0xA3, 0x59, 0x5B, 0x29, 0xAA, 0xF6, 0xAE, 0xD5,
    0xBA, 0xF7, 0x66, 0xAD, 0x7D, 0xDE, 0x59, 0xA6, 0x2B, 0x9B, 0xAD, 0x73, 0x68, 0xD0, 0x4B, 0x4D,
    0x3A, 0xDE, 0xCB, 0xD4, 0xD3, 0xB9, 0x3B, 0x91, 0xB6, 0xF5, 0xDE, 0xBB, 0xD9, 0x79, 0x95, 0x11,
    0x2D, 0x11, 0xD6, 0x5E, 0x47, 0x4C, 0x3C, 0xD3, 0x66, 0x17, 0xB5, 0x8D, 0x0A, 0xF9, 0x60, 0x6D,
    0xFE, 0x60, 0x10, 0x9D, 0xA6, 0x27, 0x6D, 0x2A, 0x1D, 0x1E, 0x49, 0xBA, 0xB7, 0x55, 0x2B, 0x74,
    0x0E, 0xD0, 0xD9, 0x59, 0x3B, 0x61, 0x6B, 0xDE, 0x36, 0xA5, 0x2B, 0x57, 0x5C, 0x87, 0xBB, 0xC8,
    0x53, 0x71, 0x97, 0xB1, 0x4C, 0xF0, 0xAC, 0xE4, 0x00, 0x60, 0x0F, 0x6B, 0x3B, 0x40, 0xA4, 0x8F,
    0x4D, 0x3C, 0x2B, 0x68, 0xF7, 0x26, 0xA6, 0x72, 0xE1, 0x6A, 0x23, 0x35, 0x8A, 0x20, 0xD4, 0x3B,
    0x99, 0xAE, 0x5A, 0xA8, 0x30, 0xD6, 0xB6, 0x64, 0x37, 0xB1, 0xD7, 0xB5, 0x83, 0x77, 0x14, 0xD4,
    0x4D, 0xE3, 0xCC, 0x00, 0x0C, 0x05, 0x8D, 0x2C, 0xB0, 0x0E, 0x01, 0x40, 0x0F, 0x40, 0x0B, 0xA3,
    0x99, 0xC0, 0xB5, 0x4B, 0xAC, 0x4A, 0xCB, 0x48, 0xF7, 0x5D, 0x2C, 0x95, 0x07, 0x4D, 0x11, 0x69,
    0x0B, 0x1B, 0x11, 0xF3, 0x88, 0x7A, 0xBE, 0xC4, 0xDE, 0x08, 0x02, 0xB5, 0x47, 0x78, 0x0E, 0x02,
    0x8B, 0x59, 0xE4, 0x8F, 0x63, 0xC4, 0x24, 0x4C, 0xF9, 0x2B, 0x9E, 0xCC, 0xF1, 0x56, 0xAD, 0x4B,
    0x28, 0x92, 0xBB, 0xDE, 0x8F, 0x32, 0xC2, 0x78, 0xD8, 0xCD, 0x26, 0x36, 0x42, 0x00, 0x0F, 0xA8,
    0x40, 0x0E, 0x3B, 0xB4, 0xAB, 0xA4, 0x59, 0xC5, 0xD7, 0x6D, 0xBA, 0xFB, 0x6E, 0xEE, 0xA5, 0xF2,
    0x83, 0xB1, 0xB0, 0x7D, 0x11, 0x81, 0x97, 0x13, 0x11, 0x33, 0x13, 0xE0, 0x8C, 0x54, 0x97, 0x69,
    0x79, 0x70, 0xB7, 0x0F, 0x50, 0x10, 0x9E, 0x23, 0x40, 0xE5, 0x51, 0x73, 0xCB, 0xC0, 0x5B, 0x77,
    0x55, 0xEB, 0xA5, 0x6D, 0x9A, 0x52, 0xA1, 0x4B, 0x1B, 0x68, 0xF1, 0x40, 0x06, 0x84, 0x4C, 0x00,
    0x94, 0xD4, 0x5A, 0x07, 0x24, 0xA4, 0xA1, 0x41, 0xDA, 0xF9, 0xB9, 0x35, 0x2C, 0x1C, 0xD2, 0x8D,
    0x13, 0xCC, 0xCC, 0xE0, 0x2E, 0xB8, 0x89, 0x54, 0xFB, 0x2C, 0x95, 0xB5, 0xB7, 0x35, 0x66, 0xDC,
    0xDF, 0x6B, 0xDD, 0x65, 0x55, 0xD8, 0x97, 0xC3, 0x06, 0xDC, 0xDF, 0x28, 0xA5, 0x6E, 0xC1, 0xB5,
    0x27, 0x97, 0x67, 0x5B, 0x30, 0x84, 0x5A, 0x49, 0x5E, 0x55, 0xE0, 0x70, 0x11, 0xE3, 0xAC, 0x00,
    0x8C, 0xA8, 0xDE, 0x04, 0x24, 0x8D, 0x1E, 0x5A, 0x1B, 0x49, 0xD9, 0xF9, 0x3B, 0xE7, 0x0E, 0xCA,
    0xF9, 0xC9, 0x4E, 0xF7, 0xBA, 0xB8, 0xB4, 0xB6, 0xF4, 0x72, 0x69, 0x4E, 0x21, 0xC2, 0xAB, 0x9C,
    0x96, 0x76, 0x89, 0x61, 0xBB, 0x66, 0x25, 0x96, 0x9A, 0x09, 0xF1, 0xD7, 0x29, 0xA2, 0xB7, 0x55,
    0x46, 0x52, 0x1E, 0xB0, 0x00, 0x50, 0x09, 0x82, 0xC5, 0xA6, 0xA4, 0x59, 0xC5, 0xD7, 0x6D, 0x9A,
    0x37, 0x55, 0x6D, 0x45, 0xE8, 0x64, 0x34, 0xC3, 0xCC, 0x63, 0x7B, 0x6F, 0x55, 0xEA, 0x4B, 0xB4,
    0xBC, 0xB8, 0x5D, 0x65, 0x22, 0xA8, 0x68, 0x93, 0x35, 0x5F, 0x18, 0xA2, 0x29, 0x45, 0x64, 0x03,
    0xC0, 0x00, 0x00, 0x40, 0x0F, 0x8C, 0x03, 0x40, 0x58, 0x07, 0x03, 0x51, 0xBA, 0x39, 0x0E, 0xB2,
    0xDC, 0xEC, 0x9D, 0x93, 0x72, 0x4A, 0x55, 0xBD, 0x9D, 0x43, 0x16, 0x8F, 0x99, 0xB4, 0x2E, 0xB7,
    0x01, 0xB5, 0x3B, 0xCC, 0x08, 0x80, 0xD0, 0x2D, 0x52, 0xDD, 0x72, 0xB2, 0xF5, 0xDA, 0x56, 0x8D,
    0x55, 0x2A, 0x4D, 0xDA, 0x76, 0xC6, 0xF8, 0xE0, 0xFC, 0x19, 0x81, 0xAB, 0xEA, 0xCB, 0x4E, 0xC5,
    0xE0, 0xBC, 0x11, 0x89, 0x6D, 0xD0, 0x88, 0xCE, 0x43, 0xE2, 0x5C, 0x7C, 0x70, 0x0E, 0xE3, 0x92,
    0x00, 0x7C, 0x61, 0xA5, 0x1A, 0xB1, 0x34, 0xCA, 0xB3, 0x6E, 0xD1, 0x6A, 0x19, 0xC4, 0xA9, 0x45,
    0x99, 0xD6, 0xA9, 0xD9, 0x5B, 0x35, 0x53, 0xE4, 0xB6, 0x8F, 0xB1, 0xBD, 0xD5, 0x9A, 0xEF, 0x64,
    0xAD, 0x7D, 0xCE, 0x9E, 0xB2, 0x09, 0x3B, 0x9D, 0x84, 0x30, 0x14, 0xF1, 0x89, 0x94, 0xE2, 0x00,
    0x00, 0x80, 0x30, 0xB7, 0x55, 0x01, 0xA7, 0x45, 0xA0, 0x0B, 0x2E, 0xDC, 0x40, 0x3D, 0xD2, 0x5E,
    0x00, 0x00, 0x50, 0x0E, 0xE3, 0x92, 0xC0, 0x58, 0x12, 0x85, 0x37, 0xAD, 0x25, 0x7B, 0xA5, 0x61,
    0xAC, 0x55, 0x8B, 0x12, 0x2B, 0x13, 0x4C, 0xAB, 0x36, 0xB4, 0xEC, 0xE2, 0x54, 0xA2, 0xCC, 0xEF,
    0x55, 0x6C, 0x9D, 0xC6, 0x03, 0x94, 0x76, 0x58, 0x0C, 0x03, 0xF2, 0x77, 0x68, 0x0B, 0x01, 0x00,
    0x7E, 0x8C, 0x42, 0x03, 0xFB, 0x71, 0x10, 0x1F, 0xD2, 0x98, 0x80, 0xEB, 0x49, 0xBC, 0x00, 0x00,
    0x60, 0x1F, 0x6A, 0xB2, 0xC0, 0x58, 0x0D, 0x01, 0x20, 0x4A, 0x16, 0x4A, 0x65, 0xD3, 0x1B, 0xBB,
    0x8F, 0x71, 0xEE, 0x3D, 0x47, 0x0C, 0x44, 0x39, 0x64, 0x73, 0x71, 0xEE, 0x3D, 0x4B, 0x2B, 0xBA,
    0xB9, 0x4D, 0x5F, 0xB3, 0xEE, 0xAD, 0xD5, 0xBB, 0x31, 0x6B, 0xA9, 0x0C, 0xB4, 0xF1, 0x2C, 0xDD,
    0x5B, 0xA1, 0x82, 0xA2, 0x8E, 0xC7, 0x72, 0x36, 0xE0, 0xBC, 0x11, 0x82, 0xA2, 0xAA, 0xEB, 0x32,
    0xB6, 0xE1, 0xE0, 0x30, 0x08, 0x4B, 0x46, 0x26, 0x9B, 0xD4, 0xD2, 0x67, 0x97, 0x89, 0xA7, 0x14,
    0x34, 0xCA, 0xC1, 0x6A, 0x69, 0xB1, 0x11, 0x76, 0xB2, 0x58, 0x9A, 0x90, 0x43, 0x4D, 0xAC, 0x9E,
    0x67, 0xC5, 0x57, 0x92, 0x98, 0x55, 0xE3, 0x2F, 0x55, 0xEB, 0xBD, 0xB5, 0xB9, 0xF8, 0x3B, 0x2B,
    0x49, 0x48, 0x6E, 0xF0, 0x8E, 0xBF, 0x11, 0x41, 0x4C, 0xAA, 0xA7, 0x80, 0x35, 0xA1, 0x76, 0x44,
    0x54, 0x24, 0xCD, 0x69, 0x15, 0x33, 0x32, 0xEE, 0x0C, 0x59, 0x99, 0x53, 0x99, 0xBC, 0x93, 0x93,
    0xC6, 0x4A, 0xC9, 0x1B, 0x9D, 0xED, 0x5A, 0x9E, 0x78, 0x34, 0x67, 0xCB, 0x66, 0xE7, 0xDC, 0xEC,
    0x00, 0xCC, 0x59, 0x70, 0x14, 0x7C, 0x9D, 0xAB, 0x8B, 0xDC, 0xD8, 0x67, 0x31, 0x8B, 0x1D, 0x36,
    0x94, 0x8C, 0x92, 0x66, 0xDC, 0x5E, 0xE7, 0xCD, 0x3B, 0xC7, 0x76, 0x98, 0xBA, 0xF0, 0xCB, 0x17,
    0x54, 0x8E, 0x4F, 0xCD, 0x98, 0xC5, 0xCD, 0x0C, 0x14, 0xD3, 0x35, 0xD0, 0xED, 0x1A, 0x93, 0xB9,
    0x03, 0xC0, 0x00, 0x00, 0xB5, 0x58, 0x34, 0x2A, 0x24, 0x4C, 0xF5, 0x55, 0x1B, 0x0E, 0x8A, 0x9B,
    0x55, 0x55, 0x18, 0xBC, 0x22, 0x56, 0x75, 0x80, 0x7E, 0x28, 0xB1, 0x02, 0x20, 0x40, 0x0F, 0xC9,
    0x96, 0x20, 0x44, 0x05, 0x81, 0x88, 0x60, 0xE8, 0xB7, 0x2B, 0x8D, 0xE2, 0x57, 0x4A, 0xE5, 0x92,
    0x63, 0x99, 0x9B, 0x33, 0xDE, 0x8B, 0x54, 0xEB, 0x4C, 0xA3, 0xDB, 0x52, 0xF5, 0x52, 0xB7, 0xEE,
    0x24, 0xA6, 0x93, 0x76, 0xB5, 0xFB, 0x69, 0x38, 0xB4, 0xE5, 0xAF, 0x7C, 0xDD, 0x22, 0xE2, 0x0B,
    0x7B, 0xEB, 0x7C, 0xAF, 0x6C, 0xCD, 0xEA, 0x6A, 0x19, 0x2B, 0xDC, 0xE7, 0x36, 0xA7, 0xA9, 0x22,
    0xF1, 0xC2, 0x5E, 0xA9, 0x93, 0x68, 0xBC, 0x6D, 0xA7, 0xA8, 0x96, 0xD7, 0x80, 0x03, 0x00, 0x46,
    0xBB, 0x72, 0xAC, 0x3D, 0xE4, 0x99, 0x2F, 0xDC, 0xAA, 0x8C, 0x79, 0x28, 0x5B, 0xB5, 0xAC, 0xAB,
    0x1A, 0x8A, 0x09, 0xDD, 0x3B, 0x5D, 0x6B, 0x96, 0xF0, 0xA6, 0x53, 0xCE, 0x55, 0x06, 0x65, 0xA1,
    0xBD, 0xAF, 0xB3, 0x76, 0x6E, 0xCB, 0xC9, 0x66, 0xBC, 0xAA, 0x42, 0xB1, 0xF6, 0x6E, 0x51, 0x27,
    0xE3, 0xBA, 0x35, 0x6F, 0xB6, 0xE3, 0x18, 0xC5, 0x96, 0x5B, 0x29, 0x94, 0xC1, 0xF2, 0x4A, 0x99,
    0xE8, 0x54, 0x30, 0x74, 0x18, 0xAE, 0x6E, 0x94, 0x80, 0x16, 0x0B, 0x54, 0x01, 0xFC, 0x9A, 0xB8,
    0x0F, 0xD1, 0xD9, 0xC0, 0x7D, 0xA8, 0xCA, 0x03, 0xF1, 0x44, 0x50, 0x1F, 0x91, 0x91, 0x80, 0xFB,
    0x0D, 0x08, 0x07, 0x9A, 0x6B, 0xE0, 0x45, 0xC8, 0x33, 0x53, 0xCB, 0xB6, 0xA5, 0x76, 0x12, 0xC6,
    0xAA, 0x6E, 0x4C, 0x4F, 0x88, 0x5B, 0x04, 0xA6, 0xD7, 0x53, 0xD6, 0x34, 0x80, 0xCD, 0xAC, 0xD4,
    0xB2, 0x9B, 0x8A, 0x54, 0xFA, 0xF5, 0x24, 0xA2, 0xE2, 0xB7, 0x3D, 0xAD, 0x4B, 0x18, 0xB9, 0xB5,
    0x57, 0x6F, 0x13, 0x45, 0xEE, 0x6B, 0x53, 0xE4, 0xC5, 0x55, 0x64, 0x31, 0xD5, 0x6D, 0x6D, 0x75,
    0x9B, 0x0E, 0x50, 0xDE, 0xDB, 0x5F, 0x47, 0x43, 0x14, 0x37, 0x96, 0xB8, 0x3E, 0xF0, 0x65, 0xF3,
    0x32, 0xA2, 0x34, 0xBB, 0x1D, 0x75, 0x14, 0xE8, 0x8F, 0x1B, 0x04, 0x63, 0x3A, 0xC3, 0x20, 0xB6,
    0x57, 0xC0, 0x00, 0x00, 0x35, 0x56, 0x7C, 0x31, 0xB2, 0x6F, 0x5F, 0x57, 0x6B, 0xED, 0x1A, 0x9E,
    0x52, 0x76, 0x46, 0x9F, 0x66, 0xA5, 0x75, 0x55, 0x9A, 0x6E, 0x99, 0x0A, 0xF1, 0x3A, 0x85, 0x31,
    0x72, 0x18, 0x08, 0x25, 0x55, 0x00, 0x2A, 0x2D, 0x2E, 0x02, 0x6E, 0xA6, 0x54, 0x6D, 0xC8, 0xD3,
    0xC8, 0xCF, 0x2F, 0x56, 0x2B, 0x76, 0x4A, 0x1B, 0x09, 0xFD, 0x8B, 0x1F, 0xB3, 0x95, 0xB1, 0xBA,
    0xF2, 0xD7, 0xD5, 0xA5, 0x9D, 0x6C, 0xFC, 0xBE, 0x11, 0xB8, 0x28, 0x6B, 0x65, 0xEF, 0x86, 0x0A,
    0x4A, 0xC4, 0xAD, 0x42, 0x9B, 0x82, 0xAF, 0x6B, 0x51, 0x64, 0x9E, 0x56, 0x0A, 0x02, 0xEC, 0x66,
    0x60, 0x1C, 0x2B, 0x32, 0x00, 0x7A, 0x2C, 0x48, 0x02, 0x22, 0xEC, 0x00, 0x1E, 0xB5, 0xFA, 0x6B,
    0xA9, 0x98, 0x37, 0x79, 0x54, 0xA7, 0x0A, 0x6B, 0x5A, 0x5E, 0x55, 0x18, 0xB9, 0xB5, 0x57, 0x6E,
    0xD5, 0xD5, 0x90, 0xC7, 0x55, 0xB5, 0x80, 0x1F, 0x9B, 0xB4, 0xC0, 0x90, 0x1F, 0x8B, 0x33, 0x00,
    0xA8, 0xF5, 0x41, 0x80, 0x56, 0x8C, 0xCC, 0x02, 0xD1, 0x52, 0xE4, 0x72, 0x93, 0x95, 0xB5, 0x67,
    0x3B, 0x27, 0x25, 0x9C, 0x9A, 0x99, 0x67, 0x3B, 0xD9, 0xFB, 0x56, 0xAB, 0x8C, 0x5A, 0x9C, 0xF6,
    0x33, 0x1B, 0x40, 0x01, 0x40, 0x45, 0x2E, 0xAA, 0x03, 0x89, 0x68, 0x50, 0x18, 0x3B, 0x38, 0x78,
    0x74, 0x72, 0x01, 0xCD, 0x4C, 0xB6, 0xB1, 0x44, 0x22, 0xCA, 0xD2, 0xDF, 0x3E, 0x4D, 0x44, 0x35,
    0x15, 0x34, 0xDF, 0x72, 0x6E, 0x4C, 0xCB, 0x99, 0xAD, 0x44, 0x8A, 0xD6, 0x92, 0x93, 0x7B, 0xD5,
    0x6B, 0x1C, 0x88, 0x95, 0x74, 0x9B, 0xD6, 0xD8, 0x5E, 0x96, 0x54, 0xB3, 0xAD, 0xD9, 0xF7, 0xB6,
    0xF5, 0xE1, 0xE0, 0xB5, 0x72, 0x7B, 0xB2, 0xB2, 0x7B, 0x3B, 0x3E, 0xA4, 0x64, 0xDE, 0x9D, 0xB2,
    0xA9, 0xB9, 0x73, 0x2E, 0x65, 0xD5, 0x0F, 0x84, 0xCB, 0xCB, 0x68, 0xF3, 0x56, 0x6C, 0xCD, 0x97,
    0xBA, 0x97, 0x35, 0xEF, 0x0E, 0xEF, 0xD4, 0x9D, 0xD3, 0xB9, 0xD7, 0xAD, 0xEF, 0x2E, 0xF1, 0x8B,
    0x7D, 0xE6, 0x02, 0xA0, 0x37, 0x58, 0x07, 0x00, 0xA0, 0x78, 0xB5, 0x92, 0x83, 0x2A, 0xB9, 0xEF,
    0x77, 0x26, 0x26, 0x7C, 0x1A, 0x59, 0x97, 0x75, 0x29, 0x11, 0x76, 0x77, 0x7A, 0xC4, 0x46, 0x4A,
    0xCB, 0x09, 0x91, 0x76, 0x75, 0x99, 0xC8, 0xD2, 0x86, 0x51, 0x9D, 0x9E, 0x39, 0x76, 0xAA, 0xD6,
    0xA6, 0x17, 0x3D, 0xAE, 0x6C, 0xDD, 0xB9, 0xBA, 0xD7, 0x57, 0x52, 0x63, 0x0F, 0x6B, 0x9D, 0xED,
    0xBD, 0x77, 0xA2, 0xF6, 0xB8, 0x6E, 0x0A, 0xA3, 0x88, 0xB9, 0xAE, 0x2B, 0x82, 0xA8, 0xD9, 0xAF,
    0x4B, 0x56, 0x28, 0xA6, 0xC2, 0x4B, 0xD6, 0xA6, 0x57, 0x47, 0x76, 0x78, 0x00, 0x00, 0x03, 0x4C,
    0x65, 0x44, 0x4B, 0xC3, 0x6C, 0xD5, 0x11, 0x55, 0x52, 0xD1, 0x1B, 0x95, 0x71, 0x83, 0x4B, 0x34,
    0x79, 0x7B, 0x57, 0x6A, 0xE5, 0x51, 0x7C, 0x54, 0xAC, 0x4A, 0xFB, 0x57, 0x2A, 0x8B, 0xA2, 0xE5,
    0x22, 0x57, 0xCA, 0xA0, 0xF8, 0xA7, 0x78, 0x91, 0xF2, 0xB8, 0x42, 0x29, 0xDD, 0xE2, 0xBA, 0xB1,
    0xF0, 0x8A, 0x77, 0x78, 0xED, 0xAD, 0x7C, 0x1E, 0x21, 0x9E, 0x69, 0x0B, 0xA0, 0xF0, 0xB6, 0x98,
    0x56, 0x42, 0xE8, 0x3C, 0x2D, 0xA6, 0x15, 0x6A, 0xB9, 0xD0, 0x0C, 0x68, 0x95, 0x5B, 0x31, 0x5B,
    0x4B, 0x31, 0x6D, 0x40, 0xBC, 0x8F, 0x91, 0x72, 0xF0, 0xD5, 0x74, 0x43, 0xB4, 0xD3, 0x4A, 0xB5,
    0x5C, 0x9E, 0xD2, 0xED, 0x9A, 0xDE, 0x54, 0xC7, 0xBF, 0x62, 0x24, 0xBF, 0xB5, 0x76, 0xAD, 0xD4,
    0x8B, 0x48, 0xFB, 0x75, 0x48, 0xB6, 0xBA, 0xC4, 0xBE, 0xBA, 0x10, 0xE5, 0x77, 0xAE, 0xD6, 0x1E,
    0xD7, 0xCA, 0x67, 0x6B, 0xAD, 0xB2, 0xB8, 0xDA, 0xBC, 0x32, 0x79, 0x5C, 0x70, 0x5E, 0x03, 0xC3,
    0xC0, 0x00, 0x00, 0x75, 0x92, 0x4C, 0x33, 0xAC, 0xA9, 0x31, 0x6C, 0x9E, 0xEC, 0xAC, 0x9E, 0xCD,
    0x50, 0xF7, 0xE5, 0xB2, 0xC5, 0x77, 0x74, 0x6E, 0xAD, 0xD5, 0xBB, 0x33, 0x6D, 0xAD, 0x64, 0x2F,
    0x55, 0x1A, 0x5D, 0x7B, 0xAF, 0x75, 0x6F, 0x85, 0xF0, 0x78, 0x5B, 0x4C, 0x2B, 0x21, 0x84, 0x1E,
    0x16, 0xD3, 0x0A, 0xB8, 0xE0, 0xEC, 0x56, 0xD2, 0xCC, 0x5B, 0x50, 0x37, 0x15, 0xE2, 0x7C, 0x4B,
    0x97, 0x80, 0x75, 0x0E, 0xBD, 0x2A, 0x4B, 0x27, 0x6D, 0x5E, 0x23, 0x2C, 0xE0, 0x49, 0x5C, 0x55,
    0x07, 0xCA, 0x9B, 0xBB, 0x97, 0x15, 0x32, 0x8A, 0xEF, 0x21, 0x27, 0xD5, 0x4C, 0x7B, 0xF2, 0xB9,
    0xDB, 0x7B, 0x56, 0xAA, 0x63, 0xE7, 0xE4, 0x9A, 0x5F, 0xBA, 0xB7, 0x56, 0xEA, 0xCD, 0x79, 0xB2,
    0xD6, 0xAA, 0x97, 0xAA, 0x6E, 0xF5, 0x95, 0xC9, 0xC5, 0x61, 0xB3, 0x3C, 0x21, 0x72, 0x37, 0x52,
    0xE1, 0x2E, 0x58, 0x5A, 0x9D, 0xCB, 0xB1, 0xCC, 0x39, 0xD7, 0x29, 0xEF, 0x48, 0xCC, 0x93, 0x55,
    0xCF, 0x73, 0x4B, 0x04, 0x27, 0x3C, 0x00, 0x00, 0x65, 0xD0, 0x7C, 0xA9, 0xBB, 0xB9, 0x5D, 0x73,
    0x28, 0xAE, 0xF2, 0x12, 0x7B, 0x56, 0xC7, 0xBF, 0x2B, 0x9D, 0xB7, 0x35, 0xDA, 0xA7, 0x27, 0x75,
    0xD8, 0x66, 0xF9, 0xA3, 0x33, 0xE6, 0x6C, 0xCD, 0x79, 0xEF, 0x46, 0x2A, 0x6B, 0xB2, 0x99, 0x12,
    0xDB, 0xAB, 0x21, 0x0B, 0xA6, 0x53, 0x96, 0xF2, 0xEA, 0x42, 0xE5, 0x1C, 0xE6, 0xBC, 0xBA, 0xD2,
    0xC9, 0x26, 0x29, 0xAF, 0x6F, 0xDE, 0x14, 0xC3, 0x30, 0x55, 0x0B, 0xAB, 0x5A, 0xB0, 0x5B, 0x8B,
    0x29, 0x6D, 0xA2, 0xBC, 0x17, 0x82, 0x30, 0x5B, 0x8B, 0x65, 0x61, 0xA0, 0xAC, 0x16, 0xE6, 0x3B,
    0x87, 0x71, 0xAB, 0x06, 0xA9, 0xCA, 0xAC, 0xA2, 0x29, 0xC7, 0xC0, 0x84, 0x54, 0x81, 0x92, 0xED,
    0xD4, 0xEB, 0x2D, 0xE5, 0xCC, 0xDB, 0x9B, 0x73, 0xEE, 0x7D, 0xCF, 0x8A, 0x2B, 0x44, 0x21, 0xBA,
    0xD2, 0x66, 0xAB, 0xD5, 0x5A, 0x8C, 0x01, 0x9A, 0x9E, 0xCA, 0xDC, 0x86, 0x67, 0xE7, 0xAC, 0xF8,
    0xD5, 0x17, 0x8B, 0x98, 0x4D, 0xF9, 0x31, 0x46, 0x24, 0xC6, 0x15, 0x99, 0xCD, 0xD1, 0xBA, 0x33,
    0x55, 0xAC, 0xC5, 0x99, 0x02, 0x2B, 0xB8, 0xFB, 0x87, 0x70, 0x01, 0x00, 0xCC, 0x4D, 0x54, 0x06,
    0xF7, 0x30, 0xD0, 0x14, 0x07, 0x39, 0x72, 0x80, 0x35, 0x96, 0x95, 0x01, 0x76, 0xB3, 0x00, 0x80,
    0x7E, 0x09, 0xBC, 0x04, 0x00, 0xD4, 0xB4, 0x72, 0x8B, 0x4A, 0x4C, 0xEA, 0x35, 0x9C, 0x9A, 0xB2,
    0x63, 0x5B, 0xBD, 0x66, 0xA4, 0xB4, 0xD0, 0x93, 0x2E, 0xD5, 0xD8, 0xF3, 0x22, 0x6B, 0x50, 0x08,
    0x14, 0x54, 0x28, 0xBD, 0x1C, 0x82, 0x6B, 0x4B, 0x9A, 0xB7, 0x5E, 0x2E, 0xBD, 0x98, 0xC2, 0x6F,
    0x4B, 0x3C, 0x1F, 0x92, 0xF2, 0x3E, 0x9E, 0x00, 0x00, 0xE5, 0x78, 0x83, 0x38, 0xC3, 0x6B, 0x7B,
    0x5F, 0x2B, 0x95, 0xA5, 0x85, 0xA2, 0xD9, 0xAB, 0x23, 0x08, 0x63, 0x29, 0x97, 0x6E, 0xBD, 0x56,
    0xF5, 0xD4, 0x9B, 0xEC, 0x77, 0x95, 0x42, 0xF2, 0xAE, 0xD5, 0x1D, 0xED, 0x1D, 0x9F, 0xB3, 0xEA,
    0x77, 0xCA, 0x91, 0xDD, 0xEB, 0xCE, 0xB5, 0xB1, 0xB4, 0x78, 0x3B, 0x1C, 0xED, 0xDD, 0xB9, 0xBE,
    0x98, 0x3A, 0x92, 0x94, 0x8B, 0x62, 0x76, 0x2D, 0x8A, 0xBA, 0x92, 0x59, 0x5D, 0x93, 0x20, 0x6C,
    0xE7, 0x32, 0x45, 0x66, 0xC8, 0x23, 0x40, 0xD4, 0x89, 0x19, 0x36, 0x28, 0xCC, 0x93, 0x23, 0x46,
    0x4A, 0x83, 0x2C, 0x24, 0x4A, 0xFC, 0x84, 0xD2, 0xA3, 0x3B, 0x2C, 0xE4, 0xE9, 0x33, 0xE6, 0xEF,
    0x0B, 0x7A, 0x5E, 0xD1, 0xDA, 0xBB, 0x56, 0x2A, 0x5C, 0xB6, 0x21, 0x5F, 0x3D, 0x6A, 0x94, 0xFF,
    0xC5, 0x73, 0x96, 0x56, 0xCA, 0xDA, 0xEB, 0x91, 0x0B, 0x8D, 0x02, 0xAE, 0x2A, 0xFA, 0xB2, 0x09,
    0xD1, 0x1B, 0x6A, 0x03, 0xA9, 0xA3, 0x68, 0x0E, 0x02, 0xE0, 0x64, 0x58, 0x06, 0x03, 0x83, 0x56,
    0x30, 0x1F, 0x4B, 0x4F, 0x80, 0xC5, 0x13, 0xB2, 0xB2, 0x3C, 0xC6, 0xF9, 0x45, 0x2D, 0x2C, 0x8A,
    0xFA, 0xDE, 0xCF, 0xC9, 0xA7, 0x69, 0x65, 0x59, 0xCE, 0xF2, 0x6A, 0x52, 0x95, 0x2A, 0xB3, 0xBC,
    0x9A, 0x93, 0xA5, 0x5A, 0xCC, 0xE7, 0x27, 0xA4, 0x69, 0x51, 0x9B, 0x37, 0xCA, 0xA7, 0x2A, 0x35,
    0x66, 0xCA, 0x72, 0xB9, 0x52, 0x59, 0x15, 0x73, 0x9A, 0xB2, 0x33, 0xA6, 0x26, 0x6C, 0xD6, 0x2E,
    0x93, 0xEA, 0x85, 0xD3, 0x37, 0x0B, 0xD7, 0x05, 0x65, 0x67, 0xAD, 0xBA, 0xF5, 0x40, 0xE9, 0x1B,
    0x1C, 0x0E, 0xBD, 0x30, 0x3A, 0x47, 0xB8, 0xD3, 0x2F, 0x4B, 0x8A, 0xD9, 0x72, 0x34, 0xAC, 0x16,
    0xD1, 0xD6, 0x6C, 0x89, 0x27, 0x13, 0xE5, 0x0C, 0xA8, 0xA7, 0x44, 0x78, 0xD8, 0x2F, 0x14, 0x61,
    0x28, 0xCA, 0xBA, 0xCD, 0x6B, 0xC0, 0xE5, 0x53, 0x9C, 0xA3, 0x33, 0xD6, 0xF9, 0x54, 0xEB, 0x0C,
    0xC9, 0x15, 0xCE, 0x55, 0x3A, 0xCB, 0xAA, 0x4D, 0x77, 0xB5, 0x76, 0xAE, 0x55, 0x1B, 0xBB, 0xA3,
    0x54, 0x57, 0xB5, 0x76, 0xCD, 0xDD, 0x6B, 0x9B, 0x36, 0x56, 0x49, 0xA9, 0xC2, 0xF7, 0x2C, 0x32,
    0xAD, 0x4B, 0xB1, 0xBE, 0x38, 0x3F, 0x16, 0xE4, 0xEB, 0x8E, 0xC4, 0xFA, 0x57, 0x32, 0x3E, 0xE2,
    0x00, 0x34, 0xD4, 0x20, 0x0C, 0xA6, 0x21, 0x20, 0x24, 0x03, 0x80, 0x50, 0x3C, 0xE5, 0x14, 0x9C,
    0x32, 0xC2, 0xF7, 0x39, 0x45, 0x29, 0x2C, 0x8C, 0xBE, 0x4E, 0x4F, 0x4B, 0x2B, 0xB1, 0xBD, 0x93,
    0xB3, 0x4A, 0x73, 0x3D, 0xEE, 0x17, 0x99, 0x53, 0xA1, 0xC0, 0x52, 0x0E, 0xEE, 0x02, 0xC7, 0x47,
    0xC5, 0x0F, 0xCA, 0x2B, 0xB9, 0xEB, 0x73, 0x6D, 0xEF, 0x86, 0x2C, 0xB8, 0x55, 0x43, 0x68, 0x99,
    0x93, 0x2E, 0x6B, 0x6F, 0x11, 0xB5, 0x64, 0xB9, 0x1B, 0x63, 0xBA, 0x8F, 0xC0, 0x00, 0x00, 0xD4,
    0xF5, 0x93, 0x39, 0x3B, 0xE9, 0x79, 0x3D, 0xA7, 0x2C, 0x4E, 0xFA, 0xEE, 0x4F, 0x1A, 0xB2, 0xAC,
    0xC5, 0xD7, 0xB3, 0x5A, 0x56, 0xE0, 0xDE, 0xE4, 0xB5, 0x57, 0x9A, 0xF3, 0xDA, 0xA7, 0x6D, 0x91,
    0xEC, 0x76, 0xB7, 0xAA, 0xF5, 0xDE, 0xEB, 0xDF, 0x5C, 0x2F, 0x85, 0xB1, 0x6D, 0x9D, 0x17, 0xCB,
    0x6A, 0xEC, 0x9D, 0x95, 0x58, 0xC2, 0xDA, 0x33, 0x37, 0x68, 0x66, 0xD5, 0xA5, 0x4E, 0xD1, 0xD5,
    0x66, 0x63, 0xC5, 0x27, 0x80, 0x00, 0x00, 0xE5, 0x54, 0xAC, 0xA9, 0xC3, 0xEB, 0x7B, 0x5E, 0xEC,
    0xC5, 0x93, 0xB3, 0x12, 0xD3, 0xEB, 0x27, 0x5C, 0x6C, 0xB5, 0x91, 0x8A, 0x03, 0xDB, 0x58, 0xA0,
    0x05, 0xC0, 0x2A, 0xE0, 0x2E, 0x01, 0x5C, 0x51, 0x93, 0xC3, 0xAA, 0x43, 0xD3, 0x93, 0xC7, 0x71,
    0x0C, 0x58, 0xE4, 0xEC, 0xFD, 0x9F, 0xB3, 0xF6, 0x6D, 0x4F, 0x3D, 0xA4, 0x24, 0x5B, 0x68, 0x40,
    0x0E, 0x2C, 0xC0, 0x04, 0x01, 0xE9, 0x53, 0x80, 0x12, 0x8A, 0xBB, 0x40, 0xA5, 0x09, 0xA4, 0xBB,
    0x33, 0x69, 0x2F, 0x56, 0x2F, 0x85, 0x99, 0x91, 0x6B, 0xAB, 0x5C, 0x21, 0x84, 0x24, 0x17, 0x35,
    0xD1, 0x78, 0x62, 0xB6, 0xBC, 0x6E, 0x33, 0x29, 0x98, 0xB1, 0xC9, 0x5D, 0x2C, 0x8A, 0x0F, 0xD4,
    0xD1, 0xA4, 0x52, 0x35, 0xC8, 0xF7, 0x37, 0x67, 0xED, 0x1D, 0xAB, 0xB5, 0x76, 0xBD, 0x5A, 0xF8,
    0xC4, 0x1B, 0xC6, 0x4B, 0x77, 0x5F, 0x17, 0x01, 0x16, 0xB2, 0x3C, 0x06, 0x80, 0xB0, 0x16, 0x01,
    0x40, 0xF0, 0x50, 0x17, 0x64, 0x2B, 0x40, 0xE4, 0x34, 0x94, 0x21, 0xB3, 0x7B, 0x3B, 0x27, 0x65,
    0xAC, 0xD1, 0x9D, 0x80, 0x51, 0x50, 0x2A, 0x02, 0x89, 0x78, 0x68, 0x02, 0x00, 0x4D, 0xA8, 0x00,
    0x50, 0x08, 0x63, 0x3E, 0x23, 0xBC, 0x5C, 0xC2, 0x6F, 0xC9, 0xA9, 0x31, 0x26, 0x30, 0xAC, 0xCE,
    0x66, 0x5C, 0xCD, 0x79, 0xED, 0x56, 0x2C, 0xC8, 0x11, 0x5D, 0xCB, 0xD7, 0x7B, 0x61, 0x74, 0xD6,
    0x69, 0x59, 0x30, 0x17, 0xDE, 0xCB, 0xCA, 0xE8, 0xA9, 0x88, 0x6D, 0x37, 0x06, 0xE0, 0xBC, 0x11,
    0x81, 0xD6, 0xD1, 0x69, 0x2D, 0xA3, 0x60, 0x85, 0x2D, 0x6A, 0x43, 0x8B, 0xC0, 0x30, 0x15, 0x86,
    0x2A, 0x40, 0x58, 0x0F, 0x03, 0x51, 0xCE, 0x90, 0xC6, 0x8D, 0xE6, 0xEC, 0x9A, 0x92, 0x54, 0x66,
    0x35, 0x9C, 0x66, 0x25, 0x6B, 0x99, 0xAA, 0x36, 0x21, 0x39, 0xD4, 0x06, 0x66, 0xEA, 0xB0, 0x12,
    0x01, 0xC0, 0x00, 0x50, 0x17, 0x2C, 0xB2, 0x80, 0xBC, 0xA5, 0x25, 0x0D, 0xA0, 0xC8, 0x51, 0x9E,
    0xCC, 0xD1, 0x7A, 0xE1, 0x75, 0x5E, 0x86, 0x93, 0x1F, 0x47, 0xDE, 0xDC, 0x1B, 0x9A, 0xF1, 0xF0,
    0x30, 0x0D, 0x3C, 0x39, 0x80, 0x9A, 0xDD, 0x94, 0x05, 0x5A, 0xCC, 0xD0, 0x39, 0x0C, 0x20, 0xEA,
    0xB3, 0x35, 0xEE, 0x47, 0x58, 0xCB, 0x1A, 0x2E, 0xB3, 0x91, 0x5A, 0x6C, 0x87, 0x6F, 0xED, 0xB4,
    0x75, 0xAB, 0x81, 0xDB, 0xE9, 0x55, 0x22, 0xD2, 0xD0, 0x34, 0x8E, 0x43, 0x4C, 0x47, 0x54, 0xCB,
    0x3B, 0x71, 0x14, 0x1C, 0xF5, 0x2F, 0x2C, 0xDB, 0xA5, 0x5A, 0xB3, 0x13, 0x93, 0x29, 0x2D, 0x56,
    0x1E, 0x8A, 0x2D, 0x57, 0xCD, 0x57, 0x58, 0x39, 0x84, 0x3E, 0xF7, 0x56, 0x4E, 0x52, 0x80, 0xF5,
    0x76, 0xD5, 0xB1, 0x9C, 0xB0, 0xC3, 0xCB, 0xF9, 0x7C, 0x6F, 0x2C, 0x70, 0x6F, 0x7B, 0x5E, 0xE8,
    0xC9, 0x1D, 0xCC, 0x9D, 0xD8, 0xB6, 0xE8, 0x93, 0x4B, 0x37, 0x66, 0x0E, 0xA1, 0x34, 0xBB, 0x49,
    0x19, 0x8C, 0x2D, 0x08, 0x4A, 0xAE, 0xAF, 0x30, 0x0C, 0x6A, 0x3A, 0x80, 0x8B, 0x15, 0x5A, 0x03,
    0x40, 0xE4, 0x8D, 0x84, 0x6B, 0x9C, 0xC9, 0x39, 0x3B, 0x6D, 0x70, 0xC9, 0x52, 0xCD, 0xD1, 0xBA,
    0xB7, 0x56, 0xEA, 0xD5, 0x71, 0xC3, 0xD2, 0x34, 0x49, 0x37, 0x66, 0x6D, 0xA5, 0xB3, 0xB2, 0xA3,
    0xBC, 0xE5, 0x2B, 0x6D, 0x6E, 0x85, 0xC6, 0x73, 0x4C, 0x25, 0xC6, 0x1F, 0x7B, 0xF0, 0x6E, 0x16,
    0xC9, 0xCE, 0x65, 0x67, 0x9C, 0x9D, 0x70, 0x95, 0xD1, 0x9B, 0xB2, 0x03, 0x54, 0xFC, 0x30, 0x0C,
    0x6A, 0x3B, 0x00, 0x8B, 0x15, 0x62, 0x04, 0x40, 0xD4, 0x2D, 0x84, 0x6B, 0x9C, 0xC9, 0x39, 0x33,
    0x6D, 0x70, 0xC9, 0x52, 0xCE, 0xCD, 0xD9, 0xBB, 0x3F, 0x68, 0xE5, 0x51, 0xC3, 0xD2, 0x34, 0x49,
    0x3B, 0x67, 0x6D, 0xE5, 0xD3, 0xB2, 0xA3, 0xBC, 0xE5, 0x37, 0x76, 0xEF, 0x85, 0xE6, 0x73, 0x4C,
    0x25, 0xC6, 0x23, 0x7B, 0xEF, 0x7D, 0xED, 0xC1, 0x78, 0x1F, 0x0F, 0x40, 0x12, 0x53, 0xAA, 0xC0,
    0x68, 0x0F, 0x03, 0x92, 0xC6, 0x4C, 0xC7, 0x51, 0xA4, 0xE4, 0xD3, 0x9C, 0x39, 0x43, 0x5B, 0x7B,
    0x37, 0x68, 0x95, 0x51, 0x70, 0x44, 0x0C, 0xD9, 0x2F, 0x56, 0x6C, 0xC5, 0xB4, 0x6B, 0x92, 0x34,
    0x5A, 0x33, 0x75, 0xAE, 0x92, 0xCD, 0xAA, 0x6A, 0xA2, 0xE0, 0x37, 0x7C, 0x87, 0x80, 0xF0, 0x1A,
    0x02, 0x40, 0x28, 0x1E, 0x40, 0x14, 0x53, 0x92, 0xC0, 0x68, 0x0D, 0x03, 0x91, 0xCE, 0x50, 0x8C,
    0xF1, 0x6D, 0xEC, 0x9D, 0x96, 0xD3, 0x52, 0xAE, 0x84, 0x6F, 0x5E, 0xD5, 0x14, 0xA3, 0x9B, 0xAA,
    0x74, 0xF9, 0x5D, 0x60, 0xA4, 0xAD, 0x59, 0x9D, 0xD9, 0x9B, 0x69, 0x74, 0x8C, 0xC9, 0x57, 0x30,
    0x96, 0x01, 0xEE, 0x53, 0xC4, 0x08, 0x81, 0x10, 0x12, 0x00, 0x00, 0x28, 0x0C, 0x35, 0xD9, 0x80,
    0x2D, 0xED, 0x04, 0x01, 0xEA, 0x75, 0xF0, 0x10, 0x10, 0x5B, 0x20, 0xC0, 0x18, 0x07, 0x01, 0xE0,
    0x42, 0x26, 0x61, 0x96, 0xA8, 0xA6, 0xDB, 0x9F, 0x73, 0xEE, 0x7C, 0xD1, 0x8A, 0xDD, 0x79, 0x25,
    0xB6, 0x77, 0xDA, 0xD7, 0xE1, 0x91, 0x29, 0x9D, 0xF5, 0xBE, 0xB8, 0x30, 0x0F, 0x51, 0x8D, 0x80,
    0x79, 0xE8, 0x6B, 0x00, 0x80, 0x7F, 0x6E, 0x22, 0x01, 0x66, 0xA9, 0x00, 0x50, 0x16, 0x83, 0x3B,
    0x00, 0xDB, 0x51, 0xFC, 0x20, 0x11, 0x74, 0x32, 0x40, 0x58, 0x0B, 0x01, 0xE0, 0x62, 0x39, 0x41,
    0xD5, 0x6A, 0x75, 0x9D, 0x93, 0xB2, 0xF2, 0x78, 0xC2, 0x25, 0x56, 0x37, 0x9B, 0xAA, 0xF6, 0x3E,
    0xD5, 0xDE, 0x00, 0x0A, 0x02, 0xAA, 0x74, 0x40, 0x16, 0x6D, 0xA7, 0x80, 0x00, 0x00, 0x10, 0x12,
    0x32, 0xB1, 0x40, 0x50, 0x14, 0x7B, 0xBA, 0x21, 0x44, 0x33, 0xA4, 0x0A, 0xDF, 0x59, 0x2D, 0x29,
    0xE9, 0x98, 0xC2, 0xB6, 0xEB, 0xCB, 0x89, 0x95, 0x47, 0x86, 0xA3, 0xBD, 0xDE, 0x72, 0x00, 0xB9,
    0x1A, 0x38, 0x09, 0xC6, 0x56, 0x52, 0x52, 0x30, 0x84, 0xF9, 0xED, 0xBD, 0x18, 0xB2, 0xD1, 0x73,
    0x18, 0x8F, 0x64, 0xED, 0x7D, 0xCE, 0xBA, 0xCD, 0x74, 0x38, 0x8B, 0x5B, 0x70, 0x4E, 0x3E, 0x00,
    0x20, 0x0F, 0x4B, 0x2A, 0x80, 0x92, 0x9D, 0xA1, 0x29, 0xA7, 0x56, 0xF0, 0xC9, 0xFB, 0x4A, 0x88,
    0xD7, 0x99, 0x9C, 0xCE, 0x53, 0x1B, 0x15, 0xC5, 0x0B, 0x73, 0xA4, 0xC7, 0xD4, 0x4A, 0xBA, 0xDF,
    0x71, 0x3B, 0x24, 0xEC, 0xD8, 0xAE, 0xF5, 0x00, 0x58, 0x25, 0x81, 0x00, 0xA9, 0x49, 0xC0, 0x01,
    0xC0, 0x51, 0xEC, 0x6D, 0x01, 0x00, 0x51, 0xC4, 0xB4, 0x82, 0x8B, 0x44, 0x7B, 0x9A, 0x56, 0x24,
    0xB2, 0xD0, 0x92, 0x6A, 0xA7, 0x89, 0xB0, 0xB4, 0x23, 0x99, 0xA9, 0xDA, 0x7C, 0x2D, 0x0C, 0xEA,
    0xAA, 0x74, 0xA2, 0xE7, 0x23, 0x5C, 0x98, 0x9D, 0x2B, 0xA1, 0xC8, 0xA3, 0x21, 0x99, 0x2B, 0x2A,
    0x72, 0x47, 0xE8, 0x65, 0xCA, 0xDB, 0x2C, 0xD1, 0xF6, 0x19, 0x92, 0xBA, 0x6B, 0x34, 0xAC, 0x98,
    0x0C, 0x2E, 0x8A, 0xD4, 0xDF, 0x9E, 0x16, 0x8B, 0xCC, 0xB5, 0xBB, 0x58, 0x65, 0xA2, 0xF2, 0x2D,
    0x6A, 0x52, 0xD3, 0x68, 0xBC, 0xCB, 0x5C, 0xA4, 0xA6, 0x52, 0x2E, 0x3A, 0xD7, 0x31, 0x22, 0x24,
    0x8B, 0x92, 0xB5, 0xBD, 0x58, 0x71, 0xF8, 0x00, 0x00, 0x10, 0x0B, 0x44, 0x21, 0x00, 0x8A, 0x58,
    0xD0, 0x05, 0x96, 0xC4, 0xC0, 0x2B, 0x0A, 0x72, 0x00, 0x3E, 0xD3, 0xD2, 0x54, 0xBA, 0xB2, 0x00,
    0x24, 0xD7, 0x96, 0x12, 0x97, 0x7B, 0x26, 0x11, 0x55, 0x84, 0xC5, 0xDD, 0xE9, 0x83, 0x5B, 0xE5,
    0x39, 0xB5, 0x58, 0xA2, 0xD3, 0x6B, 0x54, 0x7C, 0x4D, 0xBA, 0x2C, 0xDE, 0xD5, 0xAE, 0xCD, 0x58,
    0xA7, 0x77, 0xA5, 0xAC, 0xA9, 0xE4, 0x4A, 0x5B, 0x65, 0x72, 0xE4, 0xB4, 0xD3, 0x31, 0xB2, 0x00,
    0x93, 0xB1, 0x0C, 0x01, 0x00, 0xF3, 0xBA, 0x88, 0x07, 0x99, 0xD9, 0x00, 0x4D, 0x2C, 0x46, 0x01,
    0x50, 0x55, 0x18, 0x1E, 0x01, 0x01, 0x14, 0xAA, 0x10, 0x0A, 0xBD, 0xC5, 0xC0, 0x4A, 0x12, 0xF4,
    0x95, 0x5A, 0x39, 0x98, 0x29, 0xAE, 0x26, 0x5E, 0x16, 0x9E, 0x06, 0xE5, 0xA9, 0x99, 0x0C, 0xC3,
    0x59, 0x8A, 0x6E, 0x7D, 0xCF, 0x8A, 0x1C, 0xEB, 0xE3, 0x49, 0xA5, 0xE6, 0xAC, 0xD9, 0x9B, 0x69,
    0x73, 0xD8, 0xB0, 0xC2, 0xAE, 0xF8, 0xDC, 0xEB, 0xDA, 0xB4, 0xA6, 0x16, 0x93, 0xBE, 0xF7, 0xDE,
    0xCB, 0xDA, 0xB3, 0xB5, 0x07, 0x77, 0x3E, 0xF7, 0xDF, 0xE0, 0x00, 0x00, 0x60, 0x15, 0x84, 0xA3,
    0xC0, 0x88, 0x11, 0x02, 0x92, 0xAF, 0x49, 0x2F, 0x42, 0xF5, 0xAC, 0xD7, 0x9F, 0x95, 0x3D, 0xF5,
    0x70, 0x4F, 0x2F, 0xDD, 0x7B, 0xB2, 0xD7, 0xBE, 0x41, 0x6E, 0x96, 0xAC, 0x8E, 0x0D, 0xBD, 0xD7,
    0xC9, 0xB2, 0xCC, 0xA8, 0x98, 0x03, 0x01, 0x65, 0x59, 0xB4, 0x0F, 0x55, 0x7D, 0xD5, 0x09, 0x83,
    0x2B, 0xA0, 0x06, 0xE2, 0x61, 0x8A, 0xB7, 0x47, 0x43, 0x36, 0x9B, 0xEA, 0xAB, 0xCA, 0x10, 0x81,
    0x76, 0xBA, 0xA2, 0xD4, 0x82, 0x26, 0x7D, 0x66, 0xE8, 0xDD, 0x1B, 0xAB, 0x75, 0x6E, 0xCB, 0x5B,
    0x49, 0xA0, 0xA5, 0x4F, 0x6E, 0xB6, 0xCA, 0xE9, 0xAD, 0x4D, 0x7A, 0x2B, 0x4E, 0xBA, 0x2B, 0x33,
    0x9E, 0x88, 0x4B, 0xEE, 0x5D, 0xC9, 0xBF, 0xC0, 0x55, 0xA8, 0x24, 0x54, 0x6B, 0x27, 0x6D, 0x6D,
    0x9E, 0xC8, 0x8D, 0x3A, 0x4D, 0xCF, 0xC9, 0xE9, 0x25, 0x66, 0x7C, 0xAE, 0xEE, 0x7C, 0x4F, 0x4A,
    0xB1, 0xB3, 0x64, 0x6F, 0x33, 0xDE, 0x7B, 0x51, 0x59, 0x28, 0xB4, 0x5D, 0x4B, 0x35, 0x66, 0xBB,
    0xD7, 0x7B, 0x71, 0x6D, 0x5E, 0xE2, 0xB0, 0xF5, 0xA9, 0x5C, 0xB6, 0x8D, 0x59, 0x5B, 0x71, 0xB7,
    0x36, 0xE6, 0x5C, 0x76, 0xA5, 0x62, 0x42, 0x8D, 0xB7, 0x2E, 0xE4, 0x5C, 0x46, 0x4C, 0x43, 0xC4,
    0x6E, 0x57, 0xFE, 0x44, 0x6C, 0x88, 0xAF, 0x60, 0x1C, 0x38, 0x13, 0x00, 0xFB, 0x94, 0x9C, 0x07,
    0xDE, 0x6A, 0xC0, 0x3E, 0xB3, 0x53, 0x01, 0x33, 0xC1, 0x78, 0x00, 0x00, 0xC5, 0x75, 0x52, 0xAB,
    0x03, 0x2D, 0x35, 0x2D, 0x64, 0xE8, 0x8F, 0x1A, 0x4D, 0x4F, 0x19, 0xB4, 0xA4, 0x4E, 0x2F, 0x74,
    0x6E, 0x8D, 0xD5, 0xBA, 0xB3, 0x5D, 0x2C, 0x75, 0x56, 0x1A, 0x6E, 0x96, 0xFB, 0x40, 0x00, 0x14,
    0x05, 0x55, 0x0C, 0x40, 0x12, 0xF6, 0x60, 0xF0, 0x00, 0x00, 0xC5, 0x79, 0x9D, 0x4A, 0x99, 0x38,
    0xF5, 0x26, 0xA0, 0xE6, 0xAB, 0x2E, 0xCE, 0x49, 0x67, 0x42, 0x1D, 0x4E, 0x8F, 0x93, 0xC6, 0x8E,
    0xA5, 0x35, 0x9C, 0xE4, 0xF2, 0xAB, 0x42, 0xAE, 0xC8, 0xF5, 0x3C, 0x6C, 0xD2, 0x31, 0x93, 0x60,
    0x80, 0x14, 0x9B, 0x34, 0xA1, 0xB3, 0xE4, 0xC5, 0x5E, 0xD5, 0xCA, 0xA9, 0x67, 0x45, 0x88, 0xD2,
    0x72, 0xCA, 0xC9, 0xCD, 0x22, 0x74, 0x7C, 0xBA, 0xF3, 0x63, 0x17, 0x8B, 0x15, 0xAE, 0xB3, 0xD4,
    0x8E, 0xE6, 0x25, 0x2B, 0xE4, 0xE1, 0x4B, 0x98, 0x49, 0xB2, 0xF4, 0xB9, 0x36, 0x22, 0x52, 0x6C,
    0xC1, 0xAD, 0x1C, 0x84, 0xA4, 0xC2, 0xB0, 0x63, 0x07, 0x68, 0x29, 0x30, 0xCC, 0x1C, 0xC0, 0xBB,
    0x18, 0x72, 0x23, 0x03, 0x35, 0xAE, 0x8E, 0x25, 0x4C, 0xCA, 0x75, 0x63, 0x44, 0x27, 0x32, 0xB2,
    0x9C, 0x14, 0x9E, 0x2A, 0x19, 0xE0, 0x00, 0x00, 0x56, 0x06, 0x44, 0x5C, 0xCB, 0x26, 0xE5, 0x76,
    0x68, 0xEC, 0x05, 0x5A, 0xDA, 0xDD, 0x8B, 0xB1, 0x6A, 0x90, 0x32, 0xDB, 0xEE, 0xFC, 0x5F, 0x5B,
    0x41, 0xA3, 0x97, 0xDE, 0xF7, 0xE2, 0xE8, 0x49, 0xD9, 0x60, 0xFE, 0xD8, 0xB6, 0x51, 0x48, 0x88,
    0x4D, 0xBE, 0xAC, 0x7C, 0x16, 0x9D, 0x9B, 0xD9, 0x8A, 0xD7, 0x17, 0xC7, 0x5A, 0xB5, 0x52, 0xA5,
    0x41, 0xB5, 0xD2, 0x6C, 0x0E, 0xA9, 0x31, 0x6B, 0x43, 0xAB, 0x53, 0xA6, 0x62, 0x19, 0xA8, 0xDD,
    0xDA, 0x20, 0x18, 0x94, 0x43, 0x01, 0x28, 0x2A, 0x08, 0x05, 0xC2, 0x54, 0x3C, 0x55, 0xA8, 0x2C,
    0x64, 0x62, 0xA7, 0x6D, 0x66, 0x62, 0x66, 0x6A, 0xF2, 0x5C, 0x51, 0x86, 0x1A, 0x24, 0xD6, 0xAB,
    0x53, 0xD9, 0x6C, 0x87, 0x59, 0xA2, 0xD4, 0xD3, 0x43, 0xAB, 0x6D, 0x56, 0x71, 0x2C, 0x1A, 0xCD,
    0x1B, 0x59, 0x2C, 0x4C, 0xC7, 0xB3, 0xCE, 0xD5, 0x4B, 0x13, 0xBA, 0x2A, 0xCF, 0x39, 0x59, 0xC5,
    0x0D, 0x74, 0x33, 0x5D, 0x66, 0x71, 0x53, 0x9B, 0x2E, 0xD3, 0x1E, 0x2C, 0xD9, 0x7B, 0x6D, 0x74,
    0x52, 0xEE, 0xAE, 0x52, 0xBA, 0xDD, 0x3B, 0x99, 0x7A, 0x99, 0x0A, 0xC8, 0xD5, 0xB7, 0x61, 0x14,
    0x42, 0xA2, 0xAC, 0xAD, 0xB8, 0xA0, 0x0F, 0xB9, 0x9D, 0x40, 0x7E, 0x0A, 0xEA, 0x03, 0xF0, 0x54,
    0x30, 0x1F, 0x71, 0xA9, 0x00, 0xFA, 0xCC, 0x84, 0x07, 0x9C, 0x4B, 0xE0, 0xA5, 0x72, 0x75, 0x1A,
    0x3D, 0xD6, 0xB9, 0x45, 0xD8, 0xAE, 0x55, 0x13, 0x6E, 0x55, 0x38, 0x2C, 0x34, 0x9C, 0xD3, 0x95,
    0x41, 0x6F, 0x8D, 0x2B, 0x3C, 0xE5, 0x4F, 0x5C, 0xEC, 0x39, 0x5D, 0xBB, 0x57, 0x6B, 0xDD, 0x99,
    0xBE, 0x59, 0x31, 0x55, 0xD0, 0xE3, 0x2D, 0x8E, 0x4E, 0xC9, 0x6A, 0xBF, 0x46, 0x49, 0x6A, 0xF3,
    0xF0, 0xC5, 0x57, 0x62, 0xB9, 0x54, 0x4D, 0xB9, 0x3C, 0xE0, 0xB0, 0xD2, 0x73, 0x4E, 0x51, 0x05,
    0xBE, 0x34, 0xAC, 0xF3, 0x94, 0x3D, 0x73, 0xB0, 0xE5, 0x76, 0xDD, 0x5D, 0xAF, 0x16, 0xB1, 0x55,
    0xD0, 0xE3, 0x2D, 0xBD, 0xD3, 0xC2, 0x38, 0xBB, 0x15, 0xAA, 0xFD, 0x19, 0x25, 0xAF, 0xC9, 0x99,
    0x3C, 0x8F, 0x32, 0x80, 0xFE, 0x6E, 0x68, 0x03, 0x88, 0x23, 0x20, 0x1F, 0xC3, 0x8A, 0x00, 0xFE,
    0xE0, 0x48, 0x07, 0xAA, 0x42, 0x60, 0x2E, 0x84, 0x8F, 0x25, 0x42, 0x75, 0xDC, 0xC5, 0xA8, 0xA1,
    0x5B, 0xD8, 0xA6, 0xAB, 0x6E, 0x4B, 0x4F, 0x19, 0x41, 0xA3, 0xCC, 0xCF, 0x93, 0xC8, 0xAB, 0x31,
    0x4A, 0xFB, 0xD4, 0xED, 0x75, 0xFB, 0xA0, 0x5C, 0xF7, 0x35, 0xA7, 0x54, 0x6F, 0x94, 0x83, 0x67,
    0x3A, 0x2D, 0x52, 0xA3, 0xB6, 0x60, 0x9A, 0xBD, 0x55, 0x05, 0xCC, 0xB3, 0x1E, 0xD3, 0x56, 0xDB,
    0x34, 0x86, 0x83, 0xAD, 0xDD, 0xD6, 0xBE, 0xCF, 0x63, 0x4A, 0x9A, 0x8C, 0x31, 0xA4, 0x0C, 0x5B,
    0x61, 0x92, 0xDC, 0x97, 0x92, 0x31, 0x59, 0x8B, 0x2C, 0x22, 0x36, 0x9C, 0x4F, 0x93, 0x72, 0x56,
    0x50, 0x9B, 0x42, 0xAC, 0xD4, 0x7C, 0xC5, 0xB1, 0x94, 0x1A, 0x3C, 0xCC, 0xFB, 0x37, 0x28, 0x9A,
    0x16, 0xD6, 0x52, 0x6F, 0xDA, 0xBB, 0x57, 0x6A, 0xE5, 0x4D, 0x63, 0xD4, 0xBC, 0x5C, 0x37, 0x5D,
    0xEB, 0x55, 0x64, 0x3D, 0x4B, 0xC4, 0xB8, 0x3C, 0x00, 0x00, 0x85, 0x91, 0x63, 0xA9, 0xC3, 0x4F,
    0xB3, 0x57, 0x28, 0x72, 0xE5, 0x65, 0xD2, 0xDF, 0xDA, 0x37, 0x47, 0x68, 0x50, 0x00, 0xEA, 0xCC,
    0x2D, 0x6B, 0x1A, 0x15, 0xF2, 0xC0, 0x08, 0xA1, 0x10, 0x7B, 0x70, 0x49, 0x5B, 0xE7, 0x84, 0x84,
    0xEC, 0xD2, 0x24, 0x4C, 0x65, 0x11, 0x3A, 0xEE, 0xEB, 0x2F, 0x1A, 0x42, 0x8C, 0x4A, 0x5C, 0x14,
    0xCA, 0xB1, 0x62, 0x46, 0x5A, 0x4A, 0x38, 0x67, 0xB7, 0xAE, 0xF8, 0x4F, 0x15, 0xE4, 0x00, 0x80,
    0x23, 0x47, 0x44, 0x80, 0x40, 0x29, 0x37, 0x4F, 0x95, 0x92, 0x87, 0x2A, 0x89, 0xB4, 0xF5, 0x44,
    0xE0, 0xAA, 0x94, 0x96, 0xDE, 0x4F, 0x18, 0x1C, 0x4C, 0x3C, 0xD3, 0xB2, 0x4A, 0x13, 0x52, 0x5A,
    0xA6, 0x99, 0x4A, 0x84, 0x56, 0x86, 0x96, 0x74, 0xA2, 0x62, 0x34, 0xC2, 0x95, 0x3C, 0xBC, 0x38,
    0xE1, 0x54, 0x5C, 0xDF, 0x0A, 0x76, 0xCE, 0xD7, 0xDB, 0x37, 0x76, 0xEE, 0xC5, 0xEF, 0x8B, 0x72,
    0xAC, 0x45, 0x33, 0x7E, 0x2E, 0x7C, 0x63, 0x15, 0x9E, 0xA1, 0x8B, 0x61, 0x26, 0xA6, 0x68, 0xA9,
    0xDA, 0xC8, 0x4A, 0x0D, 0xA6, 0x29, 0x74, 0xAD, 0xB2, 0x56, 0xAA, 0xA6, 0x1F, 0x80, 0x00, 0x00,
    0x45, 0x04, 0x5D, 0x54, 0xBB, 0xC8, 0xF1, 0x54, 0xE0, 0xC8, 0xB4, 0xBA, 0xDE, 0xCF, 0xC9, 0xDF,
    0x36, 0x87, 0x88, 0xCE, 0xF2, 0x87, 0xCE, 0x6D, 0xD6, 0x2B, 0xFD, 0xA3, 0xB5, 0x66, 0xBA, 0x5C,
    0xF7, 0x5A, 0x52, 0x43, 0x4A, 0x77, 0xAE, 0xF0, 0x04, 0x00, 0xC2, 0x43, 0x98, 0x0C, 0x22, 0x20,
    0x3C, 0x20, 0x0B, 0xEB, 0x44, 0xA5, 0x5D, 0x1E, 0x98, 0x31, 0x5D, 0x2A, 0x13, 0x44, 0xE4, 0x75,
    0x9B, 0xD2, 0x85, 0x54, 0xFD, 0x65, 0x1F, 0xF6, 0x99, 0x76, 0x3F, 0x4C, 0x4B, 0x8E, 0xA6, 0x7C,
    0xD2, 0xD3, 0x6A, 0x45, 0xB9, 0xB7, 0x3F, 0x28, 0xA5, 0x99, 0x16, 0x23, 0x3B, 0xDA, 0xBB, 0x5E,
    0xAD, 0x94, 0xC9, 0xDE, 0x76, 0x29, 0x7B, 0xE5, 0x7C, 0x62, 0x2D, 0x35, 0x70, 0x49, 0x5F, 0x17,
    0x92, 0xDD, 0xDC, 0x11, 0xD7, 0xC1, 0x88, 0x77, 0xC7, 0x00, 0xF0, 0x00, 0x00, 0x85, 0x50, 0xA2,
    0x62, 0x03, 0x15, 0x65, 0x53, 0x66, 0x1C, 0xAD, 0x4E, 0xEC, 0x50, 0xFA, 0x0E, 0x1C, 0x3B, 0xEF,
    0x53, 0xC6, 0xE3, 0x47, 0x0F, 0x34, 0xE4, 0xD2, 0xAA, 0xA2, 0x3C, 0x69, 0xB9, 0x35, 0xEE, 0xC4,
    0x4D, 0x3A, 0x3D, 0xCF, 0xDA, 0x37, 0x56, 0xEB, 0xD5, 0x77, 0xC3, 0x98, 0xAE, 0x66, 0xF7, 0x66,
    0x2D, 0xAE, 0x98, 0xCD, 0x2F, 0x47, 0x0B, 0x9C, 0xD0, 0xD8, 0x68, 0x6E, 0xBE, 0xD6, 0x5A, 0xD6,
    0x07, 0xBB, 0xC2, 0x99, 0x16, 0x9A, 0x4D, 0x92, 0x14, 0xC2, 0x45, 0xAB, 0x50, 0xDE, 0xA4, 0xB8,
    0xDD, 0x6C, 0x22, 0xE4, 0x71, 0x32, 0x24, 0x5E, 0xF8, 0xA2, 0x32, 0xDB, 0x6C, 0x3C, 0x84, 0xF8,
    0x7B, 0x28, 0xB4, 0x7B, 0x37, 0x3E, 0xA7, 0x9C, 0x9A, 0x99, 0x67, 0x3B, 0xB9, 0xF7, 0x46, 0xEA,
    0xD5, 0x71, 0x8B, 0x53, 0x9E, 0xC6, 0x73, 0x64, 0xED, 0x40, 0x19, 0x3C, 0x2A, 0x80, 0xFC, 0x15,
    0x96, 0x02, 0xC0, 0x50, 0x1F, 0x7C, 0x2B, 0x00, 0xFB, 0x62, 0x18, 0x07, 0x51, 0x0C, 0xA0, 0x26,
    0xEA, 0x31, 0x00, 0xB9, 0x2A, 0x00, 0x01, 0x2B, 0x83, 0x21, 0xDA, 0x9D, 0xC9, 0xE0, 0x00, 0x00,
    0xE4, 0xF4, 0x83, 0xAA, 0xD5, 0x64, 0xF9, 0x44, 0xE2, 0xAA, 0xD5, 0x79, 0x5E, 0x51, 0x49, 0x31,
    0x2E, 0xDE, 0x4F, 0xB5, 0x6A, 0xAB, 0xC1, 0x88, 0xAE, 0xBC, 0x75, 0xAD, 0x35, 0x80, 0x38, 0x0C,
    0xC4, 0xD5, 0xC0, 0x6F, 0x73, 0x0D, 0x00, 0xC0, 0x73, 0x97, 0x28, 0x03, 0x59, 0x69, 0xF0, 0x10,
    0x0C, 0x6B, 0x52, 0x00, 0x7C, 0x16, 0xA1, 0x24, 0xA4, 0xAE, 0xF1, 0x71, 0x4E, 0xC7, 0xC9, 0x69,
    0x47, 0x65, 0x9A, 0xAE, 0x76, 0x5E, 0xCD, 0xC9, 0xE7, 0x59, 0x74, 0x59, 0xAA, 0xF6, 0xAE, 0x57,
    0x3A, 0xCD, 0xA3, 0x46, 0x57, 0xB6, 0x76, 0xCD, 0xDB, 0x7B, 0x59, 0x79, 0xD7, 0x28, 0x9F, 0x15,
    0x36, 0x5E, 0x86, 0xB9, 0x2F, 0x4C, 0x4D, 0xD7, 0xD1, 0x4E, 0x88, 0xF1, 0xB0, 0x9D, 0xCF, 0xC5,
    0x57, 0x4A, 0x8E, 0xC5, 0x1A, 0x9B, 0xF0, 0x00, 0x00, 0x10, 0x08, 0x6B, 0xC8, 0x80, 0x63, 0x0A,
    0x92, 0x02, 0xC0, 0xA4, 0x72, 0xB3, 0xCA, 0xC6, 0x38, 0xFB, 0x2F, 0x65, 0xE4, 0xB2, 0xB3, 0xE1,
    0x4C, 0xC9, 0x7B, 0x37, 0x67, 0xED, 0x1D, 0xAB, 0x76, 0x6A, 0xC7, 0xD5, 0xE1, 0x9E, 0xA3, 0x97,
    0xB2, 0xF6, 0x32, 0xC3, 0x45, 0xAA, 0x93, 0x22, 0x4D, 0xB1, 0x76, 0x2E, 0xC3, 0x5A, 0x66, 0x35,
    0x5A, 0xC3, 0x86, 0x17, 0x4A, 0x28, 0x8A, 0x0F, 0x54, 0x6D, 0xAB, 0xB3, 0xC0, 0x00, 0x00, 0x10,
    0x0E, 0x7A, 0x31, 0xC0, 0x58, 0x18, 0x92, 0x58, 0x77, 0x63, 0xE7, 0x3F, 0x24, 0x9E, 0x26, 0x1C,
    0x6A, 0x4B, 0xD9, 0x7B, 0x36, 0x66, 0x84, 0xEA, 0x72, 0x5B, 0x27, 0xAA, 0x99, 0x39, 0x1B, 0x15,
    0xA1, 0x0D, 0x06, 0xD0, 0xDA, 0x13, 0x50, 0x0C, 0x03, 0x00, 0x86, 0x25, 0x1C, 0x0C, 0x59, 0x0B,
    0x44, 0x23, 0xD5, 0x73, 0x76, 0x6E, 0xCC, 0xD9, 0x6B, 0x17, 0x6A, 0xB5, 0x58, 0xCD, 0xD6, 0xC9,
    0x58, 0x9C, 0x55, 0xA2, 0xCD, 0x8D, 0xF6, 0x32, 0xD2, 0xBA, 0x15, 0xE6, 0xDB, 0x50, 0xBE, 0x0B,
    0x63, 0x5D, 0xC6, 0xCB, 0xEC, 0x95, 0x94, 0xC4, 0xA8, 0xD1, 0xDF, 0x65, 0x5B, 0xE0, 0x14, 0xEB,
    0x2E, 0xE8, 0xD7, 0x1B, 0x1F, 0x73, 0xAF, 0x85, 0x5A, 0x0A, 0x23, 0x2B, 0x3C, 0x5D, 0x8B, 0x9C,
    0xD1, 0x13, 0x11, 0x87, 0xE2, 0xBC, 0x40, 0x00, 0x10, 0x05, 0xDE, 0xEC, 0xB0, 0x08, 0x04, 0x92,
    0xCE, 0x30, 0x3C, 0x00, 0x00, 0x10, 0x0D, 0x6A, 0x29, 0x80, 0x94, 0x5C, 0xD4, 0x04, 0xAD, 0x0C,
    0xA0, 0x1F, 0x03, 0x6E, 0x4D, 0x2B, 0x3C, 0xAC, 0x63, 0x8F, 0xB2, 0xF6, 0x5D, 0x4F, 0x2B, 0x3E,
    0x14, 0xCC, 0x97, 0x74, 0x76, 0xAE, 0xDD, 0xBB, 0xB7, 0x7E, 0x30, 0x7D, 0x5E, 0x19, 0xEA, 0x39,
    0x7C, 0x27, 0x8B, 0xB1, 0x63, 0xD6, 0x99, 0x76, 0x36, 0xA0, 0x2E, 0x02, 0x94, 0x80, 0x60, 0x3F,
    0x05, 0x41, 0x01, 0xF9, 0xA9, 0x88, 0x0F, 0x39, 0x54, 0x3C, 0x30, 0x10, 0x8B, 0x22, 0x40, 0x28,
    0x08, 0x02, 0x30, 0x72, 0x84, 0xAF, 0x9B, 0xB4, 0xCC, 0xB5, 0x33, 0x2E, 0xE5, 0xEC, 0xBC, 0x9A,
    0x58, 0x78, 0x46, 0xB8, 0xEF, 0x67, 0xED, 0x5D, 0xAF, 0x55, 0xC2, 0xB1, 0x0C, 0xF1, 0xB5, 0xDD,
    0x9A, 0xB1, 0xF1, 0x88, 0x5A, 0x4D, 0x66, 0xED, 0xBD, 0xB2, 0xB9, 0xD1, 0x56, 0x34, 0x3B, 0x5B,
    0xEE, 0x5D, 0xC9, 0xBD, 0xB7, 0xB6, 0xF5, 0xDE, 0x01, 0xE0, 0x00, 0x00, 0x01, 0x01, 0x06, 0x9A,
    0x10, 0x08, 0xBC, 0xED, 0x00, 0x46, 0x26, 0xB8, 0x82, 0x71, 0x86, 0x63, 0x7F, 0x67, 0x63, 0xEC,
    0x7D, 0x93, 0x93, 0x4E, 0x90, 0xCC, 0x73, 0xB4, 0xED, 0x5C, 0xB2, 0x52, 0x77, 0x75, 0x8D, 0x67,
    0x6E, 0xD5, 0xF1, 0x8B, 0x3B, 0x34, 0x69, 0x11, 0x79, 0x5D, 0x0A, 0xF3, 0x6D, 0xA4, 0xE0, 0x8C,
    0x0A, 0xE9, 0x57, 0x9B, 0x4D, 0x23, 0x03, 0x2A, 0x5E, 0x62, 0x1C, 0x68, 0xC3, 0x09, 0x65, 0x57,
    0x77, 0x5C, 0x2E, 0xB3, 0xF1, 0x28, 0xE9, 0xC2, 0xCB, 0x62, 0xF5, 0x64, 0x5B, 0xB0, 0xC2, 0xF9,
    0xBE, 0x59, 0xCD, 0x5C, 0x9E, 0x10, 0x10, 0x4B, 0x11, 0x00, 0x8A, 0x94, 0xC8, 0x04, 0xDA, 0x49,
    0x29, 0x6C, 0xF5, 0x42, 0xA8, 0xD6, 0x6E, 0x4C, 0xC7, 0xB8, 0xF5, 0x25, 0x67, 0x08, 0x12, 0xF7,
    0x7C, 0xCD, 0xBA, 0xB1, 0x5C, 0x6B, 0x4C, 0x32, 0x2F, 0x7C, 0xDB, 0x7B, 0xAF, 0x84, 0xB1, 0x7E,
    0x59, 0x13, 0x12, 0x7F, 0x1C, 0x57, 0x91, 0xF2, 0x2E, 0x5E, 0x00, 0x03, 0x01, 0x06, 0x9A, 0x10,
    0x08, 0xBC, 0xED, 0x00, 0x46, 0x26, 0xBC, 0xAA, 0x52, 0x79, 0x66, 0x5B, 0x6F, 0x6A, 0xED, 0x5C,
    0xAA, 0x6E, 0x5B, 0xB7, 0x49, 0xAE, 0xEA, 0xC5, 0x11, 0x15, 0xD5, 0x40, 0x4D, 0x2F, 0x35, 0xE6,
    0xC4, 0xCE, 0x63, 0xF4, 0x30, 0xCF, 0xB7, 0x46, 0xEB, 0xB5, 0xC8, 0xA5, 0x62, 0x31, 0xEA, 0xEB,
    0x84, 0x30, 0x44, 0xF2, 0xC9, 0xD2, 0xE4, 0xEC, 0x0F, 0x8A, 0x96, 0x19, 0xB9, 0x2B, 0x13, 0xDF,
    0x1D, 0x19, 0x9D, 0x6A, 0xC4, 0xF4, 0xC9, 0x55, 0x47, 0x62, 0x31, 0x4A, 0xEA, 0x66, 0xD4, 0x31,
    0xE0, 0x10, 0x0D, 0x72, 0x29, 0x00, 0x84, 0x15, 0x90, 0x04, 0x66, 0x8F, 0x69, 0xA3, 0x66, 0x63,
    0x2A, 0x69, 0xE2, 0x37, 0x55, 0xA0, 0x9B, 0x62, 0xDC, 0x8E, 0x29, 0x8A, 0x97, 0x2B, 0x9F, 0x65,
    0xED, 0x18, 0xAD, 0xAC, 0xAD, 0xA4, 0x45, 0xEE, 0x6D, 0x95, 0xE9, 0x8D, 0xEB, 0xA1, 0xCF, 0x15,
    0x81, 0xA5, 0xB6, 0xAA, 0x72, 0xB0, 0x00, 0x03, 0x00, 0xD8, 0xBC, 0x0C, 0x00, 0xF0, 0x01, 0x80,
    0x20, 0x1E, 0xF8, 0xA2, 0x80, 0x70, 0x29, 0x03, 0xF1, 0x70, 0xED, 0x31, 0x5D, 0xC3, 0xB8, 0xB7,
    0x17, 0x62, 0xD4, 0x51, 0xD4, 0xD2, 0xAD, 0x47, 0xB3, 0x16, 0x23, 0xA5, 0x15, 0x99, 0xEE, 0x97,
    0x99, 0x2D, 0x3D, 0xA8, 0xA8, 0x93, 0x3A, 0xBB, 0xD5, 0x8A, 0xA9, 0x58, 0x32, 0x97, 0xBA, 0xE2,
    0xB9, 0x5A, 0x4C, 0xE1, 0x66, 0xF8, 0xB2, 0x36, 0x94, 0x58, 0x49, 0xBD, 0xAD, 0x7E, 0x21, 0x0A,
    0xCA, 0xED, 0x5B, 0x65, 0x73, 0xB4, 0x89, 0x30, 0x5A, 0xB7, 0xDE, 0xBB, 0xD3, 0x81, 0xEF, 0x2E,
    0x08, 0xBD, 0xF5, 0x52, 0x57, 0x47, 0x8F, 0x80, 0x00, 0x00, 0x10, 0x0D, 0x74, 0x32, 0x00, 0x7B,
    0xE2, 0x94, 0x04, 0x54, 0x8A, 0xB0, 0x16, 0x05, 0x21, 0x9B, 0x0C, 0xE3, 0x66, 0x03, 0xC8, 0xE9,
    0x37, 0x34, 0x98, 0xD2, 0x76, 0x4E, 0xCD, 0xD9, 0xED, 0x64, 0x9E, 0xEA, 0x52, 0xFE, 0x40, 0x00,
    0x20, 0x11, 0x4B, 0x2A, 0x00, 0xD2, 0x5E, 0x10, 0x06, 0x10, 0xEC, 0x1E, 0x00, 0x00, 0x10, 0x0A,
    0x8E, 0xC9, 0x00, 0x6C, 0x2A, 0xCA, 0x01, 0x00, 0x54, 0x76, 0x49, 0x12, 0x5F, 0xFA, 0x4A, 0xB2,
    0xEB, 0xC5, 0x78, 0xEF, 0x1D, 0xA4, 0x5A, 0x77, 0xD9, 0x81, 0x5F, 0x99, 0x6F, 0x35, 0xEA, 0xB5,
    0x6F, 0x44, 0x5D, 0x78, 0x07, 0x6F, 0x65, 0xEC, 0xB5, 0xB0, 0x81, 0xC4, 0xC0, 0xB3, 0x6F, 0x75,
    0x6E, 0xAD, 0xD3, 0xBA, 0x77, 0x3A, 0xE5, 0xB4, 0x75, 0xD2, 0x1C, 0xAC, 0xB5, 0x52, 0xB6, 0x85,
    0x4B, 0x12, 0x2E, 0x5D, 0x2D, 0x91, 0xEA, 0x19, 0xE0, 0x01, 0x01, 0x08, 0xB2, 0x14, 0x05, 0x80,
    0xC0, 0x23, 0x07, 0x26, 0x01, 0x47, 0xDC, 0xA8, 0x08, 0x45, 0x5B, 0x51, 0xBE, 0xD1, 0x89, 0x11,
    0x15, 0xC4, 0x8D, 0xC4, 0x5A, 0x44, 0xC5, 0x73, 0x26, 0x24, 0x6D, 0xE7, 0x11, 0xE6, 0x2B, 0x89,
    0x5B, 0x4A, 0xC4, 0x58, 0x8E, 0x5A, 0x67, 0x46, 0xF5, 0x51, 0xAC, 0x96, 0xA9, 0xB1, 0xBE, 0x44,
    0x6D, 0x65, 0x2B, 0x65, 0x2F, 0x4D, 0x5B, 0x49, 0x5B, 0x69, 0x72, 0xE5, 0x9A, 0x8C, 0x76, 0xB9,
    0xDD, 0x0B, 0xD3, 0x4D, 0xD3, 0x73, 0xD5, 0xB2, 0xF4, 0x63, 0x6C, 0xA1, 0x2D, 0x4A, 0xBC, 0xFD,
    0xB2, 0x57, 0x85, 0x59, 0x2F, 0x37, 0x6C, 0x98, 0xA1, 0xC4, 0x3B, 0xC3, 0xC0, 0x00, 0x00, 0x20,
    0x09, 0xD3, 0xB2, 0x40, 0x58, 0x16, 0x91, 0xB3, 0xAA, 0x44, 0xB5, 0x9E, 0xE5, 0xDC, 0xB8, 0x96,
    0x50, 0x7A, 0x43, 0x89, 0x5E, 0x65, 0x74, 0xA6, 0x7A, 0xCE, 0x35, 0xB4, 0xDB, 0x2A, 0x67, 0x95,
    0x51, 0x9A, 0x42, 0x83, 0xCD, 0x25, 0x5B, 0xE6, 0x70, 0xAD, 0x16, 0xFB, 0xD5, 0x9A, 0xB3, 0x5E,
    0xAC, 0x7B, 0x9D, 0x9A, 0xA3, 0xC7, 0x9B, 0x67, 0x7A, 0x2E, 0x23, 0x65, 0xE2, 0x69, 0xB4, 0x6B,
    0x48, 0xCA, 0x88, 0x88, 0x8D, 0x9A, 0xD3, 0xA9, 0x5A, 0x1A, 0x55, 0x72, 0xC2, 0x2B, 0x75, 0x47,
    0x3F, 0x4A, 0x30, 0x8C, 0xA5, 0x14, 0x6A, 0xD4, 0x8C, 0x27, 0x08, 0x56, 0x37, 0x70, 0x93, 0x08,
    0xAA, 0x5A, 0x1A, 0x5D, 0xBE, 0x00, 0x00, 0x00, 0x00, 0x28, 0x07, 0x02, 0xD2, 0x37, 0x68, 0x98,
    0xA9, 0x1B, 0xDC, 0x98, 0x91, 0x73, 0xB1, 0x8F, 0x37, 0x6D, 0xA4, 0x5D, 0x64, 0xA3, 0x86, 0xE9,
    0x99, 0x2B, 0x2D, 0xA7, 0x5D, 0x95, 0xAA, 0x92, 0x7B, 0x7A, 0x35, 0x5D, 0xA2, 0xE6, 0x31, 0x1E,
    0xCD, 0xD7, 0xBB, 0x33, 0x6D, 0xAD, 0xAD, 0x18, 0x4E, 0x27, 0xB9, 0x5B, 0x5F, 0x72, 0xED, 0x00,
    0xF0, 0x00, 0x00, 0xC4, 0x90, 0x7B, 0xE4, 0x41, 0xDD, 0xB7, 0x37, 0x68, 0xED, 0x7D, 0xAF, 0xB6,
    0x72, 0xC8, 0x4D, 0xE9, 0xDA, 0x2D, 0xBB, 0xBB, 0x57, 0x42, 0x6F, 0x0E, 0xF1, 0x9C, 0xB5, 0xF1,
    0xA1, 0xDB, 0x3D, 0xD3, 0x29, 0x7C, 0x26, 0xAB, 0x38, 0xD0, 0xA9, 0xE0, 0xEC, 0x1E, 0xE4, 0x9D,
    0x95, 0x61, 0xB2, 0xF8, 0x3C, 0xCB, 0x25, 0xD8, 0x69, 0xAC, 0xF5, 0x87, 0x80, 0x00, 0x00, 0x94,
    0x90, 0x7B, 0xE4, 0x41, 0xDD, 0xAF, 0x26, 0x64, 0xCC, 0xB9, 0x97, 0x12, 0xC2, 0x6F, 0x4E, 0xD1,
    0x6D, 0xAC, 0xD4, 0x99, 0xAE, 0x89, 0x75, 0x4D, 0x24, 0x26, 0x43, 0xEE, 0x99, 0x4A, 0xD4, 0xC9,
    0xD0, 0xBC, 0xB7, 0x52, 0x74, 0xB2, 0xA5, 0x23, 0x35, 0x98, 0x5E, 0x72, 0xAA, 0x05, 0x8D, 0x57,
    0x19, 0xED, 0xAC, 0xB4, 0x19, 0x8E, 0x8A, 0xFD, 0x9B, 0x75, 0x6D, 0xE3, 0x2C, 0x52, 0x9B, 0xDD,
    0x5D, 0x78, 0xCB, 0x9C, 0x25, 0xF7, 0x17, 0x56, 0x12, 0xE7, 0x09, 0xB7, 0xB5, 0xF6, 0x75, 0x49,
    0xB9, 0x5D, 0x2B, 0x7C, 0xB0, 0x8B, 0x99, 0x99, 0x06, 0xC8, 0xEC, 0x22, 0xF2, 0x84, 0x57, 0x97,
    0xB3, 0x06, 0xB5, 0x64, 0x96, 0xAC, 0xCA, 0xC5, 0x2D, 0x76, 0x56, 0xAB, 0x62, 0x31, 0x43, 0x16,
    0xD6, 0x2D, 0xD6, 0x6C, 0x98, 0x93, 0xA9, 0x8A, 0x52, 0x1B, 0x26, 0xC1, 0x95, 0x4E, 0x1D, 0xBE,
    0xD5, 0x14, 0xAB, 0xA1, 0xB4, 0x79, 0x3B, 0x47, 0x68, 0xED, 0x5C, 0xAD, 0xB0, 0x6A, 0x78, 0x8E,
    0x9D, 0xEC, 0x5D, 0xE6, 0x02, 0x11, 0x75, 0x48, 0x09, 0x00, 0xA0, 0x18, 0x08, 0xB9, 0x98, 0xE0,
    0x14, 0x0F, 0xD5, 0x54, 0x8B, 0x23, 0x45, 0xF4, 0xB9, 0x45, 0x9E, 0xE8, 0xB1, 0x1E, 0x1E, 0x51,
    0x49, 0x32, 0x33, 0x5F, 0x67, 0x94, 0x52, 0x6C, 0xCA, 0xD5, 0x9D, 0xED, 0x5B, 0xAB, 0x95, 0x46,
    0x0D, 0x0C, 0xF1, 0x94, 0xC5, 0x71, 0x7A, 0xC4, 0x3A, 0x66, 0xE1, 0x5C, 0xA0, 0x18, 0x92, 0xEB,
    0x18, 0xD7, 0x1A, 0xDD, 0x5B, 0xDA, 0x1A, 0xD2, 0xCE, 0x27, 0xD8, 0xBB, 0x11, 0x62, 0x94, 0x93,
    0x4D, 0x2E, 0x32, 0xDB, 0xE0, 0xD5, 0x96, 0x9A, 0x1A, 0xCC, 0x66, 0xB9, 0x55, 0x63, 0x46, 0x73,
    0x19, 0xAE, 0x55, 0x69, 0x5A, 0x22, 0xB7, 0x8F, 0xB5, 0x76, 0xAD, 0x59, 0x38, 0xD9, 0x33, 0x5E,
    0x0F, 0x39, 0x43, 0x37, 0x35, 0x8E, 0xA1, 0xE8, 0x6B, 0xD1, 0x1A, 0xB0, 0xEE, 0xB4, 0xEA, 0xE5,
    0x03, 0x01, 0x62, 0x9B, 0x10, 0x0E, 0xEE, 0xDD, 0x20, 0x2C, 0x05, 0x80, 0x80, 0x39, 0x28, 0xB4,
    0x80, 0x50, 0x08, 0x05, 0x63, 0x50, 0x20, 0x17, 0x06, 0x3F, 0xC4, 0x50, 0x82, 0xB3, 0xC5, 0x64,
    0xFB, 0x3F, 0x27, 0x9D, 0x19, 0x88, 0xF6, 0x47, 0xB9, 0xB5, 0x34, 0xA2, 0xCA, 0xE5, 0xB1, 0xB7,
    0x4E, 0x96, 0xAD, 0xD1, 0x69, 0x51, 0x15, 0x12, 0x13, 0x36, 0xCC, 0xD3, 0x60, 0x1F, 0xCC, 0x2C,
    0xC0, 0x80, 0x1D, 0x94, 0xA5, 0xAA, 0x84, 0x16, 0x0E, 0x27, 0xC7, 0x9B, 0x2F, 0x74, 0xAE, 0x6C,
    0x16, 0x11, 0xEF, 0x55, 0x3B, 0xA5, 0x73, 0x22, 0xB0, 0x91, 0x92, 0x95, 0x00, 0x74, 0x6B, 0xB0,
    0x0D, 0x0D, 0x11, 0xA0, 0x28, 0x0F, 0xBC, 0x91, 0x60, 0x07, 0x80, 0xB5, 0x56, 0x7B, 0xA9, 0xD4,
    0x66, 0xB3, 0x56, 0xEA, 0x85, 0x71, 0x70, 0x49, 0xB2, 0x69, 0x63, 0x5B, 0xEB, 0x7D, 0x8F, 0xB5,
    0x80, 0x7D, 0xEA, 0xCA, 0x03, 0xF3, 0x68, 0x58, 0x09, 0x00, 0x14, 0x05, 0x21, 0x72, 0xA0, 0x25,
    0x18, 0x4A, 0x4A, 0xCA, 0xB2, 0xBC, 0xA4, 0xDB, 0x12, 0xBA, 0x70, 0xCF, 0x25, 0x35, 0xC4, 0xB0,
    0x95, 0x3B, 0xC9, 0x4D, 0x6F, 0x2B, 0x6A, 0x01, 0x00, 0x87, 0xAA, 0x28, 0x0B, 0x47, 0x75, 0xE0,
    0x34, 0x05, 0x01, 0x88, 0xDF, 0x52, 0x7B, 0xB2, 0xA1, 0x14, 0x66, 0xBB, 0xB3, 0x17, 0x55, 0x77,
    0x46, 0xA8, 0xED, 0x96, 0x0D, 0x8C, 0x21, 0x32, 0xC8, 0x91, 0x82, 0x58, 0xE5, 0x20, 0xD4, 0xF3,
    0xE0, 0x7C, 0x0B, 0xA0, 0xB2, 0x60, 0xEE, 0xDA, 0x21, 0xDB, 0xE0, 0x00, 0x00, 0xB5, 0x56, 0x7B,
    0xA9, 0xD4, 0x66, 0xB3, 0x55, 0xEA, 0x85, 0x71, 0x70, 0x49, 0xB2, 0x69, 0x63, 0x5B, 0xEB, 0x6D,
    0x88, 0x03, 0xCF, 0x56, 0x48, 0x0D, 0x01, 0xA0, 0x24, 0x00, 0x50, 0x14, 0x85, 0xCA, 0x80, 0x94,
    0x61, 0x29, 0x2B, 0x2A, 0xCA, 0xF2, 0x93, 0x6C, 0x4A, 0xE9, 0xC3, 0x3C, 0x94, 0xD7, 0x52, 0xC2,
    0x54, 0xEF, 0x25, 0x35, 0xBC, 0xAD, 0xA8, 0x08, 0x02, 0x1E, 0xA8, 0xA0, 0x2D, 0x1D, 0xD4, 0x80,
    0xF0, 0x18, 0x06, 0x23, 0x7D, 0x4B, 0x2E, 0xCA, 0x84, 0x51, 0x9A, 0xEE, 0xCC, 0x5D, 0x55, 0xDD,
    0x1A, 0xA3, 0xB6, 0x18, 0x36, 0x30, 0x84, 0xCB, 0x22, 0x46, 0x09, 0x63, 0x94, 0x83, 0x53, 0xCF,
    0x81, 0xF0, 0x4E, 0x29, 0xC4, 0xC0, 0x7A, 0x4D, 0x2B, 0x00, 0xA0, 0x0C, 0x01, 0x80, 0x20, 0x33,
    0x26, 0x9F, 0xC4, 0xD6, 0x73, 0x99, 0xDC, 0x68, 0xF5, 0x35, 0x5B, 0x06, 0x79, 0x3F, 0x8D, 0x4F,
    0x37, 0xB9, 0xAD, 0x4F, 0x63, 0x93, 0x42, 0x0A, 0xEC, 0xF7, 0x62, 0xEC, 0xFD, 0xA3, 0x75, 0x6A,
    0xC7, 0xBE, 0x21, 0x21, 0xFB, 0x77, 0xBA, 0xF7, 0xD6, 0xFA, 0xDF, 0x6B, 0xFE, 0x95, 0x76, 0x26,
    0x77, 0x38, 0x0D, 0x00, 0x9D, 0xC0, 0x7D, 0x06, 0x6E, 0x03, 0xEF, 0x35, 0x70, 0x1F, 0x59, 0x23,
    0x00, 0xFB, 0x0D, 0x84, 0x02, 0x5E, 0xE9, 0xE0, 0x00, 0x00, 0xD4, 0x98, 0x83, 0x99, 0xBC, 0x7B,
    0x37, 0x47, 0x28, 0xB4, 0x5D, 0x11, 0xA7, 0xDB, 0xAA, 0xAB, 0x39, 0x63, 0x47, 0xF2, 0xEA, 0xB9,
    0x4D, 0x99, 0x22, 0xFA, 0x92, 0xB5, 0xB4, 0x38, 0x8D, 0xB6, 0x5B, 0x30, 0x8B, 0x19, 0x5E, 0x95,
    0x66, 0x00, 0x0A, 0x03, 0x4C, 0x78, 0x78, 0x08, 0x02, 0x4E, 0x92, 0xF0, 0x00, 0x00, 0x85, 0xBD,
    0xD5, 0x09, 0x83, 0x2B, 0x98, 0x06, 0xE2, 0x61, 0x6A, 0xB7, 0x47, 0x43, 0x36, 0x9B, 0xEA, 0xA8,
    0x4D, 0x95, 0x16, 0xAC, 0x9D, 0xAB, 0x75, 0x6E, 0xAD, 0x55, 0x28, 0x32, 0x3C, 0x55, 0xA3, 0x35,
    0x66, 0xCC, 0x5B, 0x59, 0x39, 0xB4, 0x45, 0x8E, 0xF8, 0x4B, 0x08, 0xC4, 0x8E, 0xAA, 0xE2, 0x50,
    0xC5, 0x8C, 0x66, 0xBC, 0x76, 0x94, 0x31, 0x82, 0xD1, 0x2A, 0xE1, 0x97, 0xE0, 0x80, 0x1C, 0x92,
    0x9E, 0xA8, 0xA3, 0xA5, 0x89, 0xDA, 0xED, 0xCA, 0x1C, 0xCA, 0xA9, 0x73, 0x9B, 0x76, 0x7E, 0xCD,
    0xC9, 0x9E, 0xEA, 0x98, 0x63, 0x9E, 0xEA, 0x67, 0xCA, 0x1A, 0x15, 0xB5, 0x7A, 0xA2, 0x30, 0x94,
    0x59, 0x7D, 0x66, 0x2C, 0x83, 0xA1, 0x1E, 0x26, 0xA8, 0xA0, 0x3F, 0x35, 0x36, 0x80, 0xB0, 0x16,
    0x00, 0xC0, 0x06, 0x01, 0xB5, 0xB2, 0x62, 0x7A, 0x46, 0x15, 0x55, 0xB5, 0xBD, 0xB2, 0xD7, 0xC6,
    0x87, 0x0D, 0x19, 0xA3, 0x76, 0x10, 0xB0, 0xCC, 0x4E, 0x64, 0xCD, 0x94, 0x1C, 0xA9, 0x73, 0x0E,
    0x20, 0x03, 0x00, 0xD6, 0xB9, 0x18, 0x07, 0x49, 0x14, 0x60, 0x07, 0x80, 0x90, 0x1D, 0x71, 0x06,
    0xA5, 0xC3, 0x59, 0x91, 0x1E, 0xF9, 0xC9, 0xE6, 0xD9, 0x54, 0x69, 0xF6, 0xF2, 0x78, 0x46, 0xDD,
    0xD1, 0xED, 0xBD, 0xA3, 0xB5, 0x76, 0xAB, 0x54, 0xF4, 0xE3, 0x3C, 0x44, 0x29, 0x40, 0x7D, 0xA9,
    0x0F, 0x01, 0xC0, 0x7E, 0x4C, 0xAA, 0x03, 0xF8, 0x83, 0x38, 0x03, 0x00, 0x14, 0x05, 0x56, 0xEE,
    0xA0, 0x3B, 0x04, 0x44, 0x01, 0x25, 0xCA, 0x78, 0x00, 0x00, 0x90, 0x17, 0x8A, 0xA4, 0x40, 0x70,
    0x13, 0x8B, 0x1E, 0x22, 0x9D, 0x99, 0x91, 0xEA, 0xC9, 0xB9, 0x3B, 0x2F, 0x26, 0xA5, 0x55, 0x55,
    0xA6, 0xB9, 0xD9, 0xFB, 0x47, 0x6B, 0xD5, 0xCF, 0x6A, 0x3D, 0xDD, 0x42, 0xEF, 0x84, 0xF0, 0x86,
    0x32, 0x7A, 0x24, 0x6C, 0xD4, 0xA3, 0x93, 0x72, 0xF0, 0x80, 0x18, 0x79, 0xB4, 0x40, 0x78, 0x16,
    0x7F, 0x10, 0x63, 0x08, 0xAF, 0x1E, 0x63, 0xDC, 0x9B, 0x97, 0x75, 0x6E, 0xBD, 0xDB, 0xBB, 0xB1,
    0x7E, 0x28, 0xC8, 0x0D, 0x5E, 0x4A, 0x61, 0x37, 0x99, 0xA6, 0x6D, 0x2E, 0x18, 0x4D, 0x28, 0x51,
    0xF2, 0xC3, 0x6E, 0x2B, 0xC5, 0xB9, 0x78, 0x00, 0x00, 0x60, 0x18, 0xC4, 0x2B, 0x80, 0xBB, 0x50,
    0xDE, 0x06, 0x1F, 0xD4, 0x55, 0x02, 0x27, 0xE9, 0x98, 0x73, 0x0E, 0xA1, 0xC4, 0x5C, 0xC2, 0x67,
    0xEB, 0x78, 0x95, 0x21, 0x5A, 0xF5, 0x6C, 0xB2, 0x35, 0xCE, 0xAA, 0x94, 0xA9, 0xF9, 0x51, 0x5B,
    0xCE, 0x8A, 0xD1, 0x5A, 0xA9, 0x5A, 0x59, 0x3F, 0x4A, 0x2B, 0x7B, 0x56, 0xC6, 0x3E, 0xD3, 0x12,
    0xBF, 0x16, 0x31, 0xCF, 0x90, 0xE6, 0xAF, 0xC5, 0xAC, 0xA5, 0x52, 0x32, 0x2B, 0xF1, 0x7B, 0x6A,
    0xEE, 0xB0, 0x8F, 0x7B, 0x5E, 0xDA, 0x42, 0xAD, 0x2C, 0xDE, 0xD7, 0xBE, 0xCC, 0xA7, 0x4F, 0x2F,
    0x95, 0xEA, 0x82, 0x93, 0xD5, 0x38, 0xDB, 0x7A, 0xEF, 0x5D, 0xEB, 0xBF, 0xC0, 0x00, 0x00, 0x85,
    0x4F, 0x70, 0x7C, 0xCB, 0x95, 0x29, 0x5C, 0x1E, 0x1D, 0x15, 0x05, 0xC9, 0x56, 0xF7, 0x07, 0xC5,
    0x39, 0x8F, 0x55, 0x45, 0xE7, 0x4C, 0xCF, 0x24, 0xE5, 0x0D, 0x7B, 0xDB, 0x3B, 0xDB, 0x3B, 0x3F,
    0x67, 0xEC, 0xFA, 0xA9, 0x4F, 0x9D, 0x86, 0x2B, 0xA6, 0xEA, 0xDD, 0x76, 0xB4, 0xF1, 0xCD, 0x56,
    0x2B, 0xA5, 0x6E, 0xAD, 0xF0, 0xBC, 0xBB, 0xD8, 0x55, 0x49, 0x13, 0xEF, 0xF0, 0x00, 0x00, 0xE4,
    0xF1, 0xA4, 0x3B, 0x25, 0xDA, 0xF9, 0x3C, 0xA7, 0x10, 0xE5, 0x56, 0xCE, 0x4F, 0x08, 0xD3, 0xC1,
    0xD5, 0x73, 0xB3, 0xF2, 0xA7, 0x27, 0xB1, 0x95, 0x2E, 0x5D, 0xAA, 0x95, 0x1F, 0x7C, 0x88, 0xF3,
    0x52, 0xAD, 0x73, 0xAE, 0x75, 0xC2, 0xC3, 0xF3, 0x21, 0x0E, 0x6B, 0x4E, 0xB0, 0xDB, 0xE6, 0x27,
    0x88, 0xDB, 0xAC, 0x3D, 0x3E, 0x49, 0x56, 0xC6, 0xAB, 0x4D, 0x1D, 0x75, 0x45, 0x6D, 0x9E, 0xDF,
    0xA5, 0x8D, 0x63, 0x5A, 0x9D, 0x5A, 0xAD, 0x5B, 0x56, 0xB9, 0x01, 0x92, 0xBD, 0x54, 0xF5, 0xD5,
    0xD9, 0x9E, 0x73, 0xB5, 0x6A, 0x88, 0x32, 0xAA, 0x90, 0xF4, 0x9A, 0xA1, 0xD1, 0xA9, 0x94, 0x4B,
    0x26, 0x2A, 0x75, 0xE9, 0x26, 0x0A, 0xC9, 0xBA, 0xB7, 0x56, 0xAB, 0x7E, 0x9D, 0x5E, 0x0A, 0x6B,
    0x9A, 0xF5, 0x5C, 0x2B, 0x4A, 0x74, 0x92, 0xFB, 0xD9, 0x0B, 0x63, 0x78, 0x41, 0x78, 0xAF, 0x80,
    0x2C, 0x05, 0x80, 0x90, 0x12, 0x01, 0xC0, 0x28, 0x1E, 0x95, 0xAD, 0x59, 0xF5, 0x24, 0x3C, 0x6D,
    0x5B, 0xD6, 0x7F, 0x29, 0x0F, 0x2E, 0x54, 0xC7, 0xDE, 0x42, 0x26, 0x93, 0x94, 0x39, 0x99, 0x8D,
    0x07, 0x73, 0xE4, 0xCD, 0x9C, 0xAC, 0xC1, 0xBD, 0x37, 0x36, 0xA6, 0x84, 0x6D, 0x1E, 0xC9, 0xE9,
    0xA9, 0xE3, 0x3A, 0x45, 0xA4, 0x7A, 0xEE, 0x8D, 0xD7, 0x9B, 0x27, 0x7A, 0x80, 0xB1, 0x0D, 0x56,
    0x05, 0x2E, 0x7E, 0x49, 0xA2, 0x56, 0xEB, 0x5B, 0xE1, 0x83, 0xF4, 0x4D, 0x12, 0x9E, 0xB8, 0xE0,
    0xFC, 0x17, 0x81, 0xF0, 0xF0, 0x00, 0x00, 0xA5, 0x0B, 0x53, 0xCD, 0x9C, 0x66, 0x71, 0x53, 0xD0,
    0xEF, 0xA8, 0xB7, 0x2D, 0x55, 0x04, 0x33, 0xF9, 0x3B, 0xB3, 0x94, 0x45, 0x8F, 0x94, 0xC9, 0x6C,
    0xE5, 0x0F, 0x7C, 0x65, 0xB1, 0xCB, 0x39, 0x43, 0x67, 0x33, 0x88, 0x92, 0xBE, 0xCF, 0xC9, 0xDF,
    0x96, 0x6A, 0x54, 0xB5, 0x72, 0x78, 0xE5, 0xD5, 0x9D, 0x65, 0xBA, 0xAA, 0x5A, 0x65, 0x26, 0x87,
    0x64, 0x2A, 0xF5, 0xA6, 0x50, 0x08, 0xBB, 0x20, 0x2C, 0x43, 0x5C, 0x57, 0xD9, 0xC3, 0x10, 0xAA,
    0xDA, 0xD5, 0xC1, 0xEC, 0xA8, 0xD9, 0x9C, 0xC5, 0xB0, 0x6B, 0x42, 0xB4, 0xF6, 0xE9, 0x7B, 0x20,
    0xEE, 0xB1, 0xB5, 0x2A, 0x5F, 0x05, 0x42, 0xC2, 0x54, 0xAD, 0xC0, 0x7D, 0x2C, 0x8F, 0x01, 0xE0,
    0x14, 0x00, 0x10, 0x02, 0x9D, 0xC3, 0x00, 0xE2, 0xDD, 0x90, 0x04, 0x96, 0xE7, 0xE0, 0x85, 0x86,
    0x7F, 0xA4, 0x9D, 0x44, 0x69, 0x62, 0x1F, 0xAD, 0x41, 0xED, 0x4C, 0x56, 0x7C, 0x4A, 0xC4, 0x5B,
    0x8B, 0x95, 0x36, 0xB3, 0x0F, 0x19, 0x0D, 0xED, 0x1D, 0x9F, 0xB3, 0xF6, 0x8E, 0xD5, 0xCB, 0x21,
    0x78, 0x94, 0x6B, 0x6A, 0x6E, 0xCB, 0xDB, 0x3B, 0x94, 0x06, 0xD5, 0x2C, 0xB0, 0x16, 0x02, 0x40,
    0x38, 0x03, 0x00, 0x01, 0x80, 0x48, 0xD3, 0x06, 0x02, 0x8A, 0xA4, 0xF0, 0x00, 0x00, 0xA5, 0xCD,
    0x5B, 0x5C, 0xA1, 0xED, 0x2D, 0x64, 0x56, 0x71, 0x6C, 0x33, 0xDB, 0x56, 0x97, 0xD5, 0x49, 0x4C,
    0x93, 0x35, 0x6A, 0x86, 0x2E, 0xF1, 0xDD, 0x66, 0x5A, 0x99, 0xAB, 0xAA, 0x6A, 0x49, 0x9E, 0xA6,
    0x73, 0xED, 0x8F, 0x55, 0x5B, 0x99, 0xF3, 0x46, 0x2A, 0x84, 0x71, 0x4A, 0x9D, 0x6D, 0x9A, 0xF7,
    0x6E, 0xAE, 0x84, 0xE5, 0x86, 0x21, 0xCF, 0x9B, 0xB3, 0x7C, 0x2F, 0x4A, 0xD3, 0x25, 0xA1, 0xA6,
    0xFB, 0xDF, 0x73, 0xAE, 0x53, 0x0E, 0x9D, 0x6E, 0x34, 0xEB, 0x96, 0xB2, 0xD8, 0x68, 0x6E, 0x42,
    0xE6, 0xAA, 0x21, 0x26, 0x5B, 0x7E, 0x00, 0x00, 0xB5, 0x70, 0x0D, 0x69, 0xD4, 0x5A, 0x31, 0x43,
    0xC9, 0x92, 0x75, 0x3A, 0x1E, 0x4E, 0xF8, 0xC4, 0xA3, 0x7D, 0x6F, 0xB3, 0xF6, 0x8E, 0x57, 0x1A,
    0x45, 0x23, 0x5C, 0x8F, 0xB6, 0xDA, 0xE7, 0xC6, 0x20, 0xDE, 0x32, 0x51, 0xC4, 0xC0, 0x45, 0xAC,
    0x8B, 0x01, 0x40, 0x61, 0xEF, 0x00, 0x00, 0x0E, 0x02, 0xE8, 0x67, 0x10, 0x06, 0x94, 0xBF, 0x80,
    0x00, 0x00, 0x65, 0x68, 0x5D, 0xDB, 0xC2, 0x4A, 0xA1, 0x6B, 0x11, 0x54, 0x6E, 0xB6, 0xCA, 0x5A,
    0xE5, 0x2B, 0xC3, 0x15, 0xD6, 0xD6, 0x39, 0x8C, 0xF4, 0x49, 0x75, 0xE5, 0x71, 0x93, 0xDA, 0x35,
    0x6D, 0xBB, 0x5F, 0x6B, 0xE5, 0x52, 0x9A, 0xE2, 0x1D, 0x4A, 0x7B, 0x57, 0x28, 0x8D, 0x66, 0xC5,
    0x66, 0x49, 0x4A, 0x1D, 0x38, 0x73, 0x8C, 0x85, 0xA8, 0x0F, 0xC6, 0x1D, 0xE0, 0x30, 0x0F, 0xC1,
    0xE1, 0xE0, 0x40, 0x0F, 0xC1, 0xE2, 0x00, 0x79, 0x93, 0x4C, 0x03, 0x8A, 0x69, 0x20, 0x0E, 0x8D,
    0x19, 0x00, 0x8C, 0xC6, 0x43, 0xC0, 0x00, 0x00, 0x95, 0x92, 0x53, 0x9E, 0x83, 0x5B, 0x69, 0x64,
    0x5A, 0xC7, 0x60, 0xF7, 0xBD, 0x57, 0x39, 0xA5, 0x3A, 0xCE, 0xCB, 0x75, 0xE6, 0xAC, 0xD5, 0x9A,
    0x23, 0x38, 0x00, 0x03, 0x80, 0xB2, 0x21, 0xD0, 0x06, 0x53, 0x0C, 0x20, 0x1F, 0x37, 0x2F, 0x55,
    0x69, 0x8D, 0xFA, 0x8D, 0xCB, 0x23, 0x55, 0x6C, 0xCD, 0x7B, 0xAB, 0x94, 0x3A, 0xB3, 0x6B, 0x16,
    0xE4, 0xED, 0x1C, 0xAA, 0x35, 0x8C, 0x56, 0xB7, 0x27, 0x2C, 0x9D, 0xA2, 0x98, 0xED, 0xD9, 0x6B,
    0xE5, 0xA5, 0x92, 0xAD, 0x58, 0xCB, 0x1A, 0x5D, 0x18, 0xDF, 0x62, 0x2E, 0xCA, 0x96, 0x15, 0x68,
    0xAA, 0x50, 0x00, 0x30, 0x09, 0xCE, 0x05, 0x60, 0x24, 0x0F, 0x23, 0xAE, 0x04, 0xB6, 0x24, 0xB8,
    0x99, 0x52, 0xD1, 0x4F, 0x41, 0x32, 0x68, 0x5A, 0xC2, 0xEB, 0x48, 0x66, 0x76, 0x96, 0x30, 0xF3,
    0x36, 0x11, 0x6B, 0xA5, 0x4D, 0x4D, 0xF5, 0x0A, 0x5E, 0xB3, 0x56, 0xA8, 0x64, 0x36, 0xD8, 0xEB,
    0x49, 0xB9, 0xF3, 0x37, 0x27, 0x7B, 0xF2, 0x9C, 0xEA, 0xC9, 0xCA, 0xA4, 0xEC, 0x88, 0x47, 0xB2,
    0xF2, 0xD9, 0xCA, 0xA1, 0xD1, 0xEC, 0xB8, 0xBE, 0x4F, 0xA4, 0x79, 0x9B, 0x15, 0x31, 0x8D, 0x11,
    0x62, 0xAB, 0x27, 0x1C, 0x5F, 0x88, 0x00, 0x10, 0x07, 0xE9, 0x11, 0x00, 0x3B, 0x4E, 0x6C, 0x03,
    0x69, 0xA9, 0x60, 0x1F, 0x7C, 0xE4, 0x00, 0xFC, 0xDD, 0xDC, 0x07, 0xE0, 0xAA, 0xC0, 0x3E, 0xC5,
    0x46, 0x01, 0xF4, 0xAA, 0x78, 0x00, 0x85, 0x47, 0x77, 0xAC, 0xA4, 0x45, 0x25, 0x42, 0x19, 0x77,
    0x81, 0x11, 0xCB, 0x5A, 0xA6, 0x3F, 0xC8, 0x63, 0xCF, 0x94, 0x31, 0xB1, 0xEA, 0x33, 0x34, 0xE5,
    0x0C, 0x8D, 0x7A, 0x25, 0x4B, 0x39, 0x53, 0x27, 0x7C, 0x93, 0x72, 0xCE, 0x54, 0xC9, 0xDE, 0x2B,
    0x5B, 0x53, 0x95, 0x32, 0x57, 0x6D, 0x54, 0xD4, 0xE5, 0x4D, 0x95, 0xD3, 0xB4, 0xB5, 0x39, 0x54,
    0x21, 0x52, 0xCD, 0x0D, 0x4E, 0x59, 0x29, 0xAC, 0xAA, 0xCC, 0x6B, 0x56, 0xC6, 0xAB, 0x09, 0x53,
    0x1A, 0xC5, 0xF3, 0xAA, 0xB2, 0x45, 0x46, 0xA9, 0x8C, 0xA8, 0x4E, 0x95, 0x71, 0xA9, 0xE3, 0x4C,
    0x64, 0xF5, 0x39, 0x6A, 0x94, 0xB3, 0x13, 0xB9, 0x62, 0x92, 0xA5, 0x2C, 0xC4, 0xAD, 0x96, 0xA7,
    0xA7, 0x13, 0xB1, 0x7C, 0x95, 0x55, 0x6E, 0x53, 0xE0, 0x00, 0x00, 0x84, 0xEC, 0x53, 0xC6, 0x83,
    0x3D, 0xAD, 0x7B, 0xD8, 0x59, 0x62, 0xCF, 0x6B, 0x5B, 0x27, 0x05, 0xE1, 0x4C, 0xFB, 0x55, 0x45,
    0xA9, 0xBC, 0x53, 0x3E, 0xD5, 0x4C, 0x63, 0xFE, 0x04, 0xCF, 0xB1, 0x42, 0xA1, 0x7B, 0x40, 0x93,
    0x6C, 0x50, 0xB8, 0xDE, 0x50, 0x8B, 0xFE, 0xD5, 0x29, 0xF7, 0x94, 0x42, 0xFF, 0xB5, 0x4A, 0x65,
    0xE5, 0x10, 0xDD, 0x6D, 0x62, 0xD9, 0x1B, 0x22, 0x33, 0xEA, 0x5C, 0xD5, 0xBE, 0xBB, 0x05, 0xF2,
    0x57, 0xB5, 0x31, 0xC6, 0xE1, 0x7B, 0x96, 0x2E, 0x53, 0x64, 0x48, 0x5F, 0x25, 0x93, 0x5A, 0x79,
    0x8E, 0x8F, 0x38, 0x64, 0xF6, 0x15, 0x54, 0x8C, 0xA8, 0xD9, 0x15, 0x51, 0x36, 0xD3, 0x2A, 0x56,
    0x45, 0x4D, 0x53, 0x3E, 0x28, 0x8D, 0x91, 0x53, 0x13, 0x2E, 0xAE, 0x48, 0x65, 0x77, 0x43, 0xA2,
    0xA4, 0x95, 0xB7, 0x22, 0xD9, 0xC1, 0x9D, 0xCE, 0x65, 0x42, 0xBE, 0x6D, 0x76, 0x60, 0x25, 0x27,
    0x80, 0x00, 0x00, 0x95, 0xB0, 0x68, 0xDD, 0x84, 0xCF, 0xA5, 0x74, 0x9C, 0x19, 0x81, 0x0B, 0xEC,
    0x5A, 0xD5, 0xB5, 0xD8, 0xC9, 0xB7, 0x55, 0xAA, 0x37, 0xF2, 0x11, 0x6D, 0xC5, 0x49, 0xC6, 0xE3,
    0x84, 0x5A, 0xF1, 0x42, 0xDB, 0xFC, 0xE4, 0xD3, 0x3D, 0x4C, 0xD5, 0x7F, 0xB1, 0x34, 0xCF, 0x13,
    0x3D, 0x1B, 0xEC, 0x31, 0x6B, 0xCC, 0xF6, 0xA1, 0x71, 0xFC, 0x35, 0xB9, 0x86, 0x2A, 0x55, 0x7A,
    0x51, 0x62, 0x45, 0x8B, 0x17, 0x1E, 0xB5, 0x57, 0xB5, 0xF2, 0xD6, 0x4F, 0x69, 0x55, 0x6D, 0x76,
    0xB9, 0x92, 0xB9, 0x86, 0x2B, 0x9C, 0x2F, 0x7C, 0x03, 0x9D, 0x5A, 0xB8, 0xFB, 0xDD, 0x7B, 0x5E,
    0x1F, 0x0A, 0xB1, 0xB7, 0x5C, 0xB7, 0x17, 0xBA, 0xB2, 0x8D, 0xF7, 0x36, 0xFF, 0x65, 0x89, 0x5C,
    0xDC, 0x04, 0xF7, 0x25, 0x63, 0x8E, 0xF5, 0x40, 0xB7, 0x6B, 0x57, 0x15, 0x1E, 0x48, 0x2C, 0xF6,
    0xD3, 0x49, 0x45, 0x76, 0x25, 0x3E, 0xC4, 0xD0, 0x3C, 0x6C, 0x22, 0x59, 0x71, 0x33, 0x4D, 0x9E,
    0x69, 0x3A, 0xAB, 0x4C, 0xB4, 0xFD, 0x84, 0xDD, 0x8B, 0x14, 0x35, 0x1B, 0xAA, 0xAB, 0xB4, 0xBD,
    0x74, 0xB9, 0xC9, 0xBB, 0x77, 0x2D, 0xE3, 0xB0, 0x5B, 0x6A, 0x25, 0x52, 0xE6, 0x00, 0x0A, 0x02,
    0x7B, 0x65, 0x50, 0x11, 0x8B, 0x12, 0x00, 0xA3, 0xE8, 0x0C, 0x05, 0x23, 0x04, 0x20, 0x1A, 0xF4,
    0x3F, 0x65, 0x89, 0x5C, 0xDC, 0x04, 0xF7, 0x25, 0x63, 0x8E, 0xF5, 0x40, 0xB7, 0x6B, 0x57, 0x15,
    0x1E, 0x48, 0x2C, 0xF6, 0xD3, 0x49, 0x45, 0x76, 0x25, 0x3E, 0xC4, 0xD0, 0x3C, 0x6C, 0x22, 0x59,
    0x71, 0x33, 0x4D, 0x9E, 0x69, 0x3A, 0xAB, 0x4C, 0xB4, 0xFD, 0x84, 0xDD, 0x8B, 0x14, 0x35, 0x1B,
    0xAA, 0xAB, 0xB4, 0xBD, 0x74, 0xB9, 0xC9, 0xBB, 0x77, 0x2D, 0xE3, 0xB0, 0x5B, 0x6A, 0x25, 0x52,
    0xE6, 0x00, 0x04, 0x01, 0xDD, 0xA3, 0x30, 0x1B, 0x53, 0x49, 0x80, 0xFC, 0xDE, 0x4E, 0x01, 0xC0,
    0x38, 0x07, 0x00, 0xA0, 0x78, 0x00, 0x00, 0x95, 0xF4, 0x80, 0x6C, 0xB9, 0x0F, 0xEF, 0x76, 0x6C,
    0xC5, 0x49, 0x84, 0xFD, 0x02, 0xDB, 0xB3, 0x56, 0x65, 0xBC, 0xB5, 0x96, 0x13, 0x9E, 0x95, 0xE8,
    0x0F, 0x7D, 0x95, 0x48, 0x9B, 0x7A, 0x29, 0xCF, 0x29, 0x6A, 0x2E, 0xF3, 0x92, 0xB3, 0xC9, 0xE1,
    0x0C, 0x8F, 0x97, 0xBD, 0x87, 0x4E, 0xBB, 0x44, 0xD9, 0x5B, 0xE0, 0xE5, 0x8C, 0xD1, 0x76, 0x37,
    0xFA, 0x55, 0x63, 0x34, 0x65, 0x15, 0x67, 0x98, 0xB6, 0xEE, 0x1F, 0x66, 0x36, 0x5B, 0x6D, 0x07,
    0x80, 0x00, 0x00, 0xB4, 0x53, 0x7A, 0x2C, 0x55, 0x52, 0xB5, 0x2C, 0xE4, 0xA8, 0xF3, 0x58, 0xAE,
    0xCB, 0xA9, 0xA7, 0x24, 0x96, 0x79, 0xAD, 0x72, 0x88, 0xBA, 0x65, 0xD5, 0x65, 0x9B, 0xAB, 0x16,
    0x32, 0x58, 0xEE, 0x8D, 0x2A, 0x95, 0xAB, 0x69, 0x53, 0x9D, 0xCD, 0xA7, 0x74, 0xEF, 0x8D, 0xED,
    0xBD, 0xB8, 0x2F, 0x10, 0xF0, 0x00, 0x00, 0x56, 0x2B, 0x69, 0x53, 0x9D, 0xCD, 0x9D, 0x73, 0x5C,
    0x36, 0x8B, 0x16, 0xDA, 0x58, 0xF8, 0x0D, 0x9A, 0x3C, 0xB7, 0x95, 0x53, 0x4F, 0x04, 0xB5, 0x2C,
    0xED, 0x1D, 0x9F, 0x93, 0xD7, 0x08, 0xA7, 0x39, 0x5C, 0xDD, 0x19, 0xAB, 0x36, 0x66, 0xD9, 0x5F,
    0x4A, 0x12, 0x25, 0xE6, 0x4E, 0x77, 0xC7, 0x00, 0x03, 0x62, 0x55, 0x4C, 0x54, 0x43, 0x91, 0xB8,
    0xBB, 0x18, 0x2D, 0x9D, 0xA9, 0xF3, 0x28, 0xC6, 0x33, 0x46, 0x34, 0xA9, 0x18, 0x78, 0x45, 0x05,
    0x64, 0x4F, 0xB3, 0xB9, 0x2D, 0x72, 0xA3, 0x16, 0xE7, 0x52, 0x2D, 0x5D, 0x08, 0xAD, 0xC1, 0xBD,
    0xEF, 0x97, 0x4E, 0x2D, 0x2A, 0xC9, 0x72, 0xA5, 0xD1, 0x79, 0xB3, 0x1B, 0x4E, 0x51, 0x78, 0xDB,
    0x1B, 0x8E, 0xCD, 0x93, 0x60, 0x54, 0xD4, 0xCC, 0x53, 0x69, 0x40, 0x58, 0x82, 0x6D, 0x03, 0x55,
    0x56, 0x2C, 0xC8, 0x8F, 0xEC, 0xD4, 0xB0, 0x72, 0xCB, 0xC5, 0x54, 0xB5, 0x2B, 0xE0, 0xB8, 0xED,
    0x89, 0x9D, 0x4A, 0xF8, 0xB4, 0xAB, 0xD3, 0x6E, 0xF2, 0xB2, 0x73, 0xB1, 0xBA, 0xCA, 0x5A, 0x6C,
    0x02, 0x8D, 0x54, 0x60, 0x0F, 0x1B, 0xB6, 0xAB, 0x84, 0x92, 0xD5, 0x72, 0x57, 0xDB, 0xB5, 0x93,
    0xE4, 0xB9, 0x09, 0x3A, 0x49, 0x66, 0xE8, 0x3C, 0x52, 0xAC, 0x4E, 0x5A, 0xC2, 0x6C, 0xF4, 0x51,
    0x52, 0x96, 0xB1, 0xA1, 0xCC, 0x34, 0x29, 0x59, 0x9B, 0x64, 0xAD, 0x07, 0x4D, 0x4F, 0x45, 0x87,
    0x6A, 0x66, 0x1D, 0xC8, 0xE1, 0x73, 0x5C, 0x34, 0xED, 0x2F, 0x49, 0x58, 0xE7, 0x8D, 0x23, 0x4B,
    0xF3, 0x95, 0x52, 0x8F, 0x0E, 0xA5, 0xB5, 0xE5, 0x14, 0xA3, 0xBB, 0x2B, 0xE9, 0x79, 0x35, 0x26,
    0xCC, 0xCB, 0x79, 0xCE, 0xCD, 0xC9, 0xAB, 0x56, 0x45, 0x5D, 0xCD, 0xF2, 0xAB, 0x62, 0x11, 0x0E,
    0xBD, 0x98, 0xB6, 0x92, 0x42, 0x6A, 0xBC, 0x95, 0x6F, 0x76, 0x54, 0xA9, 0x04, 0x4E, 0xC8, 0xC0,
    0x00, 0x18, 0x04, 0xAA, 0xA6, 0xA0, 0x23, 0x65, 0x14, 0x01, 0x39, 0xC8, 0x78, 0x35, 0xCA, 0x69,
    0x4D, 0xCA, 0xCC, 0xD9, 0x6C, 0xF0, 0x0C, 0xAC, 0x75, 0xFB, 0xDB, 0x9A, 0xF5, 0x55, 0xEF, 0x4A,
    0x06, 0x9E, 0xDD, 0xD5, 0x9A, 0xAF, 0x55, 0xED, 0xBD, 0xB5, 0xB6, 0x96, 0xDA, 0xD0, 0x60, 0xCF,
    0xE4, 0xA5, 0xB5, 0xA2, 0x12, 0x4D, 0x64, 0xE1, 0x7C, 0x5E, 0x0F, 0x37, 0x6C, 0x36, 0x5F, 0x06,
    0x83, 0xCD, 0x4A, 0x4C, 0xD7, 0xCA, 0x42, 0x66, 0xB6, 0x9C, 0xF0, 0x00, 0x00, 0x75, 0xAC, 0x70,
    0x55, 0x34, 0x48, 0xE5, 0x6B, 0xA0, 0x14, 0xAE, 0xD2, 0xBC, 0x5B, 0x29, 0x2A, 0xAB, 0x2D, 0xB3,
    0x95, 0x5A, 0x92, 0x82, 0xAD, 0xEB, 0xED, 0x5D, 0xAB, 0x75, 0x62, 0xAA, 0xB5, 0x0D, 0x37, 0x20,
    0x7B, 0xAA, 0xF5, 0xE6, 0xCC, 0xDB, 0x9B, 0xA1, 0x73, 0x5C, 0x15, 0x4B, 0x69, 0xB8, 0xDF, 0x0B,
    0xDA, 0xE1, 0xB6, 0x8A, 0x51, 0xAA, 0xF4, 0xB5, 0x32, 0x56, 0xDA, 0x4C, 0xBE, 0x6B, 0xA0, 0x52,
    0x8B, 0x1F, 0x80, 0x00, 0x00, 0x25, 0x6A, 0x69, 0xB4, 0x94, 0xCF, 0x4D, 0x43, 0x1E, 0x2F, 0x09,
    0x32, 0xD8, 0x55, 0x29, 0xB4, 0x2A, 0xB5, 0xB3, 0xB5, 0x76, 0xAE, 0xD1, 0xA9, 0xE9, 0x56, 0xB6,
    0x18, 0x93, 0x3A, 0xA7, 0x48, 0xA8, 0x8E, 0x24, 0xCC, 0xA9, 0xF3, 0x19, 0x44, 0x4B, 0x1C, 0xEB,
    0x95, 0x8D, 0xD9, 0x53, 0x41, 0xBB, 0x27, 0x6C, 0x6E, 0x85, 0xCD, 0xD1, 0x53, 0x4A, 0x3D, 0x21,
    0x7B, 0xF2, 0x52, 0x78, 0x97, 0x29, 0x5F, 0x0B, 0xA3, 0xAC, 0x3E, 0x9A, 0x18, 0x4A, 0x87, 0x09,
    0x37, 0x9B, 0x76, 0x11, 0x91, 0x33, 0xD6, 0x44, 0xD5, 0x84, 0x5A, 0x6B, 0x37, 0x50, 0x35, 0x61,
    0x38, 0x03, 0x44, 0x62, 0x35, 0x98, 0xD2, 0x40, 0xD1, 0x18, 0x95, 0xF0, 0x65, 0xCB, 0x70, 0x55,
    0x24, 0xC6, 0xE1, 0x73, 0xA0, 0x16, 0xAB, 0x6E, 0x4B, 0x5B, 0x09, 0x0C, 0x29, 0xA4, 0xD3, 0x95,
    0xD2, 0xAF, 0x6A, 0x8F, 0x6C, 0xED, 0x5C, 0xAA, 0x74, 0x7A, 0x52, 0xC9, 0x5E, 0x2A, 0x7B, 0xA1,
    0xA4, 0xF9, 0x27, 0x1A, 0x98, 0x07, 0x94, 0xEA, 0xC0, 0x3D, 0x16, 0x26, 0x01, 0xE5, 0xBA, 0xA0,
    0x0A, 0x91, 0xCF, 0x16, 0x4E, 0x8A, 0xEA, 0x8F, 0xE5, 0xDD, 0xD9, 0xC2, 0x78, 0xC3, 0x28, 0x2D,
    0x8D, 0xDD, 0xF4, 0x0E, 0xC9, 0x29, 0x74, 0x6A, 0xA9, 0x01, 0xB2, 0x3A, 0x65, 0xE9, 0xE1, 0xB7,
    0x4C, 0xB7, 0x35, 0x04, 0x49, 0x72, 0x28, 0x0D, 0xDD, 0x45, 0x40, 0x73, 0x10, 0x4A, 0x03, 0x53,
    0x43, 0x20, 0x12, 0x52, 0xA0, 0x07, 0x80, 0x75, 0xE6, 0x7B, 0xAC, 0x35, 0x48, 0x65, 0x7B, 0x62,
    0x30, 0xA9, 0x12, 0xB9, 0x5A, 0xF9, 0x23, 0xA2, 0x8D, 0xB7, 0x16, 0x52, 0x53, 0x0A, 0xC7, 0x25,
    0xED, 0x58, 0xA2, 0x76, 0x8A, 0x61, 0x99, 0x6E, 0x25, 0x7D, 0x59, 0xD2, 0x31, 0x47, 0x49, 0x64,
    0xEB, 0x25, 0x0B, 0x8A, 0x38, 0x0D, 0x05, 0x51, 0xA0, 0x34, 0x08, 0x43, 0x57, 0x42, 0xAA, 0x9D,
    0xD7, 0xB5, 0x6A, 0xBB, 0xC2, 0x15, 0x18, 0x27, 0xD0, 0xBA, 0x89, 0x55, 0x37, 0x4B, 0xAA, 0x2F,
    0x68, 0xDA, 0x66, 0x21, 0x42, 0xC0, 0x2E, 0x40, 0x6C, 0x5B, 0x69, 0x3B, 0x33, 0x0D, 0xDF, 0xB7,
    0x6E, 0xEC, 0xDF, 0x4B, 0xDE, 0xE4, 0xA6, 0x59, 0xD2, 0xC3, 0x08, 0x16, 0x61, 0xDE, 0x27, 0x32,
    0xC3, 0xC5, 0x38, 0x87, 0x89, 0x62, 0x80, 0xE0, 0x0D, 0x0C, 0x07, 0xD8, 0x6A, 0x40, 0x3E, 0xA4,
    0x5F, 0x95, 0xB3, 0xB0, 0x41, 0xAA, 0x49, 0xAD, 0x5C, 0x66, 0x0D, 0x08, 0xB5, 0x7E, 0x51, 0x19,
    0x2C, 0x2B, 0xF4, 0x6B, 0xB3, 0xF6, 0x6B, 0x4E, 0xD8, 0xB5, 0x31, 0x6C, 0x56, 0xD5, 0xBC, 0xD5,
    0x14, 0xC5, 0x6D, 0xCD, 0x56, 0xA9, 0x2D, 0xFB, 0x63, 0x4B, 0x65, 0xEC, 0xAD, 0xD2, 0xBD, 0x2C,
    0xFD, 0x44, 0x79, 0xA4, 0x31, 0x5A, 0x77, 0xDC, 0xCA, 0xF9, 0x0C, 0x96, 0x8F, 0xC5, 0x43, 0xD1,
    0x78, 0x00, 0x00, 0x75, 0xCD, 0x72, 0xD9, 0x29, 0xCA, 0xE1, 0x73, 0x9A, 0x96, 0x6A, 0x6D, 0xD9,
    0xDB, 0x3A, 0xF9, 0x54, 0x25, 0x73, 0x09, 0x51, 0xCE, 0xD5, 0xCA, 0xA1, 0x5A, 0x97, 0x4A, 0x8E,
    0x72, 0xA9, 0x5E, 0x65, 0x92, 0x6A, 0x9A, 0xAE, 0x78, 0x67, 0x54, 0xB8, 0xE6, 0x2B, 0x9D, 0x15,
    0x19, 0xEA, 0xA7, 0x2A, 0xE2, 0xF4, 0x49, 0xB9, 0xA1, 0xB2, 0xA8, 0xA5, 0x95, 0xD1, 0xD4, 0x60,
    0x00, 0x60, 0x24, 0xB8, 0x23, 0x01, 0x76, 0x2B, 0x10, 0x08, 0xC1, 0x4C, 0x3C, 0x00, 0x00, 0x75,
    0x8A, 0x72, 0x5A, 0x2B, 0xAB, 0x21, 0x6B, 0x5C, 0x96, 0x8A, 0x69, 0xD9, 0x5A, 0xC7, 0x2D, 0xA2,
    0x32, 0x97, 0x36, 0x72, 0xB9, 0x42, 0x2E, 0x0A, 0x9B, 0xBD, 0xAB, 0xB5, 0x72, 0x88, 0xC2, 0x6A,
    0x0A, 0xA3, 0x9C, 0xA2, 0x4E, 0xC4, 0x71, 0xA9, 0x2B, 0xAA, 0x54, 0x54, 0xA2, 0x31, 0xB6, 0x6A,
    0x84, 0xFC, 0x79, 0x79, 0x49, 0xB0, 0x09, 0x10, 0xD7, 0x56, 0x4A, 0x0C, 0xA9, 0x0B, 0x2E, 0xDD,
    0x98, 0xB2, 0x0B, 0x68, 0x7B, 0x19, 0x76, 0x6D, 0xA5, 0xCD, 0x5C, 0x5B, 0xC8, 0x5D, 0x65, 0x7A,
    0x25, 0x98, 0x6E, 0xD3, 0xB9, 0x66, 0x88, 0xD6, 0xCB, 0x13, 0xF9, 0x99, 0xA2, 0x51, 0xF6, 0x64,
    0xF4, 0xF0, 0x85, 0xB2, 0x78, 0x63, 0x29, 0xA7, 0xA1, 0x6C, 0x1A, 0x16, 0xEA, 0x89, 0xEB, 0xD7,
    0x2A, 0x8D, 0xDB, 0x63, 0x2C, 0xAE, 0x4E, 0xA8, 0x54, 0x6E, 0xCD, 0x01, 0xFC, 0x92, 0x35, 0x4A,
    0xA3, 0xE2, 0xB8, 0xC5, 0xED, 0xB6, 0xAD, 0x13, 0x9C, 0x94, 0x37, 0x7E, 0x2C, 0x5C, 0xDE, 0xA9,
    0xCD, 0x4F, 0x4B, 0x95, 0x94, 0x9D, 0x45, 0x9A, 0xCF, 0x09, 0x60, 0xCD, 0x23, 0xEB, 0x24, 0xF1,
    0xD8, 0xAF, 0x08, 0xDE, 0x72, 0xB2, 0x86, 0x0D, 0xBA, 0x26, 0xB3, 0xAA, 0xD9, 0x7C, 0x34, 0x47,
    0x0B, 0x0B, 0x3F, 0xB5, 0x92, 0x78, 0xCA, 0x31, 0xB7, 0x69, 0x5B, 0x5D, 0x3C, 0xC6, 0xBA, 0xCD,
    0xD5, 0x4A, 0x11, 0xBB, 0x63, 0xAB, 0x88, 0xD6, 0x7A, 0xCF, 0x4A, 0x9C, 0x98, 0xD6, 0x70, 0xBE,
    0xD6, 0xB9, 0xDA, 0xCB, 0xD1, 0x0A, 0x94, 0x76, 0xB5, 0x20, 0x0D, 0x2A, 0x15, 0xA0, 0x38, 0x0F,
    0xC6, 0x19, 0xA0, 0x3C, 0x06, 0x80, 0x90, 0x0A, 0x01, 0x00, 0x6A, 0x11, 0x98, 0x06, 0x98, 0x4E,
    0x80, 0x2A, 0xA8, 0x70, 0x00, 0x02, 0x5F, 0x36, 0xBB, 0x3A, 0xB2, 0x8F, 0xC0, 0x00, 0x00, 0xA5,
    0x52, 0x70, 0xBA, 0xC8, 0x2F, 0x69, 0x5C, 0xDE, 0x0C, 0xD8, 0x12, 0x6B, 0x54, 0x97, 0xEC, 0x22,
    0xD5, 0x9B, 0x73, 0x66, 0x5B, 0x48, 0x88, 0xE3, 0xAA, 0xCD, 0x6E, 0x92, 0x1E, 0xB6, 0x6D, 0x33,
    0x53, 0xA4, 0xC8, 0xB5, 0x21, 0xBD, 0xDA, 0xA9, 0x52, 0x59, 0x78, 0x2E, 0xDB, 0x2B, 0x57, 0x13,
    0x2F, 0x9B, 0x25, 0xDE, 0xD7, 0x41, 0x2B, 0x8D, 0x21, 0x37, 0xAE, 0x15, 0xC2, 0x78, 0x43, 0x26,
    0xAA, 0x2D, 0x5C, 0x2E, 0xAE, 0xCD, 0x8C, 0x77, 0x86, 0x84, 0xE0, 0x80, 0x2A, 0x25, 0x08, 0x04,
    0x1B, 0x0A, 0x80, 0x20, 0xE7, 0x52, 0x00, 0xF9, 0xC2, 0x07, 0x80, 0x00, 0x00, 0x56, 0x28, 0x52,
    0x4D, 0x2B, 0xBB, 0x5D, 0x64, 0x1A, 0x34, 0xAE, 0x8E, 0x48, 0x57, 0x16, 0x8D, 0xAB, 0x0B, 0x77,
    0x15, 0xBD, 0xB1, 0xEC, 0x87, 0xB3, 0xDD, 0x5A, 0xA1, 0xCE, 0xAE, 0x65, 0x6B, 0x1E, 0xE8, 0xDD,
    0x5B, 0xAF, 0x16, 0xBA, 0x0F, 0x4A, 0xD6, 0x94, 0x85, 0xF3, 0x6C, 0xB2, 0x0C, 0xA9, 0x0C, 0x07,
    0x13, 0x2A, 0x90, 0x16, 0x02, 0xC0, 0x20, 0x01, 0x84, 0x78, 0x80, 0x0B, 0xA5, 0xC0, 0x04, 0x02,
    0x57, 0x2C, 0xA0, 0x38, 0x95, 0x7F, 0xD5, 0x12, 0x5C, 0xAA, 0xFC, 0x46, 0xB9, 0x3C, 0xA8, 0xEA,
    0xCD, 0x59, 0x5E, 0x4F, 0x2B, 0x34, 0x1B, 0xE4, 0x6F, 0xB3, 0xEE, 0x8D, 0xD5, 0xCB, 0x25, 0x37,
    0x84, 0x57, 0xCD, 0xEE, 0xDB, 0x5E, 0xC8, 0x2B, 0xAA, 0xCD, 0x6D, 0xF8, 0x37, 0x06, 0xE2, 0xCC,
    0x5E, 0xF2, 0x75, 0x39, 0x72, 0xAF, 0x23, 0x64, 0x95, 0x9D, 0x5A, 0x4B, 0x4F, 0xC0, 0x00, 0x00,
    0x75, 0xB0, 0x59, 0x33, 0xF9, 0xC7, 0x25, 0x74, 0x1A, 0x0D, 0x16, 0xD6, 0x4A, 0x5D, 0x28, 0x02,
    0x3D, 0xB5, 0x5A, 0xB7, 0x56, 0xD9, 0xDB, 0x4B, 0x2A, 0xF9, 0x64, 0x66, 0xF1, 0x66, 0xAD, 0x55,
    0x68, 0x53, 0x22, 0xB6, 0x8F, 0x74, 0x6E, 0x8C, 0x51, 0x88, 0x4A, 0x1B, 0xC6, 0x8F, 0x35, 0x6E,
    0xAC, 0x59, 0xB9, 0x43, 0x03, 0x3E, 0x8B, 0x37, 0x5A, 0xFC, 0xCE, 0x54, 0x1D, 0xF5, 0x76, 0xC2,
    0xB9, 0x72, 0x37, 0x7C, 0xD3, 0xB0, 0x63, 0x83, 0x1C, 0xEE, 0x48, 0xDC, 0x19, 0x8B, 0x5E, 0x38,
    0x89, 0x72, 0xC6, 0x62, 0x98, 0x24, 0x32, 0x4D, 0xAD, 0x58, 0x9D, 0xA9, 0x72, 0xB2, 0xEB, 0x65,
    0xC9, 0x6B, 0xB4, 0x43, 0xC8, 0x95, 0x6B, 0xA4, 0xC4, 0x6B, 0x11, 0x64, 0x5B, 0x0D, 0x41, 0x2B,
    0x43, 0x4C, 0x3C, 0x45, 0x66, 0x6A, 0x76, 0x23, 0x32, 0x99, 0x51, 0xDA, 0x77, 0x2D, 0x14, 0xB6,
    0x54, 0x96, 0x9C, 0x53, 0xB6, 0x2E, 0x15, 0x31, 0x86, 0xD5, 0x0D, 0x52, 0xC4, 0xF6, 0xA4, 0x99,
    0xAB, 0xEA, 0xFB, 0x37, 0x66, 0xE4, 0xD4, 0xBC, 0xA1, 0x33, 0xDF, 0x7B, 0x3F, 0x68, 0xE5, 0x52,
    0xC4, 0xA2, 0x42, 0x4D, 0xFB, 0x6F, 0x6E, 0xDD, 0xF6, 0xBD, 0xD4, 0x65, 0x5F, 0x67, 0x65, 0x70,
    0x9E, 0x0F, 0xBD, 0x57, 0xB5, 0xEA, 0x69, 0x4E, 0xE9, 0x55, 0xD0, 0xAB, 0x91, 0x1A, 0x38, 0xBC,
    0x85, 0xD0, 0x70, 0x3C, 0xDB, 0x45, 0x27, 0x65, 0x2A, 0x7B, 0x42, 0x2A, 0x9A, 0x27, 0xAA, 0xAA,
    0xA5, 0x42, 0xB8, 0xB1, 0xF2, 0x8B, 0x20, 0xD5, 0x7E, 0xE1, 0x57, 0x9B, 0x33, 0x66, 0x6C, 0xD1,
    0x8A, 0xAD, 0x05, 0x22, 0xDA, 0xC9, 0xEA, 0xBD, 0x52, 0x14, 0x1A, 0x3C, 0xBA, 0xB3, 0x36, 0x75,
    0x05, 0x8F, 0x2E, 0x6E, 0xCD, 0xF4, 0xBE, 0xF4, 0x54, 0x08, 0x9E, 0xE5, 0xAF, 0xB5, 0x11, 0x0A,
    0x23, 0x46, 0x8C, 0x22, 0xF4, 0x24, 0x88, 0xD1, 0x1B, 0x02, 0xA9, 0xEA, 0x25, 0xDC, 0x87, 0xC1,
    0xD8, 0x4A, 0x4C, 0xA8, 0x8F, 0xA2, 0x7E, 0x0F, 0xC7, 0xC0, 0x00, 0x00, 0x46, 0x07, 0x5A, 0xE6,
    0xBB, 0xC8, 0x91, 0x71, 0x98, 0xBF, 0x0B, 0x89, 0x19, 0x5B, 0x27, 0x86, 0xCC, 0xC2, 0x93, 0x16,
    0x52, 0x53, 0x0E, 0x6F, 0xAC, 0xED, 0x5D, 0xAB, 0x93, 0xCE, 0x72, 0xEA, 0x73, 0xA4, 0xE4, 0xD4,
    0xB3, 0xAA, 0xAB, 0x69, 0x63, 0x53, 0x2A, 0x9C, 0x1C, 0x52, 0xD6, 0xE7, 0x9A, 0x37, 0x56, 0x2B,
    0x83, 0xE1, 0x19, 0xD7, 0x66, 0xAC, 0x0E, 0xCA, 0x58, 0x79, 0x91, 0x12, 0xE8, 0xB2, 0x19, 0xD1,
    0xDC, 0x88, 0x02, 0x2B, 0xA2, 0x68, 0x1A, 0xAA, 0x35, 0x77, 0x54, 0x6D, 0x2F, 0x2D, 0x94, 0xE5,
    0x91, 0x8F, 0x5B, 0xAB, 0x61, 0x29, 0x64, 0x74, 0xD6, 0x5A, 0xF7, 0x49, 0x9D, 0x99, 0xB3, 0xAE,
    0xBD, 0x74, 0x56, 0x66, 0xB8, 0xDA, 0xAF, 0x63, 0x25, 0x19, 0x62, 0x64, 0xAB, 0xE5, 0x0B, 0x63,
    0x25, 0x72, 0x3E, 0xF1, 0x00, 0xB7, 0xC2, 0x0C, 0x0F, 0x75, 0x6F, 0x68, 0x7C, 0xCC, 0xA4, 0xA1,
    0x5B, 0xDA, 0x1E, 0xF1, 0x2C, 0xBA, 0x57, 0x07, 0x06, 0x34, 0xDA, 0x6F, 0x95, 0xCE, 0x6B, 0x0A,
    0xB7, 0x5C, 0xE5, 0x73, 0xAA, 0xCA, 0x36, 0x57, 0x79, 0x5C, 0xEE, 0xB2, 0x71, 0x92, 0x4E, 0x59,
    0x3B, 0xAC, 0x23, 0xEC, 0x93, 0x36, 0x4A, 0xCA, 0x74, 0x95, 0x4F, 0x22, 0x20, 0x0C, 0x03, 0x89,
    0x8A, 0x60, 0x1E, 0x94, 0x42, 0xC0, 0x48, 0x09, 0x00, 0x10, 0x06, 0x20, 0xAA, 0x40, 0x39, 0x07,
    0x41, 0x81, 0xE0, 0x00, 0x00, 0x66, 0x2A, 0x61, 0x66, 0xBC, 0x24, 0xD9, 0x82, 0x58, 0x5D, 0xCA,
    0xC9, 0xB8, 0x60, 0xF7, 0x07, 0xD4, 0x39, 0x53, 0x97, 0x4D, 0x72, 0xED, 0x2B, 0x2D, 0xE5, 0xB3,
    0x6C, 0xD3, 0xBA, 0xC9, 0xF9, 0x64, 0x5F, 0x15, 0x0A, 0xF2, 0x6E, 0x54, 0xF8, 0xCC, 0x42, 0xC4,
    0x9B, 0x94, 0x3E, 0x72, 0x75, 0x11, 0x54, 0xD4, 0xEF, 0x8B, 0xB5, 0x3E, 0x33, 0x35, 0x3C, 0x5E,
    0xCB, 0x2F, 0xCC, 0xBD, 0x4F, 0x42, 0xBA, 0xCD, 0x43, 0x42, 0x40, 0x75, 0x06, 0x70, 0x03, 0xF9,
    0x62, 0x80, 0x1E, 0xEC, 0x90, 0x10, 0x08, 0xA4, 0xE2, 0x40, 0x62, 0xB4, 0xB4, 0x02, 0xD4, 0xA7,
    0x70, 0x13, 0xA4, 0xBD, 0x22, 0x3E, 0x62, 0x21, 0x9D, 0xB9, 0x89, 0x55, 0x88, 0x5A, 0xC0, 0xB6,
    0xDA, 0x45, 0x5E, 0x9A, 0x2C, 0x74, 0x96, 0x8D, 0x94, 0x97, 0xA9, 0x0E, 0xD5, 0xA3, 0x6B, 0xB6,
    0x16, 0xCA, 0xC5, 0x79, 0x31, 0x53, 0x67, 0x15, 0x2E, 0xB6, 0x4A, 0x5C, 0xDA, 0x43, 0xBB, 0x3D,
    0x2E, 0x97, 0xB6, 0x52, 0xB7, 0x4D, 0x18, 0x96, 0x0E, 0x73, 0xCC, 0xE4, 0x30, 0xA5, 0x84, 0x14,
    0xF1, 0x96, 0xF0, 0x97, 0x61, 0x28, 0xAA, 0x33, 0x5C, 0x28, 0xC0, 0x2D, 0xA9, 0x5E, 0x85, 0xCE,
    0x58, 0x5C, 0x53, 0x56, 0xA7, 0x6C, 0xED, 0xD5, 0x70, 0x9D, 0x53, 0x2D, 0x37, 0x3B, 0x57, 0x6A,
    0xE5, 0x53, 0xBD, 0x52, 0x24, 0x39, 0x39, 0x45, 0x70, 0xF2, 0x2C, 0xF2, 0x3D, 0xD1, 0xAA, 0x2D,
    0x43, 0x34, 0x9B, 0x69, 0xEA, 0xA9, 0x38, 0x56, 0x66, 0xA0, 0x8F, 0xA9, 0x76, 0xB0, 0x0A, 0x29,
    0x52, 0x20, 0x52, 0x8B, 0xD5, 0x45, 0x8D, 0x6D, 0xB9, 0xB2, 0x97, 0xBC, 0xE7, 0x37, 0xB0, 0xDB,
    0x9D, 0xEF, 0xC1, 0xD8, 0xD5, 0x60, 0xED, 0xB4, 0xE4, 0x66, 0x58, 0x9A, 0x18, 0xBB, 0xA9, 0x99,
    0x9E, 0x2E, 0xC8, 0x4E, 0xC5, 0xC0, 0x10, 0x09, 0x6A, 0xC7, 0x80, 0x75, 0x8D, 0x58, 0x7C, 0xC3,
    0xA8, 0xA9, 0x64, 0x1A, 0x18, 0xCF, 0x0E, 0xBB, 0x56, 0xEA, 0xDC, 0xB2, 0xD2, 0x73, 0xB5, 0x76,
    0xAE, 0xD5, 0xDA, 0xBB, 0x5E, 0x2C, 0x6E, 0x25, 0x5D, 0xE0, 0xC9, 0x3B, 0x80, 0x00, 0x0C, 0x03,
    0x09, 0x0E, 0xE0, 0x30, 0x88, 0x82, 0x00, 0xEA, 0x28, 0xF8, 0x95, 0xB2, 0x59, 0xB3, 0x39, 0xDB,
    0x6B, 0x6F, 0x2B, 0x93, 0xEE, 0x55, 0x9E, 0xA9, 0xDA, 0xFB, 0x5F, 0x6B, 0xED, 0x9D, 0xB7, 0x17,
    0xB9, 0xFB, 0x66, 0xCF, 0x5B, 0xBE, 0x12, 0xC1, 0x39, 0xA8, 0x47, 0x69, 0x1C, 0x70, 0x96, 0x0A,
    0xA6, 0xC1, 0x3B, 0xC9, 0x1D, 0x8A, 0x61, 0xB8, 0x30, 0xCE, 0x37, 0x62, 0x97, 0x5E, 0xB3, 0x1A,
    0x69, 0x98, 0xAD, 0x93, 0x2A, 0x86, 0xEC, 0x56, 0x0F, 0x7C, 0x4B, 0xA1, 0x26, 0xBC, 0x00, 0x00,
    0x95, 0xB0, 0x70, 0x54, 0xBB, 0x48, 0xE5, 0x6B, 0xDA, 0x17, 0x0E, 0xF1, 0xDD, 0x59, 0x35, 0xB4,
    0xB3, 0x25, 0xAF, 0x95, 0x45, 0x55, 0x52, 0xA7, 0xA3, 0xED, 0x1C, 0x99, 0xEA, 0xCB, 0x65, 0x4B,
    0x55, 0x26, 0x53, 0xEA, 0x1D, 0x0A, 0x67, 0x19, 0x9D, 0x39, 0x65, 0x27, 0x0E, 0xD2, 0xD7, 0xD4,
    0xCA, 0xC7, 0x19, 0x57, 0x86, 0x76, 0xBA, 0xE6, 0x5C, 0xDE, 0x5C, 0xED, 0xD7, 0xBA, 0xF7, 0x5E,
    0xFA, 0xDF, 0x2C, 0x1B, 0xB2, 0x59, 0x94, 0xB5, 0xBF, 0x17, 0x64, 0xCB, 0x22, 0x4C, 0xAB, 0xD5,
    0xD9, 0x3A, 0xEC, 0x4D, 0x67, 0x35, 0x66, 0x51, 0xD4, 0x23, 0x22, 0xB7, 0x7C, 0xE5, 0x4E, 0x5C,
    0xFB, 0xA9, 0xCF, 0x7B, 0x56, 0xEA, 0xC5, 0x4D, 0x3C, 0xFC, 0x28, 0xBF, 0xF3, 0x55, 0xEB, 0xBD,
    0x92, 0xB9, 0x4B, 0xCF, 0x24, 0x2B, 0xB4, 0x6F, 0x7D, 0xEA, 0xBC, 0xD1, 0xEC, 0x45, 0x1B, 0x1B,
    0x30, 0x3B, 0xEB, 0x69, 0x06, 0x16, 0xAC, 0x10, 0xE9, 0xDB, 0x14, 0x49, 0xA2, 0xF4, 0xB1, 0xEA,
    0x8E, 0x13, 0x6A, 0xBA, 0x72, 0x33, 0x54, 0x77, 0x27, 0x80, 0xE5, 0x51, 0x6C, 0x7C, 0x93, 0xCD,
    0x79, 0x54, 0x5B, 0x1F, 0x06, 0xF3, 0x4E, 0x55, 0x17, 0x47, 0xC9, 0xB4, 0xD3, 0x95, 0xC5, 0xF1,
    0xEC, 0x8B, 0x74, 0xE5, 0x71, 0x74, 0x7B, 0x22, 0x5B, 0x39, 0x64, 0x5B, 0x1E, 0xCA, 0x96, 0xCB,
    0x58, 0xF7, 0xD6, 0x9B, 0x36, 0xB2, 0xF6, 0x62, 0xC7, 0x3E, 0xB0, 0x99, 0x75, 0x92, 0xB1, 0xCF,
    0x9B, 0x35, 0x3D, 0x1A, 0xAD, 0x54, 0xE1, 0x51, 0x1E, 0x54, 0xCB, 0x60, 0xC6, 0x54, 0x46, 0x52,
    0x32, 0xDC, 0xB6, 0x1D, 0x85, 0x93, 0x46, 0x02, 0x66, 0x67, 0x20, 0x0F, 0x44, 0x20, 0x80, 0x5B,
    0xA1, 0x43, 0xC0, 0xD4, 0xAB, 0xAF, 0x43, 0x2B, 0xD7, 0x79, 0x53, 0x99, 0xD6, 0xCA, 0xBA, 0x5E,
    0x54, 0xCA, 0x66, 0x29, 0xCC, 0xB3, 0xB5, 0x76, 0xAE, 0xD5, 0xDB, 0x2D, 0x72, 0xDF, 0x38, 0xA6,
    0xD2, 0x16, 0x01, 0x56, 0xCC, 0x3C, 0x06, 0x80, 0xF0, 0x1C, 0x04, 0xDB, 0x30, 0xC0, 0x27, 0x19,
    0x6F, 0xE5, 0x6C, 0x7E, 0x63, 0x9B, 0xE9, 0x79, 0x43, 0x25, 0xB4, 0xA5, 0x72, 0x5E, 0xD5, 0xDA,
    0xB7, 0x56, 0xEA, 0xDD, 0x79, 0xB3, 0x16, 0xAE, 0xF2, 0xEC, 0xF4, 0xDD, 0xBD, 0xD4, 0xB9, 0x76,
    0x89, 0x67, 0xA7, 0x1B, 0x2F, 0x4B, 0x92, 0x8D, 0xB1, 0xD8, 0xDB, 0x99, 0x72, 0x5C, 0x96, 0x8D,
    0x8E, 0x35, 0x5C, 0x78, 0x2D, 0x42, 0xE3, 0x6E, 0x17, 0x40, 0xEE, 0xAC, 0xEB, 0x63, 0x75, 0xD0,
    0x94, 0x30, 0x8C, 0xBA, 0x44, 0x02, 0xEA, 0x47, 0xE0, 0x00, 0x00, 0xD4, 0xAB, 0x76, 0x74, 0x03,
    0xCB, 0x71, 0x42, 0x65, 0x9E, 0x47, 0x92, 0xCC, 0x50, 0xA6, 0xE7, 0x92, 0xAC, 0x9A, 0xF3, 0xD6,
    0x79, 0xCF, 0x4A, 0x22, 0xE0, 0x98, 0x74, 0x8F, 0x46, 0xA9, 0xD5, 0x6A, 0xE6, 0xA6, 0x86, 0xA2,
    0x76, 0x6E, 0xCD, 0x5B, 0x16, 0xC5, 0x2B, 0x9D, 0xB7, 0x76, 0xE2, 0xE8, 0x4A, 0x19, 0x29, 0xFB,
    0x94, 0xBE, 0x36, 0x28, 0x59, 0xBC, 0xAC, 0xAF, 0x8C, 0x42, 0x62, 0xE5, 0x99, 0x1B, 0xDD, 0x7B,
    0x9A, 0x71, 0x72, 0xCC, 0xC6, 0x5E, 0xE6, 0x94, 0x5D, 0x33, 0x13, 0xC0, 0xB5, 0x48, 0x9D, 0xF8,
    0x34, 0x66, 0xED, 0x51, 0xF3, 0x9A, 0x0F, 0x76, 0x3C, 0x54, 0x89, 0xDF, 0x8A, 0xC5, 0xAB, 0x15,
    0x26, 0xF5, 0xA4, 0xAF, 0x74, 0xD5, 0x6A, 0xC4, 0xD3, 0x2A, 0xCD, 0xB9, 0x62, 0xF2, 0xF3, 0x28,
    0x96, 0xDD, 0x5C, 0xCE, 0x25, 0x4A, 0x2C, 0xCF, 0x17, 0x33, 0x89, 0x36, 0x8B, 0x34, 0xB5, 0xCD,
    0xD9, 0x54, 0xB9, 0xDA, 0x2D, 0x6B, 0xB2, 0xE8, 0xB8, 0x2F, 0x9A, 0x5A, 0xEC, 0x22, 0xBC, 0xAB,
    0xCA, 0x56, 0x3E, 0x0E, 0x87, 0x0E, 0xAC, 0x85, 0xB3, 0x95, 0x58, 0x92, 0xA5, 0x44, 0x02, 0x98,
    0xAD, 0xE0, 0x00, 0x00, 0x94, 0xA8, 0x8F, 0xDA, 0x19, 0x6A, 0xEB, 0x36, 0x27, 0x4D, 0x71, 0xDD,
    0x0B, 0x69, 0x8A, 0x13, 0x85, 0xB9, 0x35, 0xB2, 0xD2, 0xA5, 0x68, 0x75, 0x99, 0xAE, 0x50, 0xB1,
    0x36, 0x33, 0x78, 0x89, 0x6E, 0x2A, 0x74, 0xDD, 0x1D, 0xDD, 0xCF, 0x8A, 0xDD, 0x91, 0xA6, 0x66,
    0xD6, 0x5A, 0xB7, 0x60, 0x39, 0x5E, 0xAD, 0x54, 0xB5, 0xDA, 0x0E, 0x56, 0xAB, 0x4D, 0x2E, 0x76,
    0x82, 0x29, 0xD2, 0xF7, 0x6B, 0x9B, 0x65, 0x46, 0xE5, 0x77, 0xC2, 0xF6, 0xE0, 0x36, 0x95, 0xE4,
    0x2E, 0xC0, 0xF4, 0x77, 0xA5, 0x84, 0xE7, 0x80, 0x00, 0x00, 0xD4, 0xD1, 0x7B, 0xEC, 0x1C, 0x4D,
    0x3B, 0x57, 0x68, 0xEC, 0xFC, 0x9E, 0x2C, 0x6D, 0x54, 0x3B, 0x55, 0xEB, 0x95, 0xAE, 0x7B, 0x61,
    0xB4, 0xD8, 0xB3, 0x5F, 0x2D, 0x83, 0xD7, 0x11, 0x66, 0xD5, 0x6B, 0x99, 0x44, 0x95, 0xB6, 0xB2,
    0x52, 0xF5, 0xD8, 0xAE, 0xA1, 0x6D, 0xB3, 0xC2, 0x18, 0x37, 0x21, 0x72, 0xD1, 0x6C, 0x75, 0xEF,
    0xD8, 0xD2, 0xAB, 0xCC, 0x21, 0x73, 0xE8, 0x8A, 0xEE, 0xB2, 0x36, 0x5F, 0x0B, 0x3B, 0x00, 0xA2,
    0x97, 0xC0, 0x00, 0x00, 0xE5, 0x53, 0x75, 0xDB, 0x32, 0x69, 0x39, 0x53, 0xDF, 0x96, 0xCB, 0x15,
    0xDE, 0xD5, 0xDA, 0xB5, 0x5B, 0x21, 0xB8, 0x89, 0x15, 0xDB, 0x56, 0xD6, 0x67, 0x9A, 0xB6, 0x71,
    0xD6, 0xA2, 0xF6, 0xE9, 0x70, 0xD3, 0x00, 0x00, 0x50, 0x13, 0x5B, 0xC2, 0x00, 0xE2, 0xDD, 0x8C,
    0x03, 0xD9, 0x0C, 0x20, 0x18, 0xE8, 0x40, 0xF0, 0x00, 0x00, 0xE5, 0x0B, 0x75, 0xF4, 0x0A, 0x5D,
    0xB9, 0x3A, 0xDB, 0x5F, 0x24, 0x73, 0x5C, 0x4E, 0x98, 0x5F, 0xA8, 0xA4, 0xCE, 0xD3, 0xA2, 0x75,
    0xE6, 0x2D, 0x74, 0xB5, 0x08, 0x8D, 0x72, 0x83, 0xBC, 0xED, 0x5C, 0x58, 0xEA, 0xA9, 0x0E, 0x2B,
    0x59, 0x36, 0x32, 0xA1, 0xB3, 0xB2, 0xF5, 0x5A, 0xA5, 0xBE, 0x59, 0xD9, 0xDD, 0xD8, 0xB1, 0x96,
    0x66, 0x97, 0x3B, 0xB5, 0xAD, 0x65, 0x21, 0x1B, 0x15, 0x6D, 0x2B, 0x97, 0x74, 0x6A, 0xC4, 0x7E,
    0x42, 0xF5, 0xDD, 0x13, 0x29, 0x1E, 0x6E, 0xBD, 0x99, 0x34, 0x9A, 0x37, 0xD3, 0xAF, 0x4D, 0x19,
    0x26, 0x65, 0x27, 0xE0, 0x00, 0x00, 0x06, 0x00, 0xD7, 0x32, 0xA0, 0x07, 0x35, 0x07, 0x92, 0x4E,
    0x28, 0x8B, 0x33, 0x9D, 0xE4, 0xB9, 0xA2, 0x99, 0x3C, 0xF9, 0x77, 0x36, 0xE8, 0xCD, 0x76, 0xB2,
    0xF1, 0x33, 0x3A, 0xAE, 0xE4, 0xAE, 0xA3, 0x05, 0x5F, 0x26, 0xA8, 0xEB, 0xDC, 0x82, 0xBB, 0x98,
    0x6E, 0x32, 0xF8, 0xA8, 0x22, 0xEE, 0x11, 0x8C, 0xC1, 0xEA, 0x26, 0xB8, 0x66, 0xDF, 0x80, 0x04,
    0x80, 0x90, 0x12, 0x05, 0xA4, 0x5D, 0x6A, 0xDC, 0x9E, 0x3B, 0xC9, 0xD9, 0x4B, 0x98, 0x44, 0xD2,
    0xF2, 0x86, 0xDE, 0xA2, 0x58, 0xEC, 0xBC, 0xA9, 0xD9, 0x87, 0xA7, 0x2B, 0x1E, 0x2C, 0x77, 0x16,
    0x29, 0x13, 0x37, 0x6B, 0x9F, 0xC2, 0xD6, 0x4B, 0x89, 0xD2, 0xF7, 0xE8, 0x6E, 0x52, 0x64, 0x12,
    0xBD, 0xF6, 0x35, 0x75, 0xB5, 0x48, 0x00, 0x38, 0x0A, 0xAD, 0xDD, 0x00, 0x45, 0xAE, 0xA1, 0xE0,
    0x50, 0x08, 0x9C, 0x49, 0xC0, 0x68, 0x16, 0x8D, 0x92, 0xD7, 0x8A, 0x1B, 0xA6, 0x25, 0x74, 0x75,
    0xDB, 0x06, 0x6D, 0xA9, 0x9D, 0x4B, 0x56, 0xD2, 0x7F, 0x6A, 0x68, 0x4E, 0xD8, 0xB9, 0x1E, 0xF6,
    0x9D, 0xFA, 0x45, 0x86, 0x67, 0xE0, 0x00, 0x03, 0x28, 0x6B, 0x86, 0xE0, 0xF9, 0x43, 0x4B, 0xA1,
    0x98, 0x45, 0x91, 0x93, 0xE6, 0xFC, 0xE1, 0x4C, 0x5D, 0x86, 0x56, 0xB2, 0xB6, 0xC3, 0x17, 0xF0,
    0xA2, 0x1C, 0xF4, 0x32, 0xCA, 0x19, 0x25, 0x98, 0x57, 0x93, 0xB3, 0x87, 0x0C, 0xDD, 0x9A, 0x47,
    0xE0, 0x50, 0x0E, 0x63, 0xB1, 0x40, 0x38, 0x16, 0x91, 0x74, 0xBB, 0x82, 0x5A, 0xDE, 0xA6, 0x64,
    0xB2, 0x61, 0x8F, 0x59, 0x89, 0xD9, 0x5D, 0x77, 0x92, 0xD6, 0x5A, 0x86, 0xDA, 0xD6, 0x30, 0x36,
    0x99, 0xAE, 0x96, 0x37, 0x10, 0x6F, 0xE6, 0xF7, 0x75, 0xAE, 0xD1, 0x2D, 0xCA, 0x4C, 0x8D, 0x72,
    0x62, 0xA6, 0xD1, 0x49, 0xC1, 0x3F, 0x05, 0xC1, 0xBA, 0xC3, 0x8C, 0x0C, 0x07, 0xA6, 0xAE, 0xB0,
    0x1A, 0x03, 0x00, 0xFD, 0x61, 0xDA, 0x02, 0x00, 0xFD, 0x59, 0xCC, 0x07, 0x14, 0xAF, 0xE0, 0x00,
    0x00, 0x60, 0x10, 0x7B, 0x22, 0xC0, 0xC4, 0x73, 0x73, 0x29, 0xC4, 0xDA, 0xF1, 0x2C, 0x21, 0x08,
    0x9A, 0xF3, 0x5D, 0xCB, 0x89, 0x5D, 0x28, 0x45, 0xD3, 0x7F, 0xE6, 0x7B, 0x50, 0xEA, 0x3A, 0x2D,
    0x9B, 0xFB, 0x15, 0x42, 0xEE, 0x8B, 0x08, 0xFF, 0xC5, 0x51, 0x9C, 0x29, 0x3C, 0x5D, 0x71, 0x65,
    0x23, 0x08, 0x6C, 0xDF, 0x3C, 0xDB, 0xAB, 0x67, 0x39, 0x53, 0x65, 0xF6, 0x6E, 0xEC, 0xDF, 0x6B,
    0xE0, 0xF7, 0x65, 0x87, 0xD9, 0xB3, 0x06, 0x39, 0x95, 0x61, 0xAD, 0x46, 0xBC, 0x6D, 0xB8, 0x88,
    0x85, 0x19, 0xAF, 0x22, 0xEA, 0x25, 0xA5, 0x46, 0xCB, 0xE6, 0x86, 0x45, 0x66, 0x72, 0x90, 0x06,
    0x26, 0x9B, 0xC0, 0x00, 0x00, 0x60, 0x13, 0xAA, 0x2A, 0x80, 0x92, 0x96, 0x29, 0x23, 0x25, 0x38,
    0xC7, 0x51, 0xCB, 0xC9, 0x98, 0xF5, 0x24, 0x27, 0x16, 0x87, 0xB2, 0x3D, 0x49, 0x1A, 0x44, 0xA9,
    0xE4, 0x8F, 0x52, 0xCA, 0xAF, 0x08, 0x99, 0x64, 0xCD, 0x16, 0xAE, 0x94, 0x48, 0x47, 0xCA, 0xDD,
    0x2E, 0x8C, 0x4A, 0x26, 0xF2, 0x1B, 0x5B, 0xE5, 0x7C, 0x5C, 0x6F, 0x35, 0x34, 0xC8, 0x5F, 0x05,
    0x9C, 0x5D, 0xCC, 0x11, 0xD7, 0xB1, 0x49, 0x9D, 0x0E, 0x85, 0xF0, 0x00, 0x00, 0x50, 0x16, 0x8A,
    0xB2, 0x00, 0x92, 0x5E, 0xE9, 0x12, 0x9B, 0x96, 0xA8, 0xEF, 0x2D, 0x49, 0x08, 0x45, 0x39, 0xD5,
    0x8F, 0x72, 0x6A, 0x48, 0x52, 0x25, 0x0F, 0x2B, 0x9B, 0x93, 0x12, 0xCA, 0x8A, 0xCA, 0xB9, 0x5D,
    0xC5, 0x13, 0xA2, 0x32, 0xB5, 0xD9, 0x31, 0x5D, 0x69, 0x04, 0x6C, 0xFE, 0x5C, 0xDB, 0x5B, 0xA5,
    0x7C, 0xA4, 0x2E, 0xD3, 0x95, 0xBA, 0xDF, 0x5B, 0xE5, 0x7C, 0x24, 0x6E, 0xAF, 0x99, 0xD9, 0x5E,
    0xE9, 0xA3, 0x24, 0x55, 0x72, 0x97, 0xC9, 0x50, 0x8C, 0xB1, 0x72, 0x96, 0x3F, 0x94, 0xB2, 0x12,
    0x29, 0x58, 0x06, 0x90, 0xCC, 0x60, 0x3A, 0x65, 0x47, 0x01, 0xD6, 0x32, 0x20, 0x0B, 0x21, 0x97,
    0xC0, 0x00, 0x00, 0x70, 0x13, 0x81, 0x2B, 0x80, 0x9A, 0xD9, 0xF1, 0x0D, 0x12, 0x96, 0xEA, 0xCE,
    0xDC, 0x4B, 0x24, 0xB4, 0xBC, 0x24, 0xB3, 0x52, 0xBD, 0xCC, 0xF1, 0x0F, 0xE3, 0xDC, 0xD6, 0x9E,
    0xB2, 0x61, 0x39, 0x7F, 0x26, 0x6A, 0xC5, 0x55, 0x9A, 0x91, 0xBC, 0x7D, 0x33, 0x65, 0xED, 0xA5,
    0xF3, 0xB9, 0xA1, 0xA5, 0x7B, 0x67, 0x7C, 0xAF, 0x94, 0x8D, 0x19, 0xA3, 0xC7, 0x4B, 0xE0, 0xC8,
    0x08, 0x6A, 0xB8, 0xD3, 0x0F, 0xAC, 0xE1, 0x8A, 0x75, 0xAE, 0x03, 0x20, 0x35, 0x60, 0x1F, 0x62,
    0xB3, 0x00, 0xFC, 0x58, 0x98, 0x07, 0xDE, 0xD0, 0x80, 0x3E, 0xE5, 0x6F, 0x50, 0x0D, 0x5A, 0xD1,
    0x00, 0x5A, 0xE2, 0xC4, 0x02, 0x99, 0x94, 0x89, 0x5E, 0x97, 0xCB, 0x48, 0x31, 0x52, 0x44, 0xBE,
    0xFD, 0x41, 0x6D, 0x98, 0x95, 0x8B, 0xBF, 0x61, 0x49, 0x66, 0xA7, 0x82, 0x6B, 0xD5, 0x1A, 0x6D,
    0xCA, 0xA4, 0xBB, 0xD4, 0x63, 0x9A, 0x72, 0xC9, 0xBE, 0xE1, 0x58, 0xAD, 0x7C, 0xBE, 0x73, 0xA6,
    0x55, 0x3D, 0x5D, 0xB0, 0x94, 0x99, 0x5A, 0x23, 0x33, 0x4C, 0x67, 0x08, 0x34, 0x56, 0xB2, 0x3B,
    0x29, 0x99, 0x19, 0x21, 0x9C, 0xC2, 0x01, 0xA2, 0x38, 0x10, 0x13, 0x19, 0x5C, 0x00, 0x92, 0x65,
    0x9E, 0x02, 0x00, 0x44, 0x21, 0xBC, 0x00, 0x00, 0x60, 0x0E, 0x74, 0x1A, 0xC0, 0x75, 0x51, 0x85,
    0x42, 0x92, 0x3C, 0xB5, 0x43, 0xA3, 0x12, 0x6B, 0x1A, 0x4E, 0x55, 0x06, 0xC4, 0xAA, 0xA6, 0xB3,
    0x75, 0xEE, 0xC7, 0x01, 0x50, 0x14, 0xC4, 0x0C, 0x55, 0x16, 0xCB, 0x1A, 0xB6, 0x6F, 0x74, 0x76,
    0x5D, 0x49, 0x19, 0xBB, 0x99, 0xDE, 0x6E, 0xF2, 0x28, 0x0E, 0x66, 0x65, 0xE0, 0x3C, 0x04, 0x00,
    0x77, 0xBC, 0x6A, 0x8A, 0xBA, 0xAC, 0xD4, 0xA5, 0xDD, 0xB3, 0xB7, 0x5B, 0x09, 0x48, 0xA5, 0x05,
    0x65, 0xF3, 0xC6, 0x58, 0xC1, 0xE5, 0x0C, 0x6C, 0xF7, 0x86, 0x2A, 0x7A, 0xB3, 0x1D, 0x59, 0x5D,
    0x8B, 0x18, 0x8F, 0x07, 0x52, 0x76, 0x64, 0xC6, 0x9B, 0x3A, 0x4C, 0xB1, 0x59, 0x39, 0xA8, 0xCA,
    0x76, 0xEB, 0xF0, 0x40, 0x09, 0x63, 0xB9, 0xC0, 0x10, 0x08, 0x64, 0xCE, 0x23, 0x5D, 0xEE, 0x59,
    0x66, 0x29, 0xA9, 0x9B, 0x3C, 0xC5, 0x49, 0xAD, 0xEE, 0x6D, 0xCD, 0xA9, 0xDE, 0xEA, 0xA7, 0x57,
    0x8E, 0x5A, 0x76, 0xC6, 0x95, 0xDD, 0xEA, 0x92, 0xAB, 0xE8, 0x35, 0x86, 0x97, 0x1C, 0x2E, 0xFD,
    0xA1, 0x58, 0x11, 0x3B, 0x0B, 0x9A, 0xF8, 0x77, 0x77, 0xB4, 0xD6, 0xA9, 0x56, 0xF6, 0x43, 0x2B,
    0xB5, 0xE5, 0x17, 0x29, 0x32, 0x6E, 0xD1, 0x6A, 0x25, 0xCF, 0x4B, 0xAC, 0x2B, 0xA8, 0xCC, 0x04,
    0x80, 0xB0, 0xEA, 0xD9, 0x33, 0xA8, 0x9C, 0x89, 0xC6, 0xC8, 0xDE, 0xCC, 0x12, 0xE9, 0x98, 0xC4,
    0xAC, 0x23, 0x04, 0x3E, 0x22, 0x5D, 0xA3, 0x28, 0xC5, 0x6B, 0x77, 0x78, 0x77, 0x1A, 0x31, 0x83,
    0x1D, 0x59, 0x15, 0x56, 0x02, 0x01, 0xEB, 0x73, 0x55, 0xD6, 0x95, 0xB4, 0x12, 0xAB, 0x3C, 0x00,
    0x00, 0x20, 0x03, 0x6C, 0x32, 0x80, 0x74, 0x95, 0xD4, 0x03, 0x6C, 0xF5, 0x68, 0x9D, 0x44, 0xA7,
    0x69, 0x93, 0x76, 0x5E, 0x4C, 0xFB, 0xB4, 0x34, 0x4C, 0x73, 0x73, 0xEE, 0xAC, 0xDB, 0x2B, 0xD9,
    0x27, 0xA7, 0x5D, 0x6D, 0x37, 0x15, 0x01, 0xF7, 0xA2, 0x2C, 0x06, 0x80, 0xC0, 0x3F, 0x14, 0x56,
    0x01, 0xF8, 0xB2, 0xA8, 0x0F, 0xA8, 0x99, 0x20, 0x1C, 0x00, 0xF0, 0x00, 0x00, 0x50, 0x0C, 0xA3,
    0xC2, 0x40, 0x18, 0x16, 0x89, 0xFA, 0x4A, 0x4A, 0x0B, 0x6E, 0xA2, 0x8D, 0x1D, 0x56, 0x23, 0x35,
    0xB8, 0xB7, 0x1E, 0xE7, 0xD5, 0x72, 0x94, 0xAA, 0xBB, 0x6A, 0xAD, 0x74, 0x2C, 0xD2, 0x89, 0x36,
    0x28, 0x61, 0x34, 0x22, 0xAD, 0x33, 0xB9, 0x58, 0xC9, 0x6E, 0xCE, 0xEE, 0xA3, 0x00, 0x50, 0x14,
    0x5B, 0x42, 0x00, 0x6E, 0x22, 0x08, 0x02, 0x61, 0x0D, 0xE0, 0x50, 0x0C, 0xA3, 0xC2, 0xC0, 0x58,
    0x14, 0x8D, 0xFA, 0x4A, 0x4A, 0x0B, 0x6F, 0x23, 0x8D, 0x1D, 0x56, 0x23, 0x35, 0xD8, 0xFB, 0x24,
    0x67, 0xA5, 0x54, 0x71, 0xAB, 0x33, 0xB9, 0x18, 0x02, 0x24, 0xD5, 0xC9, 0xE3, 0x26, 0x73, 0xA6,
    0xB2, 0xF6, 0xBD, 0x5B, 0x0C, 0xB2, 0xA5, 0x25, 0xBE, 0xD7, 0xBA, 0xCC, 0x8B, 0xCB, 0x6F, 0x96,
    0x0E, 0xC1, 0x2C, 0xDA, 0x6B, 0x1D, 0x8B, 0x2A, 0x8A, 0xD8, 0xE9, 0xA7, 0x65, 0x0A, 0xB1, 0x93,
    0xAB, 0xD1, 0x99, 0x43, 0x8A, 0x8A, 0x89, 0x33, 0x0F, 0x30, 0x03, 0x6C, 0x32, 0x80, 0x74, 0x95,
    0xD0, 0x03, 0x6C, 0xF4, 0x40, 0x1D, 0x70, 0x8D, 0x46, 0xD8, 0xDC, 0x44, 0x14, 0xBB, 0xB2, 0x72,
    0x57, 0xBF, 0x2A, 0x0E, 0x1D, 0x9D, 0x97, 0xB3, 0x6A, 0x66, 0xC6, 0xAA, 0x0D, 0xAC, 0x8C, 0xA8,
    0xEF, 0x6B, 0x54, 0x57, 0x9A, 0x2B, 0x1C, 0x66, 0x98, 0xED, 0xB8, 0xEB, 0x10, 0xC7, 0x87, 0x78,
    0x52, 0xDA, 0xA7, 0xB9, 0x31, 0xCD, 0x9B, 0xF8, 0xAE, 0x2C, 0x9C, 0x94, 0x29, 0x7F, 0x6C, 0xED,
    0xBB, 0xBB, 0x17, 0x3E, 0x15, 0x50, 0x81, 0x65, 0x86, 0x11, 0x70, 0xDA, 0x2A, 0xAB, 0x63, 0x7C,
    0x6F, 0x7E, 0x0E, 0xC1, 0xEE, 0x2C, 0x44, 0x55, 0xA3, 0x30, 0x5B, 0x56, 0x90, 0xE5, 0x59, 0xE0,
    0x30, 0x0D, 0xB3, 0xD1, 0x00, 0x75, 0xC2, 0x39, 0x1B, 0x63, 0x71, 0x10, 0x52, 0xEE, 0x4A, 0xF7,
    0x65, 0xBB, 0x25, 0xB7, 0x93, 0x3D, 0xF9, 0x6E, 0xA9, 0xA4, 0xE4, 0xCF, 0x85, 0x64, 0x1B, 0x69,
    0x79, 0x33, 0x63, 0x77, 0x04, 0xFA, 0x4D, 0x4E, 0xC7, 0x65, 0x49, 0xAD, 0xB5, 0x55, 0x0E, 0x54,
    0xF0, 0x6E, 0xEB, 0x45, 0x62, 0x8D, 0xBC, 0x1C, 0x39, 0x29, 0x53, 0x9A, 0xB1, 0x11, 0x49, 0x5A,
    0x59, 0x15, 0x1D, 0x5A, 0x1B, 0xBB, 0x56, 0xC1, 0x6F, 0x72, 0xA8, 0xA5, 0xD5, 0xAE, 0x6D, 0x63,
    0xA2, 0x4D, 0x31, 0x7B, 0x21, 0x74, 0xAA, 0xB3, 0x59, 0x5E, 0xE6, 0xCD, 0x32, 0x85, 0xB5, 0xD8,
    0x41, 0xC1, 0x8C, 0xCA, 0xB5, 0x76, 0x10, 0x70, 0x63, 0xAC, 0x1D, 0x5D, 0x83, 0xDA, 0x17, 0x69,
    0x06, 0x68, 0x61, 0x44, 0x1C, 0xBA, 0xB2, 0xB4, 0x80, 0x3C, 0x09, 0x48, 0x03, 0xEA, 0x03, 0x50,
    0x1F, 0x79, 0x9A, 0x00, 0xE9, 0xC1, 0x90, 0x06, 0x88, 0x8E, 0x80, 0x24, 0x56, 0x9F, 0x50, 0x0C,
    0x7C, 0xAA, 0x00, 0x75, 0xC2, 0x1D, 0x3C, 0xAD, 0x2A, 0xEE, 0xA9, 0xDE, 0x4A, 0xE6, 0x46, 0x3C,
    0x15, 0xB3, 0xB2, 0xF2, 0x57, 0x29, 0xF9, 0xDC, 0xE5, 0xFB, 0x96, 0x93, 0x31, 0x93, 0x88, 0x85,
    0x2F, 0x64, 0xC7, 0x95, 0x49, 0x23, 0x3D, 0x51, 0x51, 0xDB, 0x31, 0x08, 0xCE, 0x47, 0x54, 0xB9,
    0x25, 0xC1, 0x33, 0x92, 0x55, 0x32, 0xA3, 0xAA, 0xF1, 0x2E, 0xD5, 0x50, 0xC9, 0x59, 0xC2, 0xDB,
    0xF9, 0x5C, 0x34, 0xB2, 0xE9, 0x16, 0x4E, 0xD9, 0xDB, 0x7B, 0x6E, 0xEE, 0xE5, 0xD0, 0x9C, 0x4C,
    0x2A, 0xE7, 0x77, 0x7E, 0x2F, 0x84, 0x5E, 0x25, 0x4E, 0xB9, 0x0C, 0x5C, 0xF3, 0xB5, 0x18, 0x96,
    0xBB, 0x06, 0x38, 0xE5, 0x51, 0x66, 0xAA, 0xC1, 0x2F, 0x59, 0x53, 0x99, 0xA2, 0xB1, 0x5A, 0xD2,
    0x65, 0x26, 0x48, 0xAC, 0x5C, 0xB5, 0x67, 0x2A, 0x72, 0x23, 0x27, 0xAD, 0x96, 0x0D, 0x9D, 0xA0,
    0x4A, 0xA2, 0xF8, 0x77, 0x37, 0x75, 0xF8, 0x50, 0x0C, 0x7C, 0xAA, 0x40, 0x38, 0x04, 0x01, 0x50,
    0xA6, 0xE4, 0x4F, 0x5C, 0x4D, 0x23, 0x69, 0xBB, 0x2E, 0xA6, 0x64, 0x29, 0x9D, 0xAF, 0x39, 0xAA,
    0x1A, 0xF8, 0x77, 0x5B, 0xB6, 0x52, 0xA6, 0xBD, 0xE1, 0x5E, 0xB6, 0x20, 0x00, 0xE0, 0x30, 0xC7,
    0x86, 0x01, 0x96, 0x43, 0x18, 0x08, 0x3A, 0x4C, 0x03, 0xC0, 0x60, 0x0D, 0x73, 0x33, 0x40, 0x58,
    0x0C, 0x89, 0xF1, 0xBA, 0x73, 0x36, 0xE6, 0xA4, 0x5C, 0x6A, 0x18, 0xE6, 0xE7, 0xC9, 0x18, 0xE8,
    0x98, 0x69, 0x99, 0xF2, 0x58, 0x3A, 0x1A, 0x0A, 0xEE, 0x48, 0x00, 0xA9, 0xBB, 0x50, 0x04, 0x83,
    0x3E, 0x22, 0x8C, 0x1C, 0x95, 0x9E, 0xC5, 0xCA, 0xE7, 0x78, 0x35, 0x67, 0xD2, 0x6A, 0xCA, 0xDA,
    0x8C, 0xDD, 0x75, 0x76, 0xBA, 0xB9, 0x81, 0x38, 0x7D, 0x0C, 0x2F, 0x94, 0xCC, 0x27, 0x1A, 0x22,
    0xCB, 0xDC, 0xC4, 0x1E, 0x92, 0x8A, 0x22, 0xF4, 0xB1, 0x2B, 0x51, 0x54, 0x48, 0xBD, 0x0B, 0x78,
    0xC5, 0x56, 0x92, 0x2F, 0x62, 0x4D, 0x6D, 0x9D, 0xC6, 0x8B, 0xDE, 0xC4, 0x49, 0x56, 0x71, 0x9A,
    0xE8, 0x2D, 0x52, 0x55, 0x1C, 0x40, 0x02, 0x8A, 0x4A, 0x87, 0x96, 0x97, 0x1F, 0x80, 0x00, 0x00,
    0x70, 0x0D, 0x8B, 0x1C, 0x40, 0x60, 0x01, 0x7D, 0xBB, 0x80, 0x33, 0x1A, 0xD6, 0x06, 0xA2, 0xA4,
    0x54, 0xCA, 0x1F, 0x59, 0xC8, 0xA8, 0xF7, 0x30, 0xB7, 0xBA, 0x76, 0x2D, 0x47, 0x37, 0xB9, 0x95,
    0x2E, 0xF3, 0x52, 0xC9, 0x8E, 0xA5, 0x49, 0xBD, 0xCC, 0xF8, 0xAA, 0x07, 0x79, 0x3A, 0x5B, 0xAD,
    0xEB, 0x95, 0xC7, 0x85, 0x3B, 0x42, 0xE8, 0xA3, 0x73, 0xAE, 0x34, 0x6D, 0xE1, 0x97, 0x40, 0xCB,
    0x90, 0xDB, 0x76, 0x62, 0xCC, 0xAA, 0xD5, 0x35, 0x2F, 0x09, 0x63, 0x9E, 0x00, 0x00, 0xE5, 0x0E,
    0x8D, 0x73, 0x94, 0x4B, 0xBB, 0x3F, 0x67, 0xEC, 0xFD, 0xA3, 0x95, 0x3E, 0x13, 0x72, 0xA9, 0x67,
    0xED, 0x5C, 0xB1, 0xF5, 0x78, 0x98, 0x39, 0x3F, 0x6E, 0xB5, 0xCD, 0xC2, 0x4C, 0xBB, 0x57, 0x27,
    0x73, 0xAF, 0x7D, 0x54, 0xD6, 0xCE, 0x44, 0xCB, 0xA3, 0x97, 0x34, 0x53, 0x75, 0x78, 0x00, 0x00,
    0x55, 0xA5, 0xAC, 0xB3, 0xB5, 0x39, 0x21, 0x6A, 0x30, 0x77, 0x34, 0xCB, 0x3D, 0x58, 0xE9, 0xA5,
    0xB5, 0x35, 0x9F, 0x95, 0x46, 0x2D, 0x12, 0xD1, 0x6C, 0xE5, 0x52, 0xA3, 0x4B, 0xA6, 0xC9, 0x39,
    0x3C, 0xAC, 0xD2, 0xC9, 0x8E, 0x4E, 0x4F, 0x2B, 0x3C, 0xB2, 0x5B, 0x93, 0x93, 0xC6, 0x8F, 0x0C,
    0x96, 0xE4, 0xD4, 0xF0, 0x8B, 0xB4, 0x1D, 0x49, 0x25, 0x3C, 0x5E, 0x18, 0xCF, 0x4B, 0x28, 0x50,
    0xD6, 0x16, 0xBA, 0xDA, 0xAD, 0xD5, 0x31, 0x47, 0x3A, 0xA9, 0x5A, 0x95, 0x91, 0x2A, 0xAB, 0xC2,
    0xC9, 0x71, 0x43, 0xD8, 0xF1, 0x4A, 0xD6, 0xCC, 0x54, 0xD6, 0xC5, 0x43, 0xA6, 0x92, 0x95, 0xB1,
    0xEB, 0x90, 0xA9, 0x9D, 0x85, 0x8C, 0x70, 0xF3, 0x2B, 0x39, 0xE1, 0x63, 0xDC, 0x1D, 0x0A, 0xAE,
    0x79, 0x5A, 0xD7, 0x0E, 0xB2, 0x3B, 0x7A, 0x97, 0x39, 0x6D, 0x51, 0x03, 0x67, 0xA5, 0xCD, 0x44,
    0xE2, 0xC1, 0xDB, 0xB1, 0x6B, 0xA0, 0xD5, 0x2C, 0xFA, 0x6D, 0x5D, 0x08, 0xAC, 0x44, 0x46, 0x93,
    0x17, 0xCE, 0x44, 0xF1, 0x73, 0x63, 0xA5, 0xF3, 0xA0, 0xBB, 0xE5, 0xD2, 0xA1, 0x7C, 0x64, 0x13,
    0x39, 0x70, 0x26, 0x5E, 0xF6, 0x8D, 0xDC, 0xC2, 0x09, 0x57, 0xCA, 0x20, 0xD1, 0x54, 0xCB, 0xF0,
    0x00, 0x00, 0x85, 0xC8, 0x8C, 0x3A, 0x3C, 0xA9, 0xA9, 0x72, 0x6A, 0xCC, 0xAE, 0xC9, 0xFB, 0x58,
    0xBC, 0x23, 0xA3, 0xA2, 0xBF, 0x55, 0xBA, 0xE6, 0xE7, 0x0D, 0x36, 0xE5, 0x50, 0x79, 0xCA, 0xCB,
    0xE9, 0x39, 0x3D, 0x14, 0xA8, 0xB9, 0x56, 0x2D, 0x4D, 0x54, 0x9A, 0xBE, 0xD5, 0x67, 0x53, 0xD9,
    0x88, 0x69, 0x97, 0xA1, 0xD5, 0x17, 0x9B, 0x18, 0x44, 0xFB, 0x3B, 0x57, 0x6A, 0xED, 0x9A, 0xB2,
    0xD5, 0x84, 0x05, 0x5F, 0xAC, 0x2E, 0x52, 0x15, 0xE5, 0x6A, 0x36, 0xFB, 0x99, 0x71, 0xD2, 0xD3,
    0x0D, 0x51, 0xB9, 0x5F, 0x56, 0xC2, 0x18, 0xA4, 0xA6, 0xB7, 0xBA, 0xF9, 0x4D, 0x95, 0x09, 0xE3,
    0x73, 0xCB, 0xC0, 0x75, 0x89, 0xA1, 0xCB, 0x4C, 0x1D, 0xAD, 0x63, 0xAC, 0x72, 0x90, 0x53, 0x7E,
    0x56, 0xFB, 0x9D, 0x33, 0x2D, 0xDF, 0x95, 0x47, 0x2B, 0x0C, 0xAB, 0x77, 0xED, 0x5A, 0xAA, 0x57,
    0x5A, 0x08, 0x99, 0xA5, 0xAA, 0x8C, 0xD8, 0xD8, 0x72, 0x65, 0xAA, 0xA7, 0x75, 0x53, 0x4B, 0xB9,
    0x5A, 0xAA, 0x65, 0x10, 0x92, 0xB4, 0xB1, 0xAD, 0x36, 0x88, 0x0D, 0x2A, 0x59, 0x60, 0x30, 0x0D,
    0x31, 0xA2, 0x94, 0x3D, 0x52, 0xCA, 0xD3, 0x72, 0xA5, 0x95, 0x43, 0x32, 0xAB, 0x4F, 0x58, 0x05,
    0xC0, 0xAC, 0xA0, 0x3F, 0x95, 0x36, 0x80, 0xA0, 0x3F, 0xB8, 0x30, 0x08, 0x01, 0x65, 0x4B, 0xF2,
    0x78, 0xC2, 0x22, 0x61, 0x2D, 0xBD, 0xA3, 0xB5, 0x72, 0xA7, 0xD1, 0xEE, 0x18, 0xEC, 0x9A, 0xA1,
    0xF9, 0x67, 0xA5, 0x5D, 0x1E, 0xE6, 0xCC, 0xB6, 0x89, 0xF9, 0x44, 0xB8, 0x67, 0x0B, 0xA2, 0x5B,
    0x92, 0x62, 0x1D, 0x34, 0x00, 0xC0, 0x26, 0x98, 0x53, 0x01, 0x64, 0xD9, 0x88, 0x07, 0x48, 0xCC,
    0x00, 0x03, 0xC0, 0x00, 0x00, 0x25, 0x4E, 0x5C, 0x22, 0xA3, 0x27, 0x25, 0x52, 0xEA, 0x72, 0xD4,
    0xEF, 0x6E, 0x59, 0x2C, 0x35, 0x12, 0xA3, 0x9F, 0x95, 0xD2, 0x91, 0x26, 0xE3, 0x77, 0xED, 0x7A,
    0xAE, 0xD5, 0xB8, 0x08, 0x47, 0x79, 0x2D, 0x9A, 0x21, 0x8D, 0x21, 0xDA, 0x02, 0x01, 0xE6, 0xA7,
    0x30, 0x0B, 0xCD, 0x90, 0x2A, 0x54, 0x4B, 0x69, 0xC8, 0xEE, 0xF5, 0x96, 0xB2, 0xD2, 0x64, 0xCA,
    0xEE, 0x50, 0x9F, 0xF6, 0x99, 0x71, 0x7A, 0x99, 0x09, 0xAD, 0x26, 0x6D, 0x8E, 0xA5, 0xC6, 0xC9,
    0x0A, 0x1B, 0xD3, 0x77, 0x44, 0x57, 0x32, 0xC7, 0xE9, 0x19, 0xA4, 0xED, 0xD3, 0xB2, 0xF6, 0x5A,
    0xE7, 0xED, 0x55, 0xE4, 0xED, 0xD4, 0xBD, 0xDA, 0x53, 0x8A, 0x3B, 0xB4, 0xB0, 0x76, 0xD4, 0xE2,
    0x92, 0x7E, 0xCC, 0x9F, 0xD1, 0x59, 0x53, 0xB5, 0x33, 0x36, 0xE1, 0x0A, 0x19, 0xDD, 0x9E, 0x00,
    0x00, 0x65, 0xA7, 0xB2, 0xBB, 0xCC, 0x27, 0xE1, 0x63, 0x30, 0x30, 0xD2, 0xCB, 0x7C, 0x54, 0xFC,
    0x9C, 0xA3, 0xB4, 0xF7, 0x95, 0x4A, 0xEE, 0xE8, 0xB7, 0x6C, 0xEC, 0xFD, 0x9F, 0x94, 0x4A, 0xEF,
    0x08, 0x95, 0x6B, 0xED, 0x5B, 0xAF, 0x76, 0xE6, 0xE7, 0x60, 0xD7, 0xAA, 0xA3, 0x3D, 0x89, 0xB8,
    0x37, 0x02, 0x40, 0x45, 0x4C, 0xCB, 0x4B, 0x6A, 0x18, 0x52, 0x36, 0xC8, 0x8A, 0xE3, 0xF0, 0x00,
    0x00, 0x85, 0x6D, 0xC0, 0xCA, 0xD2, 0x3F, 0x39, 0x54, 0x6A, 0xB4, 0x70, 0x73, 0xEC, 0x54, 0xD8,
    0xAE, 0x2C, 0x55, 0x8E, 0x95, 0x2D, 0xAF, 0x90, 0xD2, 0xE0, 0x40, 0x0F, 0x5A, 0x21, 0x80, 0xAB,
    0x61, 0x4A, 0x02, 0xC0, 0x40, 0x11, 0x84, 0xAD, 0x22, 0x6D, 0x95, 0xAA, 0xC6, 0xE7, 0x99, 0x6F,
    0x2D, 0xE6, 0xBC, 0xF7, 0xAA, 0xF5, 0xDA, 0xD7, 0x64, 0xE2, 0x64, 0xFE, 0x95, 0xBE, 0xB8, 0x4B,
    0x16, 0xDD, 0x95, 0xF8, 0xEE, 0xCE, 0xC5, 0xB7, 0x2B, 0x98, 0x69, 0x54, 0x31, 0x76, 0x0A, 0x65,
    0x9A, 0xC4, 0xCC, 0x9D, 0x62, 0x89, 0x56, 0x91, 0x1B, 0x14, 0xC1, 0x52, 0x16, 0x25, 0x9E, 0x00,
    0x00, 0x44, 0x2C, 0x4B, 0xB4, 0x23, 0xB9, 0x21, 0x5B, 0x74, 0x12, 0xCE, 0xEF, 0xED, 0x55, 0x2A,
    0x2D, 0x13, 0xA5, 0xDB, 0xB5, 0x72, 0xA8, 0xC5, 0xE5, 0xCA, 0x6D, 0x94, 0xAD, 0xB0, 0x2A, 0x53,
    0xB7, 0x6B, 0xEB, 0x8D, 0x52, 0xAA, 0x32, 0x89, 0x81, 0xAB, 0x27, 0x67, 0xEC, 0xDB, 0x96, 0x93,
    0xBD, 0xCE, 0xD0, 0x87, 0x5D, 0x7C, 0xF1, 0xA9, 0x15, 0x9A, 0x0A, 0xF4, 0xAD, 0x34, 0x65, 0xED,
    0xAA, 0xB3, 0x51, 0xCD, 0x2B, 0x55, 0xAD, 0x85, 0xD9, 0x97, 0x06, 0x6F, 0x2C, 0x1D, 0xA1, 0xA7,
    0x83, 0xF6, 0xCB, 0x16, 0x5C, 0xA2, 0xE9, 0x66, 0x91, 0xC9, 0x99, 0xB6, 0xC6, 0xD3, 0x69, 0x35,
    0x66, 0x8C, 0xA2, 0xB6, 0x43, 0xB6, 0xD5, 0x93, 0xF2, 0x6C, 0xCC, 0xEE, 0xD0, 0x00, 0x0F, 0x00,
    0x06, 0x48, 0xA8, 0x93, 0xE4, 0x39, 0x8F, 0x15, 0x3D, 0xC9, 0x2B, 0x4B, 0xA6, 0xD5, 0x52, 0x8A,
    0xC2, 0xA4, 0xDE, 0xFB, 0x56, 0x2A, 0x7C, 0x19, 0x99, 0x6E, 0xD4, 0xCB, 0x98, 0x98, 0x89, 0x58,
    0x72, 0x00, 0x48, 0x0B, 0x32, 0x1D, 0xE0, 0x28, 0x07, 0xB9, 0x98, 0x40, 0x1E, 0xAD, 0x3A, 0x89,
    0xF2, 0x74, 0xA9, 0x57, 0x5E, 0xE4, 0xD4, 0xB0, 0xA5, 0x93, 0xD1, 0x3C, 0xF7, 0x2E, 0xE6, 0xC4,
    0xF0, 0xDB, 0x1C, 0xAA, 0x4C, 0xF3, 0x56, 0x2B, 0x86, 0x5C, 0xE1, 0xD1, 0xF5, 0x6B, 0x21, 0xD6,
    0x66, 0x72, 0xB9, 0x52, 0xD8, 0xF0, 0xDD, 0x61, 0x25, 0x90, 0xBA, 0x1A, 0x09, 0x66, 0xA7, 0x53,
    0xAE, 0x34, 0x1A, 0xD9, 0x2D, 0x96, 0xFB, 0x9F, 0x77, 0x80, 0x46, 0x27, 0xA3, 0x2D, 0x42, 0xA9,
    0x61, 0x6C, 0x3A, 0x70, 0x16, 0x73, 0x5D, 0x59, 0x4C, 0x3C, 0x92, 0x95, 0xBF, 0xB6, 0x72, 0xCA,
    0x62, 0x58, 0x18, 0xEE, 0xFA, 0xB2, 0x93, 0x74, 0x19, 0x49, 0xBD, 0x2C, 0x82, 0x95, 0xDB, 0x91,
    0xDE, 0xCB, 0x4B, 0x1B, 0x96, 0x44, 0x92, 0xB6, 0xC8, 0x58, 0x77, 0xD6, 0xB2, 0x1B, 0xB2, 0xD5,
    0xB9, 0x91, 0xF0, 0x85, 0x34, 0xDD, 0x5A, 0xA9, 0xEE, 0xBC, 0x91, 0x89, 0x26, 0xEA, 0xDD, 0x5A,
    0xAA, 0x31, 0x99, 0x82, 0xA6, 0xE7, 0x6A, 0xD5, 0x72, 0xC4, 0x5A, 0x1D, 0x3B, 0x37, 0x66, 0xAD,
    0x9E, 0xDD, 0xCC, 0xEA, 0xC9, 0xBB, 0x73, 0x75, 0xAE, 0x9F, 0x19, 0xCD, 0x2A, 0xC8, 0xEB, 0xD6,
    0xE2, 0xA8, 0x69, 0x6E, 0x36, 0xE5, 0xDC, 0x8B, 0x8E, 0xF4, 0xB9, 0x69, 0x69, 0x9A, 0xF2, 0xB2,
    0x66, 0x62, 0x1B, 0x30, 0xC3, 0x0B, 0xC5, 0x55, 0xA7, 0x58, 0x80, 0x7A, 0x6D, 0x06, 0x07, 0x80,
    0x00, 0x00, 0x55, 0x45, 0xA5, 0xB2, 0xBD, 0x26, 0xA1, 0x5A, 0xB0, 0x70, 0xF4, 0xC6, 0xFC, 0x54,
    0xD9, 0xAD, 0xB5, 0x1F, 0x5F, 0x95, 0x42, 0x0F, 0x4E, 0xAD, 0x3B, 0xE5, 0x50, 0x94, 0x4B, 0x95,
    0xD8, 0xF9, 0x54, 0x67, 0x14, 0xE5, 0x71, 0xCE, 0x55, 0x09, 0xC5, 0x39, 0x6C, 0x6F, 0x95, 0x42,
    0x53, 0x10, 0x56, 0xE3, 0xE5, 0x6F, 0x8C, 0xD4, 0x0D, 0x45, 0x35, 0x5B, 0xA3, 0x55, 0x03, 0x31,
    0xCC, 0x58, 0xC9, 0xE4, 0x39, 0x54, 0x53, 0x56, 0xB6, 0x19, 0x2E, 0x2F, 0x54, 0xC5, 0xAC, 0x86,
    0x43, 0x14, 0x56, 0xED, 0x72, 0xDF, 0x92, 0xC5, 0x15, 0xBB, 0x5C, 0xC5, 0xE4, 0x29, 0xC4, 0x6E,
    0x57, 0xA5, 0x92, 0xCC, 0xCE, 0xDB, 0x95, 0xEB, 0x72, 0xBB, 0xAB, 0x47, 0x65, 0x7B, 0x1C, 0x73,
    0x0C, 0xD1, 0xC9, 0x5E, 0xA6, 0x9D, 0x49, 0xC4, 0x8E, 0x17, 0x9D, 0xAB, 0x54, 0x6D, 0x21, 0x76,
    0x05, 0x7B, 0xD4, 0xA4, 0x46, 0x29, 0x8A, 0xCE, 0xEF, 0x30, 0xED, 0xB9, 0x63, 0x75, 0x41, 0xCB,
    0x2C, 0xAC, 0xC0, 0x1E, 0x08, 0xA6, 0x01, 0x6D, 0x65, 0x0F, 0x20, 0x12, 0x92, 0x2E, 0x28, 0x84,
    0x52, 0x5E, 0xB6, 0x35, 0xCA, 0xA5, 0x45, 0x94, 0x8D, 0xB2, 0x72, 0xA8, 0xCD, 0x2C, 0xB6, 0xE4,
    0x5C, 0xAA, 0x13, 0x5B, 0x48, 0xD7, 0x5F, 0x6A, 0xE5, 0x71, 0x94, 0x43, 0x8F, 0xBB, 0x21, 0x6B,
    0xDC, 0xB6, 0x89, 0xE9, 0xA4, 0x01, 0xC5, 0xC3, 0x34, 0x06, 0x01, 0xD4, 0xCA, 0x2C, 0x06, 0x80,
    0xE0, 0x3E, 0xD7, 0x77, 0x01, 0xF7, 0x33, 0x38, 0x0F, 0xB1, 0xA1, 0x40, 0x7D, 0x0C, 0xC3, 0x03,
    0xC0, 0x60, 0x1C, 0x5D, 0x33, 0x40, 0x68, 0x0F, 0x01, 0x20, 0x72, 0x29, 0xC6, 0x19, 0x8D, 0xFD,
    0x9D, 0x8B, 0xB1, 0xF6, 0x4E, 0x4F, 0x3A, 0x43, 0x31, 0xCE, 0xD3, 0xB5, 0x72, 0xB9, 0x49, 0xDD,
    0xD6, 0x35, 0x9D, 0xBB, 0x17, 0xC6, 0x2C, 0xEC, 0xD1, 0xA4, 0x75, 0xE5, 0x74, 0x2B, 0xCD, 0xB6,
    0x8F, 0x81, 0xB0, 0x2B, 0xA5, 0x5E, 0x6D, 0x34, 0x6C, 0x0C, 0xA9, 0x79, 0x88, 0x71, 0xBA, 0xEC,
    0x25, 0x95, 0x5D, 0xDD, 0x6A, 0xBA, 0x38, 0x64, 0x33, 0x9A, 0xD8, 0x07, 0x80, 0x00, 0x00, 0x50,
    0x1E, 0x62, 0x2B, 0x40, 0x68, 0x09, 0x02, 0xD2, 0x3E, 0x4F, 0x0A, 0xF7, 0x64, 0xDC, 0x9C, 0x92,
    0x37, 0x88, 0x44, 0xAB, 0x2F, 0x24, 0x8D, 0x1D, 0xD1, 0xB2, 0xC9, 0xA9, 0x65, 0x35, 0x65, 0x6D,
    0xB2, 0x6E, 0x6C, 0x4F, 0x3A, 0x22, 0xAB, 0xED, 0x8F, 0x55, 0x4E, 0xA8, 0xAA, 0xF9, 0xA4, 0xC5,
    0x73, 0x9A, 0x1A, 0xCD, 0x76, 0xF1, 0x64, 0xE6, 0x86, 0xB1, 0x3E, 0x3B, 0x59, 0x39, 0xA1, 0x2C,
    0xCE, 0x6F, 0x16, 0x52, 0xEE, 0x44, 0xCD, 0xE5, 0xC5, 0x94, 0x8C, 0x19, 0x43, 0x6B, 0x29, 0x6C,
    0x60, 0xAA, 0xCE, 0x96, 0x48, 0x5C, 0xF8, 0xA3, 0xB1, 0xAD, 0xB1, 0x57, 0x31, 0x2C, 0x90, 0xCC,
    0xEC, 0x66, 0x17, 0x8C, 0xBB, 0x1A, 0x96, 0xCC, 0x04, 0x21, 0x28, 0x20, 0x17, 0x17, 0x81, 0x00,
    0xB7, 0x3A, 0xF8, 0x00, 0x00, 0x10, 0x1E, 0x7B, 0x3A, 0xC0, 0x68, 0x0D, 0x01, 0xA0, 0x34, 0x06,
    0x80, 0xB0, 0x35, 0x1C, 0xA7, 0x0E, 0x8B, 0x59, 0xDE, 0xC9, 0xD9, 0x39, 0x2C, 0xAB, 0x0C, 0x8B,
    0x59, 0xDE, 0xCD, 0xC9, 0xEB, 0x38, 0x25, 0x58, 0xF6, 0x76, 0xBD, 0x5D, 0x4A, 0x9A, 0xAB, 0xED,
    0x6E, 0xF8, 0x57, 0x09, 0xE0, 0xEC, 0x27, 0x41, 0x59, 0x8F, 0x8A, 0x3B, 0x19, 0xB5, 0x46, 0x2E,
    0xE0, 0x5E, 0x30, 0x1F, 0x30, 0x42, 0x80, 0xFB, 0xD1, 0x14, 0x07, 0xD4, 0xAC, 0xA0, 0x3A, 0xB5,
    0x66, 0x01, 0xE8, 0x33, 0x34, 0x05, 0x01, 0xF7, 0xB2, 0x9C, 0x0E, 0x45, 0x18, 0x3B, 0xB2, 0x55,
    0x8F, 0xB2, 0xEA, 0x58, 0x55, 0xA1, 0x23, 0x24, 0x99, 0x97, 0x73, 0x6E, 0x8D, 0xD7, 0xBB, 0x35,
    0x6B, 0xA2, 0xF2, 0xAD, 0x5A, 0x3D, 0xDB, 0x9B, 0x6F, 0x65, 0xAC, 0x7C, 0x1A, 0x50, 0xE6, 0xD9,
    0x4B, 0x1E, 0xD7, 0x77, 0x18, 0xB9, 0xCA, 0xDD, 0x1D, 0x59, 0xE1, 0x57, 0xA8, 0x03, 0xCC, 0x25,
    0x48, 0x0C, 0x03, 0xAB, 0x46, 0x58, 0x08, 0x02, 0xC6, 0x85, 0xF0, 0x20, 0x1F, 0x52, 0xB2, 0x00,
    0xEA, 0xD5, 0x94, 0x07, 0xA0, 0xCC, 0xB0, 0x01, 0x80, 0x3C, 0xD4, 0xE8, 0x01, 0x79, 0xB2, 0x48,
    0x14, 0x8D, 0x98, 0x18, 0x69, 0x65, 0xBD, 0xE5, 0xC4, 0x8F, 0xC9, 0xCA, 0x3B, 0x4F, 0x75, 0x24,
    0x72, 0xAC, 0xA5, 0x11, 0xFD, 0x49, 0x88, 0xC1, 0x0B, 0xBE, 0xB3, 0x72, 0x76, 0x5D, 0xCD, 0x8A,
    0x31, 0x38, 0x30, 0x59, 0xD1, 0xEE, 0xAD, 0xD9, 0x8B, 0x6F, 0x59, 0x30, 0x57, 0xD1, 0xD2, 0xEA,
    0xD5, 0xC4, 0xD9, 0xBC, 0x6E, 0xB9, 0xCE, 0x0A, 0x66, 0xA6, 0xDB, 0xEE, 0x7D, 0xEE, 0xBD, 0xAF,
    0x1A, 0x56, 0xA7, 0x1B, 0x6F, 0x5D, 0xE9, 0xC3, 0xC0, 0x00, 0x00, 0x30, 0x11, 0x23, 0x43, 0x80,
    0xFB, 0x10, 0xDC, 0x07, 0xE8, 0x44, 0xE0, 0x3F, 0x44, 0x38, 0x01, 0xFA, 0x28, 0x38, 0x0F, 0xC1,
    0x52, 0x11, 0x5C, 0xCE, 0xCC, 0x8C, 0xDA, 0xDC, 0xB8, 0x99, 0xD3, 0x88, 0x76, 0x9A, 0xE6, 0x26,
    0x8D, 0x1D, 0x61, 0x66, 0xA6, 0x04, 0x01, 0x6F, 0x64, 0x18, 0x02, 0x01, 0x14, 0x58, 0xD5, 0x70,
    0xA4, 0x33, 0x2B, 0xE4, 0xF7, 0x66, 0x2E, 0x7B, 0xE9, 0x56, 0x1A, 0x37, 0x0B, 0xE0, 0xF0, 0xA5,
    0x94, 0x92, 0x46, 0xF8, 0xDF, 0x1B, 0xDD, 0x7B, 0x1A, 0x1C, 0xF0, 0xC9, 0x46, 0xDE, 0x8C, 0x07,
    0x09, 0xA9, 0x5A, 0x6C, 0xCB, 0x08, 0xCD, 0xE1, 0x0E, 0x23, 0x2F, 0xB3, 0xC0, 0x00, 0x00, 0x10,
    0x0C, 0x34, 0xA2, 0x80, 0xFC, 0xE1, 0xDE, 0x03, 0xC0, 0x88, 0x11, 0x01, 0xC0, 0x71, 0x90, 0xD8,
    0x92, 0x4D, 0x65, 0x66, 0x8B, 0x97, 0x23, 0xB3, 0xE1, 0x45, 0xD3, 0xEB, 0xA9, 0x2F, 0x17, 0x30,
    0x88, 0xF6, 0xEE, 0x5C, 0xCD, 0x9A, 0xAF, 0x56, 0x2D, 0xBD, 0xA9, 0x40, 0xD3, 0x6D, 0x4B, 0xE9,
    0x53, 0x41, 0x8A, 0xF2, 0x53, 0x09, 0x50, 0xD1, 0x1A, 0xBD, 0xB3, 0xBE, 0x58, 0x46, 0x46, 0x89,
    0x13, 0xE3, 0x96, 0x10, 0x89, 0xAA, 0xAD, 0x77, 0x21, 0x7C, 0x16, 0xCA, 0xAE, 0xFA, 0x85, 0x01,
    0x20, 0x2C, 0xBC, 0x06, 0x80, 0x90, 0x0A, 0x07, 0x80, 0x00, 0x00, 0x60, 0x1F, 0x72, 0x93, 0x00,
    0xEB, 0x94, 0xD4, 0x07, 0xDC, 0xA4, 0xD0, 0x1A, 0x02, 0x80, 0xDA, 0x55, 0x2D, 0x14, 0xA5, 0x0A,
    0xCB, 0x39, 0xEE, 0xC9, 0xD9, 0x7B, 0x37, 0x2A, 0x8C, 0xDA, 0xD1, 0xF2, 0x47, 0xDA, 0xEF, 0x69,
    0x80, 0x4C, 0x96, 0xC0, 0x01, 0x40, 0x3D, 0x32, 0xCF, 0x00, 0x40, 0x15, 0xB4, 0xA0, 0x01, 0xE0,
    0x70, 0x1F, 0x82, 0x1C, 0x40, 0x78, 0x0F, 0x01, 0xE0, 0x34, 0x03, 0x81, 0xC8, 0xDD, 0x37, 0xA5,
    0x8C, 0x8F, 0x76, 0x3E, 0xC7, 0x69, 0x63, 0x26, 0xB6, 0x25, 0x8D, 0xB2, 0xA7, 0x42, 0x1D, 0xD5,
    0xB4, 0x77, 0xAA, 0xD5, 0x3D, 0xF2, 0xCC, 0xAB, 0x9B, 0xA5, 0x8E, 0x74, 0xA3, 0xA9, 0x66, 0xA1,
    0x6B, 0x1A, 0x19, 0x29, 0x31, 0xB7, 0xDA, 0xAB, 0x90, 0xE2, 0xE9, 0x3A, 0x69, 0x22, 0xF4, 0x26,
    0x5E, 0x21, 0xDA, 0x60, 0x0E, 0x02, 0x8B, 0x96, 0x95, 0x6F, 0x72, 0x1D, 0x6B, 0xC2, 0xAB, 0x7C,
    0xF0, 0x8E, 0x2D, 0xC0, 0x3C, 0x00, 0x30, 0x1A, 0x96, 0xC2, 0xC0, 0x68, 0x11, 0x01, 0xE0, 0x3C,
    0x07, 0x80, 0xF0, 0x39, 0x24, 0xE6, 0xEA, 0xAB, 0x76, 0x5E, 0xCB, 0xD9, 0xFB, 0x57, 0x2A, 0xB4,
    0x60, 0x91, 0x6B, 0x4B, 0x9A, 0xE1, 0x5D, 0x60, 0xC2, 0xD1, 0x7D, 0xC7, 0x59, 0x18, 0x8A, 0x54,
    0xDE, 0x2C, 0x76, 0x00, 0x03, 0x00, 0x83, 0xA4, 0xCC, 0x01, 0xDD, 0x0C, 0x01, 0xE0, 0x50, 0x1A,
    0x96, 0xC3, 0x40, 0x78, 0x11, 0x01, 0xE0, 0x3C, 0x07, 0x81, 0xA8, 0xA7, 0x37, 0x55, 0x5B, 0xB2,
    0xF6, 0x3E, 0xC7, 0xD9, 0x39, 0x2D, 0xA3, 0x04, 0x8B, 0x5A, 0x5E, 0xCF, 0x8A, 0xAB, 0x06, 0x16,
    0x8B, 0xEE, 0x52, 0xD8, 0xC4, 0x52, 0xA6, 0xF1, 0x6B, 0xB4, 0x00, 0x01, 0x80, 0x7E, 0x6E, 0xED,
    0x01, 0xC0, 0x7E, 0x4E, 0xAE, 0x03, 0xF4, 0x85, 0x60, 0x1F, 0x9B, 0xAB, 0x00, 0xFC, 0x9D, 0x4C,
    0x07, 0xE0, 0x68, 0x80, 0x34, 0x97, 0x9F, 0x10, 0x19, 0xB6, 0xCA, 0xC0, 0x78, 0x0F, 0x02, 0x40,
    0x6A, 0x5B, 0x11, 0x02, 0x20, 0x34, 0x0E, 0x49, 0x55, 0x42, 0xA6, 0x3E, 0xCF, 0xB2, 0xF6, 0x6E,
    0x51, 0x44, 0xC3, 0x2E, 0x36, 0xCB, 0x35, 0x3E, 0xD2, 0x00, 0xD4, 0x39, 0x9C, 0x03, 0x80, 0x70,
    0x0E, 0x00, 0x00, 0x02, 0x80, 0x99, 0xE1, 0x88, 0x02, 0x1D, 0x0C, 0x1E, 0x70, 0x18, 0xC6, 0xDB,
    0x80, 0xC6, 0x37, 0x5C, 0x06, 0x2F, 0x98, 0xD0, 0x0A, 0x06, 0x25, 0x53, 0x6A, 0x5D, 0xD9, 0xF9,
    0x99, 0x71, 0x2A, 0xDB, 0xB1, 0x0E, 0xAB, 0x7D, 0xCF, 0xAA, 0x99, 0x0C, 0x66, 0x94, 0x5F, 0xEA,
    0xA7, 0x42, 0xD1, 0x6D, 0x57, 0xDA, 0xA9, 0xF5, 0xA3, 0x4A, 0x75, 0xF4, 0xAA, 0x75, 0xD0, 0xDE,
    0x2A, 0x3A, 0x6B, 0xE4, 0xE6, 0x78, 0x48, 0x76, 0x00, 0x30, 0x0A, 0x3D, 0xD5, 0x40, 0x4A, 0x74,
    0x82, 0x01, 0x70, 0x68, 0xF0, 0x10, 0x18, 0xC6, 0xDA, 0xC0, 0x68, 0x0C, 0x03, 0x18, 0xDD, 0x70,
    0x18, 0xBE, 0x63, 0x40, 0x28, 0x18, 0x95, 0xCC, 0x87, 0x79, 0x55, 0x6E, 0x25, 0x53, 0xAA, 0xA6,
    0x09, 0x6F, 0x89, 0x53, 0x1D, 0xBA, 0x70, 0x77, 0xE2, 0x54, 0xCB, 0x6A, 0x5C, 0x5D, 0xFA, 0x95,
    0x70, 0xC8, 0x79, 0x37, 0xBE, 0xA5, 0x6B, 0xE5, 0x9F, 0x4D, 0x6D, 0x89, 0x5F, 0x95, 0x58, 0x67,
    0x5E, 0x03, 0x00, 0x84, 0x54, 0xE0, 0x05, 0x30, 0xE9, 0x49, 0xDD, 0x24, 0x79, 0x68, 0x92, 0x62,
    0xA7, 0xE8, 0xA1, 0xDD, 0xE6, 0xD8, 0xB1, 0xF9, 0x37, 0x69, 0x69, 0xBD, 0xAE, 0x7E, 0x8D, 0xDA,
    0x56, 0x6F, 0x4B, 0xDB, 0x82, 0x88, 0x98, 0x97, 0x42, 0xF6, 0xE0, 0x2A, 0x9A, 0x24, 0x6E, 0xC1,
    0xB7, 0x35, 0x99, 0x87, 0x23, 0x2E, 0x8F, 0x4D, 0x1D, 0x59, 0xC6, 0x00, 0x00, 0x29, 0x64, 0xC9,
    0x47, 0x87, 0x56, 0x78, 0x07, 0x01, 0x9B, 0x6C, 0xC4, 0x08, 0x81, 0x20, 0x35, 0x2D, 0x89, 0x81,
    0x10, 0x35, 0x1C, 0x17, 0x08, 0xB2, 0xF7, 0xEE, 0x48, 0xF6, 0x3C, 0xC4, 0x94, 0xF7, 0x72, 0xEA,
    0x57, 0x2E, 0x25, 0xE1, 0x27, 0xBD, 0xA3, 0xB5, 0x76, 0xEE, 0xDD, 0xBB, 0xE9, 0x7C, 0x60, 0x90,
    0xEC, 0x9E, 0xD6, 0xDE, 0xBC, 0x11, 0x7A, 0x0F, 0x0F, 0x4D, 0x0E, 0xB9, 0x61, 0x56, 0x32, 0x3C,
    0xB3, 0xAD, 0xD7, 0xCA, 0x28, 0xEA, 0x8B, 0xE2, 0x10, 0x07, 0x5B, 0xC7, 0x80, 0x20, 0x1F, 0xA3,
    0x23, 0x40, 0x68, 0x0D, 0x01, 0xA0, 0x14, 0x0D, 0x54, 0xF7, 0xD5, 0xBA, 0x45, 0x8F, 0xB2, 0xF6,
    0x5E, 0xCB, 0xC9, 0xA1, 0x1A, 0xA6, 0x48, 0xCD, 0xF6, 0x7E, 0x55, 0x09, 0xCD, 0x32, 0x3E, 0x73,
    0xB5, 0xF2, 0xD9, 0x51, 0xA1, 0x96, 0xB3, 0x9B, 0xBB, 0x17, 0xC6, 0x48, 0xEB, 0x17, 0x9B, 0xBD,
    0xF4, 0xBE, 0x51, 0x36, 0x76, 0xAE, 0xE2, 0x30, 0x2A, 0xE6, 0x21, 0xDE, 0x46, 0x9B, 0xCD, 0x79,
    0x93, 0x4F, 0x2D, 0x0A, 0x49, 0x5F, 0xA7, 0x4B, 0x32, 0xB3, 0x8D, 0x96, 0xC5, 0xEA, 0xAA, 0x8D,
    0x72, 0x55, 0xF1, 0xAA, 0xB1, 0x96, 0x48, 0x7C, 0x10, 0x1F, 0x6A, 0x1A, 0xC0, 0x78, 0x0F, 0x01,
    0xA0, 0x24, 0x05, 0x81, 0xC9, 0x61, 0x3A, 0xA6, 0x49, 0xAE, 0x76, 0x7E, 0xCF, 0xDA, 0x3B, 0x47,
    0x2A, 0x85, 0x6A, 0x55, 0x62, 0xB9, 0xCB, 0x23, 0x45, 0x86, 0x6A, 0xCA, 0xEE, 0xDC, 0x5D, 0x29,
    0xA3, 0x3B, 0xD6, 0x53, 0x37, 0xDE, 0xFA, 0x5F, 0x07, 0x2A, 0x3C, 0x47, 0x89, 0x17, 0x0D, 0x95,
    0x0F, 0x52, 0x99, 0x4D, 0xC9, 0xB9, 0x57, 0xF9, 0xA8, 0x2E, 0x8C, 0xDD, 0x7D, 0xEA, 0x03, 0x67,
    0x44, 0x70, 0x1F, 0x72, 0x9C, 0x40, 0x58, 0x1E, 0x00, 0x00, 0x60, 0x1F, 0x51, 0x3A, 0xC0, 0x70,
    0x1F, 0x73, 0x22, 0x80, 0xF2, 0x19, 0xB9, 0x24, 0x5C, 0xEC, 0xED, 0x1E, 0x4E, 0x47, 0x39, 0xB3,
    0x33, 0x47, 0x93, 0x51, 0xCE, 0xEA, 0x8A, 0xB3, 0xDD, 0x00, 0x30, 0x0C, 0xA4, 0x14, 0x00, 0xE3,
    0x2A, 0x20, 0x07, 0xDA, 0xEA, 0xA0, 0x3A, 0x83, 0x31, 0x00, 0xF0, 0x55, 0x03, 0x80, 0xAC, 0x68,
    0xB1, 0x34, 0x57, 0x05, 0x2D, 0x56, 0x3D, 0x55, 0x49, 0x31, 0x9C, 0x47, 0xB2, 0x96, 0xD2, 0xEA,
    0x65, 0x15, 0xDB, 0x85, 0xF2, 0x82, 0x0B, 0x75, 0xC6, 0xD9, 0x8C, 0x98, 0x47, 0x55, 0x50, 0xBF,
    0x30, 0x1F, 0x9B, 0x22, 0x40, 0x48, 0x0B, 0x01, 0xA0, 0x2C, 0x08, 0x4A, 0x96, 0xAC, 0x52, 0x33,
    0x7A, 0x33, 0x6A, 0x66, 0x3B, 0xB5, 0x8D, 0xEC, 0xBB, 0x9B, 0x33, 0xE6, 0x8C, 0xD5, 0x9B, 0x29,
    0x62, 0x6B, 0x98, 0xA3, 0x6E, 0x4A, 0xDD, 0x0B, 0x91, 0xAD, 0xB5, 0x0A, 0x53, 0x46, 0xF7, 0x5E,
    0x7E, 0xF4, 0x28, 0xCA, 0x99, 0x97, 0x9E, 0xDE, 0x4A, 0xAE, 0xDD, 0xF0, 0x00, 0x00, 0x20, 0x1F,
    0xAB, 0x12, 0x40, 0x58, 0x0B, 0x01, 0x60, 0x1C, 0x00, 0x94, 0x6B, 0x62, 0x5D, 0x9A, 0xC9, 0x29,
    0x2B, 0xD1, 0x79, 0x26, 0x72, 0x5C, 0xCB, 0x99, 0x37, 0x26, 0xE5, 0xDC, 0xB4, 0xA9, 0x6B, 0xCB,
    0x92, 0x56, 0xF5, 0x2B, 0x5B, 0xDF, 0xD5, 0x59, 0x67, 0x2B, 0x57, 0x73, 0xCB, 0x46, 0x91, 0xC6,
    0xF7, 0x60, 0xEE, 0x0B, 0x63, 0x2D, 0x89, 0xF8, 0x3B, 0x17, 0x74, 0xD5, 0xEA, 0x1E, 0x8D, 0xCB,
    0xC0, 0x50, 0x1F, 0x60, 0xA3, 0x40, 0x78, 0x0F, 0x00, 0xA0, 0x03, 0xA5, 0x2C, 0xA4, 0xE1, 0xDA,
    0x5B, 0x69, 0x9E, 0xA9, 0xF8, 0x35, 0xB5, 0xEE, 0x6E, 0xCD, 0xA9, 0x9A, 0xCA, 0xF7, 0x27, 0xB1,
    0xEA, 0x66, 0x33, 0xE9, 0x55, 0xA5, 0xBB, 0x9E, 0xB5, 0x5A, 0xC7, 0x1B, 0xA9, 0x9C, 0xAC, 0x98,
    0xB5, 0xAD, 0xC8, 0x65, 0x7D, 0x16, 0x2F, 0x6C, 0x22, 0x61, 0x2A, 0xC9, 0x4C, 0x1B, 0x67, 0x36,
    0xAC, 0x74, 0xCF, 0x08, 0x61, 0x08, 0x53, 0x18, 0x44, 0xC9, 0x80, 0x7D, 0xA8, 0x4F, 0x02, 0x00,
    0x7E, 0xAC, 0x0E, 0x03, 0xF8, 0x50, 0x18, 0x00, 0x0E, 0x02, 0xA7, 0x68, 0x60, 0x1C, 0x72, 0x30,
    0x78, 0x00, 0x00, 0x60, 0x1F, 0x8A, 0x1C, 0x80, 0xFB, 0x94, 0xE0, 0x07, 0xE2, 0xA7, 0x20, 0x3E,
    0xE5, 0x38, 0x01, 0xF8, 0xB3, 0x44, 0x0E, 0x47, 0x13, 0xC5, 0xCB, 0x2C, 0xF3, 0xB1, 0xF6, 0x4D,
    0x4A, 0xD5, 0x5D, 0x53, 0x9B, 0xF7, 0x73, 0x6E, 0xAC, 0xDB, 0x4B, 0xD1, 0x0A, 0xD9, 0x62, 0x9A,
    0xC3, 0x02, 0xEA, 0xEE, 0x49, 0xA5, 0x2D, 0xC1, 0x58, 0x93, 0x99, 0x0C, 0x8F, 0x2B, 0x46, 0x26,
    0xBD, 0xC2, 0xA3, 0xBB, 0x3C, 0x00, 0x00, 0x30, 0x1E, 0xAA, 0x02, 0x40, 0x48, 0x0B, 0x01, 0x60,
    0x34, 0x08, 0x49, 0x26, 0x55, 0xB4, 0x1C, 0xB7, 0xB2, 0x76, 0x6E, 0x4C, 0xE8, 0x5D, 0xAB, 0x1D,
    0x93, 0xB3, 0x6E, 0x7B, 0x54, 0xD9, 0xA5, 0x2A, 0x14, 0xB2, 0x35, 0xC6, 0xD8, 0xDB, 0x1B, 0x5F,
    0x73, 0x6E, 0x4D, 0xE5, 0xBF, 0xC0, 0x60, 0x1C, 0x6B, 0x2B, 0xC0, 0x80, 0x1F, 0x7A, 0xAC, 0x00,
    0xFC, 0x5D, 0xA2, 0x04, 0xC0, 0xD3, 0xEE, 0x6B, 0x5B, 0xAC, 0xB6, 0xF9, 0x1B, 0xE4, 0xFB, 0x08,
    0xF2, 0xDE, 0xC7, 0xC8, 0xE1, 0x36, 0xE7, 0x65, 0x96, 0x76, 0x3E, 0x48, 0xEA, 0x37, 0x33, 0xAD,
    0xB7, 0x53, 0x32, 0xCD, 0xCD, 0x29, 0x34, 0xC5, 0x4D, 0xB2, 0xE3, 0x60, 0xEB, 0x71, 0x63, 0xEA,
    0x96, 0x98, 0x96, 0xEC, 0xDF, 0x8B, 0xE5, 0x53, 0x66, 0x8C, 0xB0, 0xDE, 0xFB, 0x5F, 0x4C, 0x13,
    0xAC, 0x6C, 0x6A, 0x97, 0x4E, 0xC0, 0xCD, 0x1C, 0x92, 0xA5, 0xB5, 0xAB, 0x84, 0x2D, 0xD2, 0xD9,
    0x63, 0x98, 0x67, 0xEF, 0x09, 0x4F, 0x30, 0x1E, 0x62, 0x2A, 0xC0, 0x78, 0x11, 0x00, 0x60, 0x00,
    0x03, 0x00, 0x55, 0x52, 0xF9, 0x3C, 0x2C, 0xCE, 0x8D, 0x52, 0xBE, 0xCF, 0xCA, 0x25, 0x66, 0x65,
    0x58, 0xD2, 0xEA, 0xA9, 0xC9, 0x4D, 0x62, 0x35, 0x79, 0xAE, 0xD6, 0xC6, 0x08, 0x8C, 0xF5, 0xA3,
    0xAD, 0xCA, 0x03, 0xEB, 0x65, 0x88, 0x11, 0x01, 0xE0, 0x44, 0x07, 0x81, 0xE0, 0x03, 0x01, 0x90,
    0x35, 0x30, 0x0F, 0x31, 0x61, 0xC0, 0x7E, 0x0A, 0xEE, 0x03, 0xF1, 0x68, 0x70, 0x1F, 0x74, 0xCB,
    0x00, 0x33, 0xA5, 0xC0, 0x39, 0x24, 0x2C, 0xCE, 0x8D, 0x52, 0xBE, 0xCD, 0xC9, 0xE5, 0x66, 0x65,
    0x58, 0xD2, 0xF2, 0x79, 0xC9, 0x4D, 0x62, 0x35, 0x7B, 0x9A, 0xD3, 0x46, 0x08, 0x8C, 0xF5, 0xA3,
    0xBC, 0xCC, 0x03, 0xED, 0x25, 0x70, 0x1F, 0x72, 0x24, 0x00, 0xFB, 0x19, 0xD8, 0x05, 0x8C, 0xCF,
    0x2C, 0x19, 0x07, 0x66, 0x98, 0xED, 0x4F, 0x09, 0xE5, 0x1C, 0x99, 0x93, 0x20, 0xCE, 0xB1, 0x5E,
    0x08, 0x65, 0xD5, 0xBC, 0x2A, 0x1A, 0xFD, 0x80, 0x6C, 0x66, 0xAB, 0x01, 0x40, 0x74, 0xC4, 0xAA,
    0x03, 0xE6, 0x15, 0x40, 0x1F, 0x49, 0xB2, 0x00, 0xC9, 0x19, 0x83, 0xC0, 0x80, 0x1F, 0x7A, 0xB4,
    0x80, 0xFC, 0x59, 0xE4, 0x07, 0xE4, 0xD0, 0xE0, 0x3A, 0xB2, 0x70, 0x00, 0x30, 0x0D, 0x44, 0x37,
    0x25, 0x64, 0x25, 0xD5, 0xEA, 0x55, 0xC9, 0x9B, 0x19, 0x87, 0x7B, 0x95, 0xF2, 0x77, 0x46, 0x61,
    0x9E, 0xA5, 0x7C, 0xA1, 0xF2, 0x98, 0x57, 0x8B, 0x67, 0x2A, 0x7C, 0x26, 0x59, 0x62, 0x67, 0xCA,
    0xA1, 0x09, 0xA8, 0x48, 0x7D, 0xEA, 0xB6, 0x4E, 0xA6, 0x0B, 0x5E, 0x58, 0xB5, 0x53, 0xCA, 0x72,
    0xC7, 0x9D, 0xB0, 0x4D, 0xF2, 0x60, 0xE5, 0xE7, 0x4C, 0x51, 0x7B, 0x9B, 0x08, 0x79, 0xCB, 0x23,
    0xDE, 0xE2, 0xC1, 0xDB, 0x6F, 0xC9, 0x99, 0x25, 0xFE, 0xD4, 0x45, 0x2A, 0x66, 0x68, 0x9C, 0x34,
    0x34, 0x34, 0xBC, 0x50, 0x1F, 0x80, 0xA3, 0x40, 0x88, 0x13, 0x00, 0x60, 0x00, 0x08, 0x04, 0x67,
    0x18, 0x40, 0x1E, 0xF6, 0xD4, 0x91, 0x31, 0xBA, 0x96, 0x29, 0xAE, 0x65, 0xDC, 0xBC, 0x96, 0x14,
    0x66, 0x85, 0x7D, 0x67, 0x66, 0xDC, 0xFB, 0xA3, 0x55, 0x46, 0xCE, 0x8F, 0x2D, 0x75, 0xB5, 0xCF,
    0xE1, 0xBC, 0x33, 0xDD, 0x2B, 0x84, 0xF1, 0x96, 0x2F, 0xDB, 0x94, 0x42, 0x66, 0xE1, 0x94, 0x3A,
    0xEB, 0x02, 0x72, 0x67, 0x65, 0x0E, 0x1B, 0x49, 0x3C, 0x89, 0xB9, 0x78, 0x50, 0x1F, 0x82, 0x43,
    0x00, 0xFC, 0x9A, 0x1E, 0x03, 0x40, 0x00, 0x80, 0x15, 0x73, 0xB7, 0x21, 0x83, 0xA6, 0x19, 0xA2,
    0x57, 0xC9, 0x1B, 0x48, 0xC7, 0x39, 0x99, 0xF6, 0x5E, 0x4C, 0xE9, 0xC6, 0x41, 0xB5, 0xB3, 0x53,
    0xBE, 0xD0, 0xF4, 0xE3, 0xA5, 0xED, 0x7A, 0xB9, 0xF8, 0x75, 0x98, 0x2D, 0x25, 0xF0, 0xB6, 0x30,
    0xB1, 0x3C, 0xC3, 0x46, 0xE1, 0x84, 0x2E, 0x0B, 0x0F, 0x12, 0x30, 0x09, 0x01, 0x86, 0x44, 0x38,
    0x05, 0xAD, 0xD0, 0x60, 0x78, 0x60, 0x1E, 0x83, 0xCB, 0x40, 0x88, 0x0D, 0x00, 0x02, 0x40, 0x55,
    0x52, 0x9C, 0x96, 0x11, 0x85, 0x65, 0xAB, 0x5F, 0x25, 0x85, 0xDA, 0x11, 0xAE, 0xCB, 0xD9, 0xFB,
    0x46, 0x2D, 0x6D, 0x9A, 0x9D, 0xAE, 0x35, 0x0C, 0x19, 0x95, 0xA5, 0x6D, 0x8D, 0x80, 0x01, 0x80,
    0x4C, 0x20, 0xC6, 0x07, 0x80, 0x00, 0x00, 0x70, 0x1B, 0x5A, 0xBC, 0x40, 0x88, 0x0F, 0x00, 0x02,
    0x00, 0x5D, 0xF0, 0xFA, 0xA1, 0xF2, 0xBD, 0x54, 0x89, 0x27, 0x68, 0xED, 0x5D, 0xAB, 0xB6, 0x76,
    0xCC, 0x5C, 0xDB, 0xE5, 0x29, 0xE3, 0x75, 0xF7, 0x80, 0x00, 0x20, 0x05, 0xBD, 0x9C, 0x60, 0x07,
    0x80, 0x00, 0x00, 0x60, 0x1B, 0x53, 0xA3, 0xC0, 0x88, 0x11, 0x01, 0xE0, 0x62, 0x46, 0x2E, 0x69,
    0x9D, 0xED, 0x59, 0x9A, 0xB4, 0x0E, 0xA0, 0x70, 0x0D, 0xAC, 0xB6, 0xA5, 0x63, 0xA6, 0xD9, 0x56,
    0xD7, 0xC9, 0x9C, 0xC9, 0xC6, 0x55, 0x9A, 0x62, 0x65, 0xB6, 0xB1, 0x55, 0xAE, 0x99, 0x9B, 0x34,
    0x5A, 0xA5, 0x32, 0xED, 0x59, 0x6E, 0x78, 0xAD, 0x6C, 0xAA, 0x46, 0x6B, 0xA6, 0x2B, 0x63, 0x2A,
    0x55, 0xD6, 0xE9, 0xAB, 0x1A, 0xB9, 0xA4, 0x75, 0xBA, 0x62, 0xC7, 0xAA, 0x65, 0x19, 0x6E, 0xB6,
    0xB5, 0xCD, 0xA8, 0x26, 0x6B, 0x62, 0x80, 0xA8, 0x09, 0xDE, 0x04, 0x40, 0x88, 0x00, 0x06, 0x01,
    0xC8, 0x78, 0x60, 0x16, 0x44, 0x30, 0x78, 0x00, 0x00, 0x20, 0x1E, 0xB2, 0x13, 0x40, 0x70, 0x1F,
    0xA2, 0x0B, 0x80, 0xFD, 0x59, 0x5E, 0x07, 0x28, 0x8A, 0x66, 0x4D, 0xE2, 0xD7, 0xDA, 0xB7, 0x50,
    0x30, 0x07, 0xAD, 0xA6, 0xD2, 0x2D, 0xD9, 0x4A, 0xAF, 0x6B, 0xDC, 0xBD, 0x9B, 0x73, 0x62, 0x74,
    0xBB, 0x64, 0xE2, 0xAD, 0x59, 0x9E, 0xF3, 0xD6, 0xA7, 0x01, 0xDA, 0x19, 0xBC, 0x06, 0x01, 0xFC,
    0x19, 0x00, 0x48, 0x0D, 0x39, 0x5E, 0x00, 0x69, 0x2E, 0xF8, 0xAA, 0x8E, 0x76, 0x39, 0x39, 0xB7,
    0x6C, 0xED, 0xD8, 0xBD, 0x8F, 0x58, 0x98, 0x5C, 0xDD, 0x6F, 0x86, 0x29, 0x83, 0xCC, 0xCB, 0x58,
    0x9D, 0x8A, 0x24, 0xED, 0x32, 0xF5, 0xB6, 0x62, 0xA6, 0xD3, 0xB5, 0x25, 0x85, 0x98, 0xB1, 0x8C,
    0xD6, 0x6B, 0x22, 0xF0, 0x00, 0x00, 0x00, 0x02, 0x01, 0x34, 0xA2, 0xB0, 0x0D, 0x67, 0x2A, 0x20,
    0x44, 0x0D, 0x4B, 0x7A, 0x6E, 0x75, 0x4A, 0x8F, 0x90, 0x52, 0x35, 0x02, 0x2A, 0xB5, 0xD4, 0xB2,
    0x7C, 0x31, 0x44, 0xAD, 0xF5, 0x2C, 0x1F, 0x0C, 0x98, 0xEF, 0x7D, 0x4E, 0xE7, 0xC2, 0xB6, 0xBB,
    0xBF, 0x55, 0x3D, 0xD4, 0x8D, 0xAA, 0xEF, 0xC5, 0x4E, 0x9C, 0x1C, 0x61, 0xBD, 0xED, 0x5B, 0x2A,
    0xE9, 0x38, 0xB2, 0xF9, 0xDA, 0xEB, 0x9B, 0x92, 0x7A, 0x66, 0xBA, 0x2A, 0xF5, 0x51, 0x5E, 0x5A,
    0x0C, 0x4A, 0xBD, 0xD4, 0x45, 0x75, 0x85, 0x8A, 0x2F, 0x7D, 0x99, 0x18, 0xDD, 0xD6, 0x00, 0x00,
    0x1E, 0x90, 0x1A, 0x33, 0x3C, 0x00, 0xF4, 0xA1, 0x69, 0x0E, 0x63, 0x0A, 0x46, 0x96, 0x4D, 0x49,
    0x89, 0x41, 0x83, 0xC7, 0xB7, 0xB2, 0x72, 0x5C, 0x45, 0x4C, 0x62, 0x7C, 0x9B, 0x9F, 0x35, 0x5A,
    0xBC, 0x34, 0xCC, 0xEE, 0x73, 0x72, 0xB2, 0x8A, 0x33, 0x6D, 0x9A, 0x63, 0xAC, 0x62, 0x11, 0xF2,
    0xD5, 0xAA, 0xAB, 0x1C, 0x64, 0x7C, 0xC4, 0x66, 0xF8, 0x00, 0x00, 0x90, 0x17, 0x5B, 0xBC, 0x00,
    0xB3, 0xAD, 0x18, 0x04, 0xA8, 0xAD, 0x88, 0xE5, 0x65, 0x74, 0x8C, 0x75, 0xF6, 0x4E, 0x4B, 0x4B,
    0xAB, 0x14, 0x55, 0x97, 0xB3, 0x6E, 0x8C, 0x57, 0x17, 0x03, 0x6D, 0x4B, 0x2E, 0x37, 0xB3, 0x19,
    0x26, 0x56, 0x19, 0x94, 0x60, 0x10, 0x02, 0x2E, 0x72, 0x68, 0x08, 0x02, 0x50, 0x60, 0x0F, 0x80,
    0x1A, 0x6C, 0xA4, 0x40, 0x68, 0x1C, 0x7E, 0xD0, 0x64, 0x27, 0x8C, 0xEF, 0x64, 0xEC, 0xB8, 0x9B,
    0x31, 0x33, 0x4B, 0x9C, 0x96, 0x68, 0xCD, 0x57, 0xB3, 0x37, 0x5A, 0xEC, 0x45, 0x0C, 0xE6, 0x2A,
    0x90, 0xBD, 0x6D, 0x2D, 0x96, 0xA4, 0xA3, 0x70, 0x66, 0x0B, 0x61, 0x74, 0x2D, 0x36, 0xD9, 0x82,
    0x56, 0x99, 0x29, 0x2E, 0x25, 0x60, 0x86, 0x26, 0xCA, 0xD3, 0x6D, 0x98, 0x3C, 0xAC, 0xD3, 0x4F,
    0x2A, 0x00, 0x0F, 0x09, 0x01, 0xA5, 0x42, 0x38, 0x0B, 0x36, 0x12, 0x91, 0xC6, 0xAE, 0xC9, 0x15,
    0x1D, 0xEC, 0xBD, 0x97, 0xB2, 0xF2, 0x68, 0x5A, 0x21, 0x1E, 0xAB, 0x9D, 0x9F, 0x94, 0x3A, 0x73,
    0x6A, 0x93, 0x64, 0xED, 0x58, 0xAD, 0x76, 0xAB, 0x55, 0x8C, 0xDE, 0x6D, 0xB5, 0xA9, 0xC5, 0x5A,
    0x2C, 0xD8, 0xEB, 0x75, 0x2E, 0x46, 0xAA, 0x94, 0xE6, 0x47, 0x0B, 0x8F, 0xD9, 0x95, 0x2B, 0x8A,
    0xB2, 0xF3, 0x76, 0x1D, 0x52, 0xD3, 0x8E, 0xBD, 0x52, 0x68, 0x87, 0xA4, 0x97, 0x80, 0x50, 0x0D,
    0x3B, 0x2B, 0x80, 0xC1, 0x61, 0x14, 0x04, 0xA1, 0x08, 0x80, 0x1D, 0x14, 0x4E, 0x47, 0x2C, 0xD3,
    0xAA, 0x45, 0x77, 0xB2, 0x76, 0x5E, 0xCD, 0xD9, 0xF9, 0x44, 0x74, 0xEE, 0x6F, 0x11, 0xCE, 0xD7,
    0xBB, 0x73, 0x74, 0x2E, 0x7B, 0x42, 0xD2, 0x5E, 0xC5, 0x1B, 0xA1, 0x7B, 0xDA, 0x18, 0x91, 0x32,
    0x97, 0x5E, 0xE6, 0x0D, 0xA3, 0xD4, 0xA5, 0x97, 0xA9, 0x87, 0x69, 0x17, 0x21, 0x55, 0xE7, 0x72,
    0xC3, 0x37, 0xC6, 0xFC, 0x00, 0x00, 0x70, 0x15, 0x53, 0x2B, 0x80, 0x9A, 0x25, 0x75, 0x24, 0x17,
    0x2B, 0x0F, 0x11, 0x2E, 0x49, 0x09, 0xD2, 0xB3, 0xC5, 0x7B, 0x92, 0x46, 0x94, 0x8C, 0xF1, 0xA5,
    0xD4, 0x92, 0xDC, 0x9B, 0x2C, 0x59, 0x1D, 0x3C, 0x24, 0xE0, 0x8B, 0x31, 0xC6, 0x49, 0xA8, 0xED,
    0x30, 0x9A, 0x69, 0x80, 0x7E, 0x8A, 0xAF, 0x01, 0xC0, 0x7E, 0xCC, 0x56, 0x83, 0xFA, 0x94, 0x43,
    0x64, 0xFE, 0xA7, 0x8B, 0x29, 0x99, 0x1B, 0xD7, 0xA9, 0xA2, 0xBA, 0x67, 0x37, 0xF1, 0xEA, 0x68,
    0xB6, 0x59, 0xC5, 0xFC, 0x96, 0x9F, 0x47, 0x49, 0x64, 0x69, 0xAB, 0x80, 0xF3, 0x0D, 0x1A, 0x03,
    0xC0, 0x58, 0x1A, 0x9A, 0x4E, 0xA5, 0x82, 0x3C, 0xDE, 0xE7, 0xDC, 0xF9, 0xA2, 0xD4, 0x39, 0x65,
    0x36, 0x55, 0x5E, 0x8D, 0x50, 0x03, 0xD7, 0x80, 0x78, 0x0E, 0x03, 0xD5, 0x70, 0x10, 0x0C, 0x22,
    0xD2, 0x00, 0xA3, 0x81, 0xA0, 0x06, 0x28, 0xF1, 0xAB, 0x22, 0xE7, 0x74, 0x58, 0x73, 0x6E, 0xC9,
    0x5C, 0xC7, 0x33, 0xA4, 0x2A, 0x9E, 0x57, 0xAD, 0xAE, 0xE8, 0xCC, 0xED, 0xA5, 0xEE, 0x7D, 0x50,
    0x3C, 0x38, 0xEF, 0x8D, 0x32, 0x7B, 0xAA, 0x0E, 0x1E, 0x52, 0xCC, 0xDA, 0xE5, 0x87, 0x09, 0x8E,
    0xB7, 0x24, 0xE6, 0x8D, 0x64, 0xE6, 0x68, 0x17, 0x91, 0xA8, 0x0C, 0xA0, 0xD9, 0x80, 0x7E, 0x8A,
    0x0F, 0x01, 0x00, 0x79, 0xE2, 0x49, 0x01, 0x40, 0x7E, 0x80, 0x3E, 0xA5, 0x93, 0x7B, 0xBB, 0x11,
    0x39, 0x67, 0x65, 0x2D, 0x44, 0x55, 0x95, 0x6E, 0x47, 0x2B, 0x0E, 0xE8, 0x35, 0x6B, 0x76, 0x4E,
    0xBE, 0x57, 0x28, 0x3D, 0x22, 0xB6, 0x97, 0x95, 0x4E, 0xF1, 0x26, 0x97, 0x24, 0xED, 0x5D, 0xA3,
    0xB4, 0x76, 0x8E, 0xD5, 0xDA, 0xB9, 0x6C, 0xEE, 0xF4, 0x6B, 0x11, 0xCE, 0xDD, 0xDB, 0xB7, 0x7D,
    0xF0, 0x96, 0x0D, 0x8A, 0x4B, 0x3B, 0xB8, 0xE1, 0x83, 0x9E, 0x32, 0xEB, 0x2E, 0xB7, 0x60, 0xD7,
    0x0C, 0xB2, 0xD3, 0xB5, 0xF8, 0x36, 0xF5, 0xDC, 0x6B, 0xA3, 0x18, 0x44, 0x1A, 0x6C, 0x80, 0xA7,
    0xA3, 0x21, 0x61, 0x5D, 0x39, 0xE0, 0x44, 0xEA, 0x8A, 0xAA, 0xBE, 0x48, 0x99, 0x62, 0xCE, 0xEE,
    0xCE, 0xF6, 0xA6, 0x5C, 0xF4, 0x1C, 0xAC, 0x9D, 0x89, 0x57, 0xAD, 0xCE, 0x84, 0xF3, 0x6A, 0x85,
    0xF2, 0x7C, 0x3A, 0x13, 0x4C, 0xE9, 0x5C, 0xA2, 0xD2, 0xAC, 0xDE, 0x5E, 0x57, 0x0A, 0xBC, 0x24,
    0x56, 0x77, 0x95, 0xC7, 0x0F, 0x29, 0x13, 0x5C, 0xE5, 0x52, 0xCC, 0xD2, 0x34, 0x47, 0x39, 0x54,
    0x77, 0x12, 0x8F, 0x2D, 0xCE, 0x55, 0x0C, 0xC4, 0x2B, 0x5B, 0x6F, 0x95, 0x3E, 0x8F, 0x0C, 0xD4,
    0x92, 0xD5, 0x52, 0x73, 0x33, 0xA3, 0x38, 0xE9, 0x6B, 0x18, 0xC6, 0xC9, 0x52, 0x50, 0x68, 0x0D,
    0x00, 0xE0, 0x07, 0x80, 0x00, 0x00, 0xA5, 0xD4, 0x8A, 0xA4, 0x13, 0x3E, 0xF9, 0x54, 0x1E, 0xB3,
    0x0B, 0x5E, 0x5E, 0x50, 0xF8, 0xB4, 0xBB, 0xDE, 0x77, 0x94, 0x36, 0x12, 0xF3, 0x17, 0x94, 0xE5,
    0x0C, 0x84, 0xBC, 0xC6, 0x53, 0x50, 0x02, 0x1D, 0x15, 0xA8, 0xE6, 0xF6, 0x57, 0x57, 0xD6, 0x72,
    0xC9, 0x42, 0x11, 0x55, 0xFD, 0xBC, 0xB6, 0x92, 0x74, 0x64, 0x7F, 0x6E, 0xAE, 0x9C, 0x59, 0x15,
    0x63, 0xEB, 0x8B, 0xE9, 0x36, 0x54, 0x56, 0xDE, 0x5B, 0x09, 0xC5, 0x94, 0xD1, 0xB6, 0x76, 0xC2,
    0x92, 0x65, 0x52, 0x3B, 0xF5, 0xAF, 0xA3, 0x99, 0x1C, 0xCF, 0xE7, 0x4B, 0xE8, 0x98, 0x47, 0x34,
    0xBD, 0xA8, 0x0E, 0x20, 0x8D, 0x60, 0x30, 0x0F, 0xCD, 0x4E, 0x00, 0x60, 0xC6, 0xC6, 0x00, 0xEC,
    0x6B, 0x40, 0x0B, 0x81, 0xE6, 0xA8, 0x9D, 0x19, 0x55, 0x6B, 0x47, 0xD9, 0x39, 0x1C, 0xE2, 0xCB,
    0x07, 0x76, 0x4D, 0x45, 0x26, 0x39, 0x51, 0x46, 0x6E, 0x91, 0x45, 0xE1, 0x8F, 0x2E, 0xAC, 0xA4,
    0x4D, 0x4A, 0x3B, 0xE4, 0x36, 0xD5, 0x11, 0x98, 0xF3, 0xEC, 0xEE, 0x40, 0x80, 0x11, 0x9B, 0x5C,
    0x22, 0x5D, 0x4E, 0xDA, 0x4A, 0x55, 0x58, 0xA5, 0x12, 0x74, 0x72, 0xF2, 0x57, 0x46, 0x46, 0x6D,
    0x24, 0x4C, 0xAA, 0xD5, 0x91, 0x9F, 0x65, 0x54, 0xE8, 0xED, 0xA4, 0x4B, 0xC9, 0x64, 0x2B, 0xCE,
    0xF1, 0x0A, 0xE7, 0x2F, 0x49, 0x36, 0x6D, 0x44, 0xF7, 0x53, 0xD2, 0x56, 0x4F, 0x51, 0xBE, 0x2F,
    0x50, 0xBF, 0x1A, 0xE5, 0x8F, 0x8B, 0x4D, 0x36, 0xD6, 0xF7, 0x7D, 0xF2, 0xAE, 0x60, 0x00, 0x00,
    0xC0, 0x32, 0xE4, 0x54, 0x01, 0x86, 0x2B, 0x18, 0x0A, 0x2D, 0x4F, 0xC0, 0x00, 0x00, 0x65, 0x8B,
    0x63, 0xA4, 0x16, 0x4A, 0xE9, 0x73, 0xDA, 0x51, 0x07, 0x17, 0x2E, 0x5D, 0x48, 0xAA, 0x41, 0x33,
    0xEF, 0x95, 0x3E, 0x2D, 0x2E, 0xF7, 0x9D, 0xED, 0x1D, 0xA3, 0xB4, 0x28, 0x04, 0xC1, 0xE0, 0xE0,
    0x5A, 0xB8, 0xCD, 0x60, 0x5A, 0x73, 0xDA, 0xB2, 0x11, 0x65, 0x36, 0x7E, 0xE5, 0xAD, 0x8A, 0xD9,
    0x8D, 0x97, 0x67, 0x00, 0x20, 0x55, 0x37, 0x80, 0xD0, 0x00, 0x55, 0x26, 0xAC, 0xEF, 0x42, 0xF5,
    0x9D, 0x16, 0x9D, 0x58, 0x69, 0x98, 0x0B, 0xA6, 0x27, 0x56, 0x6A, 0x9E, 0x03, 0x57, 0xC9, 0x9C,
    0xFA, 0xCA, 0x27, 0xB1, 0xF6, 0x6E, 0xD1, 0xCA, 0xE9, 0x56, 0x66, 0x39, 0xAD, 0xDF, 0x1B, 0xE5,
    0x5C, 0xE1, 0x9D, 0x2A, 0x8C, 0x8B, 0x56, 0x20, 0x00, 0x60, 0x13, 0x6C, 0x43, 0x00, 0xDC, 0x0D,
    0x03, 0xC0, 0x00, 0x00, 0x85, 0xAD, 0x61, 0xCB, 0x1B, 0xD8, 0x9D, 0x6B, 0x58, 0x70, 0x86, 0xFA,
    0x18, 0x5B, 0x47, 0x1A, 0xA3, 0x05, 0xF3, 0x54, 0x56, 0x8C, 0xA8, 0xA7, 0xB4, 0xE4, 0xF6, 0xC4,
    0x29, 0xA1, 0x6F, 0x75, 0x3D, 0xA4, 0x84, 0x75, 0x3D, 0xBC, 0xD5, 0x9A, 0xAF, 0x64, 0xAE, 0xBB,
    0x90, 0x8B, 0xAB, 0xB2, 0xEC, 0x22, 0x72, 0x6B, 0xF7, 0x86, 0x3E, 0xF6, 0x61, 0x27, 0x82, 0xD7,
    0x52, 0x2D, 0xB8, 0x78, 0x00, 0x00, 0x95, 0xCE, 0x7A, 0xC9, 0x93, 0xCA, 0xE3, 0x76, 0x2D, 0x93,
    0x56, 0xDD, 0x97, 0x6B, 0xDA, 0xB9, 0x54, 0x5C, 0xF7, 0x26, 0xF6, 0x5E, 0xD5, 0xAA, 0xA2, 0xF7,
    0xC9, 0x37, 0x92, 0xDA, 0xB6, 0x4E, 0xE5, 0x8B, 0x5A, 0x92, 0xB2, 0x4E, 0x78, 0x71, 0x56, 0x97,
    0x80, 0x45, 0x85, 0x74, 0x34, 0x35, 0xC8, 0xD1, 0x61, 0x97, 0x0F, 0x0B, 0x92, 0xB4, 0x56, 0x83,
    0xCB, 0xCB, 0x53, 0x8D, 0x15, 0xB1, 0x0C, 0xCE, 0xF0, 0xE3, 0x85, 0x55, 0x3B, 0x2A, 0x32, 0xCA,
    0xF9, 0x3C, 0xA4, 0xEC, 0xA5, 0x76, 0xBE, 0x4D, 0x2A, 0xB3, 0x9A, 0x75, 0xB3, 0x93, 0x4E, 0xAE,
    0xCA, 0x79, 0x6B, 0xE4, 0xD3, 0xBC, 0x32, 0x15, 0xD8, 0xF9, 0x35, 0x2D, 0x0C, 0xA5, 0x56, 0x3E,
    0x51, 0x3B, 0x43, 0xA1, 0x65, 0x8F, 0x95, 0x4E, 0xD0, 0xCA, 0x57, 0x23, 0xE5, 0x72, 0xB3, 0xC2,
    0x96, 0x49, 0x39, 0x64, 0xAA, 0xF2, 0xA7, 0x72, 0x4E, 0x5B, 0x09, 0xBC, 0x32, 0x54, 0x8E, 0x97,
    0x3D, 0xA1, 0xAA, 0xF2, 0xAA, 0x7D, 0xEE, 0xBD, 0xCD, 0x0D, 0x75, 0xA7, 0x5B, 0x2F, 0x53, 0x07,
    0x5D, 0x2D, 0xB6, 0xAB, 0xD0, 0xD4, 0xB6, 0x4D, 0x89, 0x42, 0xF5, 0xB6, 0x12, 0x17, 0x1B, 0x2E,
    0xBE, 0x2F, 0x53, 0x52, 0xA7, 0x20, 0x80, 0x5C, 0x51, 0x00, 0x00, 0x93, 0xC9, 0x6F, 0x2C, 0x8E,
    0xDB, 0xF0, 0x45, 0x66, 0x7C, 0x33, 0xB6, 0x46, 0xD1, 0x59, 0x9F, 0x0C, 0xE9, 0xB1, 0x34, 0x58,
    0x56, 0xCA, 0xCA, 0x54, 0x90, 0xF6, 0x1A, 0xB4, 0xA2, 0x19, 0xDA, 0x9C, 0x6E, 0xAE, 0x4F, 0x67,
    0x80, 0xCB, 0x2E, 0xE7, 0xEC, 0xFC, 0x9E, 0x75, 0x67, 0x45, 0xCB, 0x67, 0x67, 0xEC, 0xFD, 0xA3,
    0x95, 0x4B, 0x0A, 0xAC, 0xD7, 0x74, 0xE5, 0x51, 0xCA, 0xB3, 0x3B, 0xDD, 0x3B, 0x66, 0xAD, 0x87,
    0x4A, 0x61, 0x62, 0xC9, 0x9B, 0xAD, 0x73, 0xF8, 0x53, 0x2C, 0xF6, 0x49, 0x5C, 0xFD, 0x8E, 0x3A,
    0x5B, 0xA2, 0x17, 0x3F, 0x03, 0x50, 0x76, 0xD9, 0x65, 0xD0, 0xE1, 0x33, 0x13, 0xCA, 0x95, 0x6C,
    0x32, 0x62, 0xA8, 0xCE, 0xC4, 0x5B, 0x19, 0x3A, 0xA1, 0xBC, 0x88, 0x3C, 0x00, 0x00, 0x95, 0xAF,
    0x6B, 0x32, 0x91, 0xCD, 0x23, 0x6C, 0x6C, 0xA5, 0x72, 0x63, 0xB2, 0x19, 0x4D, 0x31, 0x54, 0xD3,
    0x0C, 0x90, 0xDB, 0x2C, 0x4A, 0xD7, 0x3A, 0x45, 0xC6, 0x2B, 0x52, 0x41, 0x0E, 0x8D, 0xF1, 0x61,
    0xC4, 0x97, 0x84, 0x08, 0x54, 0xEC, 0xF3, 0x2D, 0xE6, 0xAD, 0x14, 0xAA, 0xF1, 0x62, 0x18, 0x9D,
    0x66, 0x6C, 0xB5, 0xD4, 0x92, 0x89, 0x4C, 0xE8, 0xEF, 0x7D, 0xAF, 0xAB, 0xD8, 0x8E, 0x5F, 0x69,
    0x7B, 0xE9, 0x7D, 0x1C, 0xE6, 0x70, 0xBF, 0x4B, 0x5F, 0x96, 0x34, 0x0A, 0x3C, 0xFA, 0xD7, 0xFE,
    0xAC, 0x90, 0x0A, 0xF6, 0x80, 0x1D, 0x59, 0x1C, 0x00, 0xFD, 0x54, 0x9C, 0x07, 0xF5, 0x28, 0xC0,
    0x3F, 0x33, 0x43, 0x01, 0x14, 0x3A, 0xF8, 0x65, 0x88, 0x8A, 0xB2, 0xAD, 0xC8, 0xD5, 0x69, 0xDD,
    0x06, 0xAD, 0x6E, 0xC7, 0x59, 0x15, 0xAA, 0x9A, 0xBB, 0x92, 0x55, 0xCA, 0x0F, 0x48, 0xAD, 0xA5,
    0xED, 0x5D, 0xAB, 0x95, 0x4E, 0xB3, 0x08, 0x8F, 0xA5, 0xED, 0x5D, 0xAB, 0x95, 0xD2, 0xF0, 0xA8,
    0x93, 0xA5, 0xED, 0x9C, 0xBA, 0x76, 0x74, 0x57, 0xAC, 0xE5, 0x2F, 0x94, 0xC6, 0x1B, 0x36, 0x27,
    0x4C, 0x24, 0xC6, 0x48, 0xF7, 0xAD, 0x4B, 0x09, 0x25, 0x56, 0x72, 0x21, 0x70, 0xC2, 0x70, 0x23,
    0xAB, 0x98, 0x13, 0xB0, 0x93, 0x50, 0x67, 0x5E, 0x16, 0xCC, 0x60, 0xB3, 0x4B, 0xA7, 0x8A, 0x78,
    0x02, 0x00, 0xB6, 0xBB, 0x88, 0x07, 0xA1, 0xDC, 0x80, 0x39, 0x2C, 0x68, 0x02, 0x0E, 0x65, 0xE4,
    0x91, 0x8B, 0xAB, 0xB5, 0x68, 0x7B, 0x27, 0x24, 0x9D, 0x1D, 0x15, 0x63, 0x47, 0xC9, 0x6B, 0x79,
    0x44, 0x47, 0xD1, 0xF2, 0x6A, 0xE6, 0x91, 0x0D, 0x75, 0x7C, 0x9E, 0xDA, 0x94, 0x34, 0x5D, 0x1F,
    0x2A, 0xAE, 0xA0, 0x8D, 0x9F, 0x45, 0x8A, 0xEB, 0x96, 0x05, 0x78, 0xCD, 0x5A, 0xBA, 0x58, 0xC2,
    0x26, 0x2A, 0x32, 0xB2, 0x10, 0x06, 0xD7, 0x76, 0x64, 0x2C, 0x73, 0x83, 0xE1, 0x9C, 0xB9, 0x0B,
    0x1E, 0xE0, 0xE9, 0x59, 0x32, 0x42, 0xC8, 0x38, 0x3A, 0x16, 0x14, 0xB0, 0xB1, 0xAD, 0x0E, 0x85,
    0x94, 0xE4, 0xAC, 0x8A, 0x9C, 0xA2, 0x9E, 0x93, 0x0B, 0xA5, 0x06, 0x15, 0x56, 0xCD, 0xF8, 0x00,
    0x10, 0x06, 0x5D, 0xC9, 0x80, 0x5B, 0x99, 0xCC, 0x02, 0xDA, 0xEE, 0xC0, 0x1E, 0x87, 0x75, 0x00,
    0xE4, 0xB1, 0xB4, 0x0E, 0x47, 0x18, 0xB2, 0xB1, 0x5C, 0x6F, 0x91, 0xD2, 0x6E, 0x6E, 0x97, 0x5A,
    0xEC, 0x7D, 0x8F, 0x53, 0x53, 0x70, 0x6A, 0x73, 0x62, 0xED, 0x7D, 0xB7, 0x18, 0x53, 0x8C, 0x6A,
    0x95, 0x59, 0x86, 0x2C, 0x68, 0xDE, 0xA4, 0x95, 0x1B, 0x93, 0x72, 0x66, 0x51, 0x78, 0x65, 0x3D,
    0x18, 0xDB, 0x93, 0xB2, 0x8B, 0xC3, 0x29, 0xE4, 0x3A, 0xEC, 0xAA, 0x85, 0x09, 0x8D, 0x4A, 0x37,
    0x26, 0x64, 0xB4, 0x4B, 0x3A, 0xA4, 0xB1, 0x00, 0x7E, 0xB0, 0xC9, 0x01, 0x20, 0x1C, 0x03, 0x81,
    0xE0, 0x00, 0x00, 0x10, 0x0D, 0x2B, 0x28, 0x80, 0x98, 0xDD, 0x0A, 0x01, 0xC0, 0xE4, 0x71, 0x7B,
    0x3B, 0xA5, 0xE6, 0xF9, 0x14, 0x5B, 0x09, 0x0F, 0x39, 0x9D, 0x49, 0x5C, 0xDA, 0x31, 0x35, 0xCF,
    0xB3, 0x76, 0xAD, 0x5B, 0x4D, 0x48, 0xAA, 0x3D, 0xA6, 0x98, 0xAD, 0xA4, 0xF9, 0x30, 0xE4, 0x9E,
    0x2D, 0xC8, 0x96, 0xC1, 0x50, 0xAC, 0xD4, 0xE3, 0x06, 0x01, 0x3D, 0xB2, 0xB8, 0x08, 0xC5, 0x89,
    0x40, 0x51, 0xF4, 0x0A, 0x02, 0x91, 0x82, 0x10, 0x0D, 0x7A, 0x1F, 0x80, 0x10, 0x07, 0x3C, 0xB9,
    0x00, 0x49, 0x6A, 0x0C, 0x02, 0x48, 0xF0, 0xA0, 0x26, 0xD6, 0x4E, 0x3F, 0x27, 0x24, 0xD2, 0x4C,
    0xCF, 0x91, 0xB9, 0xAF, 0x32, 0xD1, 0x73, 0xC4, 0x6E, 0xBA, 0x24, 0xCB, 0x4F, 0x33, 0x26, 0x65,
    0xCD, 0x1B, 0xB7, 0x77, 0x62, 0xF8, 0x65, 0x91, 0x29, 0x27, 0xF9, 0xBE, 0xD8, 0x47, 0x68, 0xA9,
    0x29, 0x77, 0x9E, 0x28, 0xC4, 0x8F, 0x86, 0xA9, 0xA6, 0xD1, 0xB2, 0x33, 0x21, 0xA5, 0xF2, 0x47,
    0x0C, 0xA2, 0xA5, 0x59, 0x88, 0xB4, 0x3B, 0x2A, 0x51, 0x60, 0xCE, 0xE6, 0x22, 0x01, 0x4D, 0x56,
    0xF0, 0x00, 0x06, 0x01, 0x65, 0x42, 0x18, 0x06, 0xB2, 0x1B, 0x51, 0x31, 0xB3, 0x14, 0xCB, 0x62,
    0xE4, 0x8C, 0x84, 0x3D, 0x5A, 0xBF, 0x75, 0x2B, 0x25, 0x09, 0x18, 0xCF, 0xEC, 0x4C, 0xCA, 0xB1,
    0xC6, 0x33, 0xF6, 0x93, 0x3F, 0x6A, 0x68, 0xF0, 0xEF, 0x25, 0x04, 0x66, 0x44, 0x4C, 0xB4, 0x80,
    0x08, 0x02, 0x50, 0xF3, 0x20, 0x2A, 0xC5, 0x38, 0x3F, 0x6A, 0xE2, 0xA8, 0x24, 0x8F, 0x52, 0x52,
    0x4E, 0x84, 0xD3, 0xDB, 0xC4, 0x92, 0x7A, 0x1B, 0x5D, 0x52, 0xB1, 0x35, 0x98, 0xA6, 0xB5, 0x34,
    0xAB, 0x51, 0x67, 0x29, 0x2D, 0x4D, 0x2F, 0x15, 0xDA, 0x0A, 0x29, 0x13, 0x52, 0xB5, 0xD6, 0x72,
    0x92, 0x4C, 0xD4, 0xE9, 0x7D, 0x9E, 0xA4, 0x93, 0x34, 0xB8, 0x61, 0x37, 0x12, 0x34, 0xD4, 0x29,
    0xD8, 0xC1, 0x84, 0xCF, 0x74, 0x94, 0x76, 0x2B, 0x62, 0x35, 0xCB, 0x25, 0x1D, 0x9B, 0x1A, 0x31,
    0x90, 0xAD, 0xC8, 0x67, 0x29, 0x84, 0x52, 0xCA, 0x71, 0xDA, 0x4E, 0xC1, 0x0E, 0xF6, 0xA4, 0x6E,
    0x81, 0xE0, 0x04, 0x01, 0x46, 0xBA, 0xAC, 0x05, 0x80, 0xD0, 0x39, 0x1C, 0x51, 0x4D, 0x2D, 0x16,
    0xAE, 0x48, 0xE7, 0x3B, 0xCD, 0x34, 0xF3, 0x52, 0x32, 0x8A, 0xD7, 0x2B, 0x3A, 0xCC, 0x94, 0x91,
    0xFA, 0x08, 0x76, 0x9B, 0x90, 0xEA, 0x08, 0x01, 0x67, 0x31, 0x34, 0x0D, 0x51, 0x4C, 0x29, 0x9B,
    0x55, 0xB3, 0x16, 0xD7, 0x30, 0xA0, 0x6D, 0xEE, 0x7D, 0xCB, 0xC0, 0xF8, 0x97, 0x1F, 0x25, 0x67,
    0x4C, 0x4D, 0x9C, 0xA6, 0xCD, 0x59, 0x93, 0x31, 0x49, 0x0E, 0x24, 0x58, 0xA6, 0x42, 0xB9, 0x54,
    0xC5, 0x56, 0xB1, 0x6A, 0xD0, 0x13, 0x6A, 0x55, 0xAC, 0x53, 0x2C, 0x13, 0xDE, 0xDD, 0x65, 0x20,
    0xC8, 0xAA, 0xB6, 0x4B, 0xD5, 0xC9, 0xA1, 0x04, 0x87, 0x7B, 0xC6, 0xEE, 0x3D, 0x49, 0x17, 0xA4,
    0xBB, 0x56, 0xAB, 0xB2, 0xEE, 0x7A, 0xCF, 0x5A, 0x98, 0x07, 0x96, 0x68, 0xF0, 0x1A, 0x03, 0xC0,
    0x78, 0x0D, 0x01, 0xA0, 0x34, 0x0F, 0x10, 0x0D, 0x3B, 0x18, 0x80, 0x82, 0xDD, 0x0A, 0x01, 0xC0,
    0x68, 0x12, 0x81, 0x76, 0x39, 0x59, 0x49, 0xA4, 0xE6, 0xAC, 0xB6, 0x91, 0x58, 0x4A, 0x48, 0x5B,
    0xEE, 0x23, 0x5C, 0xD2, 0xD6, 0x95, 0xF5, 0xA9, 0x1B, 0x04, 0xA8, 0x68, 0x7A, 0xE2, 0x58, 0x2D,
    0x5E, 0x70, 0x6D, 0xD9, 0x9F, 0x35, 0xDA, 0xF9, 0x29, 0x5D, 0xF8, 0x66, 0xF0, 0xC1, 0x89, 0x7B,
    0x9D, 0x0B, 0x63, 0x72, 0x5E, 0x6B, 0xD1, 0x3A, 0x78, 0x00, 0x78, 0x09, 0x01, 0xC0, 0x4E, 0x14,
    0xE8, 0x01, 0xB9, 0x86, 0x78, 0x1C, 0x8D, 0xF5, 0xBA, 0x67, 0x7A, 0xE7, 0x64, 0xEC, 0x9D, 0x97,
    0xB2, 0xF2, 0x68, 0x66, 0x69, 0x5A, 0x23, 0xDC, 0xAA, 0x5A, 0x98, 0x54, 0x98, 0xEF, 0x6A, 0xE5,
    0x93, 0xBC, 0xAA, 0xAC, 0xD5, 0x37, 0x6E, 0x6E, 0x95, 0xCD, 0x70, 0xDB, 0x23, 0x58, 0x9F, 0x7B,
    0x2E, 0x5B, 0x87, 0x18, 0xE9, 0xDA, 0xDB, 0x97, 0x73, 0x2F, 0x4B, 0x8E, 0xE0, 0xA6, 0x4B, 0xE0,
    0x90, 0x16, 0x44, 0x2B, 0x00, 0x7A, 0x65, 0x79, 0x3C, 0xA4, 0xEE, 0x8E, 0xB7, 0x4E, 0x55, 0x38,
    0xC3, 0x14, 0x2D, 0xFA, 0xD6, 0x4E, 0xAE, 0x63, 0x29, 0x36, 0x75, 0xB2, 0xB9, 0x0A, 0xCA, 0xEA,
    0xB1, 0x54, 0xF5, 0x06, 0x2E, 0xBB, 0xDE, 0x55, 0x4B, 0xD3, 0x9A, 0x9D, 0xFB, 0x95, 0x4E, 0x6E,
    0xEA, 0xCF, 0xB4, 0xE5, 0x11, 0x93, 0xCA, 0xAC, 0x69, 0x3B, 0x46, 0x28, 0x73, 0x9A, 0xE0, 0xE7,
    0x46, 0xEB, 0x62, 0xE5, 0x77, 0x46, 0x92, 0x66, 0xED, 0x5B, 0x37, 0xB3, 0xBB, 0x15, 0xDE, 0x98,
    0x3E, 0x4B, 0x46, 0xCF, 0xA6, 0xA6, 0x2E, 0x8C, 0x39, 0x4C, 0x57, 0x61, 0x92, 0xE8, 0xAF, 0x35,
    0x32, 0x66, 0x6A, 0xCA, 0x9B, 0xDB, 0xC3, 0x91, 0x1A, 0xB2, 0x0C, 0xD2, 0xF6, 0xD3, 0xF0, 0x90,
    0x19, 0x53, 0x4B, 0x80, 0xD2, 0xDA, 0x90, 0x04, 0x23, 0x4D, 0xC8, 0x60, 0xCA, 0xB9, 0x44, 0x9A,
    0xF6, 0x3D, 0x47, 0x05, 0x5E, 0x39, 0xA4, 0xB7, 0x12, 0x41, 0x39, 0xAC, 0x4B, 0x65, 0xC4, 0xAE,
    0x4E, 0x6A, 0x9B, 0x49, 0x69, 0x33, 0x53, 0xBA, 0xAC, 0xAA, 0x5A, 0x54, 0xC4, 0xED, 0xB4, 0x13,
    0xB2, 0x55, 0xB8, 0xF7, 0x8F, 0x02, 0xEB, 0x95, 0xAB, 0x6E, 0x4B, 0xB1, 0x46, 0xE1, 0x72, 0x65,
    0x70, 0xEA, 0x71, 0xD9, 0x5E, 0xE5, 0xCD, 0x41, 0x3B, 0x79, 0x57, 0xAE, 0xAB, 0x46, 0x90, 0xDC,
    0x55, 0xED, 0x81, 0xCA, 0x9D, 0x3B, 0x57, 0x7A, 0xAF, 0x54, 0x15, 0xD8, 0xEE, 0x46, 0x8C, 0x12,
    0xE7, 0x76, 0x49, 0x96, 0x1B, 0x03, 0xAE, 0x5E, 0x1A, 0x5D, 0x7E, 0x00, 0x00, 0x00, 0x08, 0x01,
    0x26, 0xC2, 0xC0, 0x0B, 0x9A, 0x55, 0x80, 0x51, 0x58, 0xB8, 0x8A, 0x0C, 0xBB, 0x83, 0x6B, 0x27,
    0x63, 0xEC, 0x9D, 0x97, 0xB3, 0x76, 0xAC, 0x5A, 0xD9, 0xE5, 0x40, 0xC5, 0x8C, 0x40, 0x12, 0x12,
    0xE0, 0x0A, 0x01, 0x29, 0x89, 0x38, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x70, 0x14, 0x85, 0x45, 0x40,
    0x70, 0x14, 0xB6, 0x33, 0xC0, 0xB4, 0x6A, 0xC4, 0x2C, 0x59, 0x4B, 0xB1, 0x22, 0xE5, 0x8E, 0xD6,
    0x1B, 0x4E, 0x48, 0xF6, 0x65, 0x35, 0x0D, 0xD3, 0x92, 0x41, 0xB9, 0x52, 0x89, 0x64, 0xEC, 0x9D,
    0x97, 0x93, 0xC9, 0xB7, 0x50, 0xAB, 0x63, 0xED, 0x5C, 0xB6, 0x33, 0x87, 0x67, 0x7C, 0xE6, 0xEE,
    0xCD, 0xF9, 0xBE, 0x98, 0x42, 0x8A, 0xD1, 0x17, 0x0D, 0xA6, 0x11, 0x83, 0xA3, 0xDC, 0x43, 0x25,
    0x84, 0x1C, 0xAD, 0x33, 0x50, 0x37, 0x61, 0x2A, 0x21, 0x2B, 0xDC, 0x2F, 0xC0, 0x00, 0x00, 0x70,
    0x14, 0x85, 0x45, 0x40, 0x70, 0x14, 0xB6, 0x36, 0x23, 0x6D, 0xD5, 0xA5, 0xD1, 0xDB, 0xA8, 0xD7,
    0x77, 0x7A, 0x73, 0xD6, 0x72, 0x47, 0xB7, 0x21, 0x9D, 0x64, 0x7D, 0x8B, 0xB0, 0xEA, 0x08, 0xD1,
    0xD9, 0xD7, 0x22, 0x9B, 0x83, 0x70, 0xEA, 0x38, 0xD1, 0x99, 0xDB, 0x62, 0x9C, 0x96, 0x71, 0x65,
    0x77, 0xAC, 0xDE, 0x26, 0xAC, 0x64, 0x4F, 0x22, 0xE5, 0x29, 0xE7, 0x24, 0x06, 0xD8, 0xA8, 0xAA,
    0x73, 0xA2, 0x66, 0xAC, 0xDC, 0x94, 0xA2, 0x8B, 0x33, 0x76, 0x87, 0x66, 0x26, 0xAB, 0x9C, 0xCA,
    0x2E, 0xD9, 0xC8, 0xE7, 0x07, 0x35, 0xAA, 0xCD, 0xF2, 0x3A, 0xBA, 0x19, 0xA2, 0x33, 0x7D, 0x8B,
    0xB1, 0x76, 0x4E, 0xCF, 0xDA, 0xB5, 0x6C, 0x62, 0xF2, 0xA9, 0x31, 0x4C, 0xDF, 0x7B, 0xE1, 0x7B,
    0x66, 0xAC, 0xEB, 0x0E, 0xA7, 0x60, 0xF2, 0xCA, 0x33, 0x3D, 0xA9, 0x58, 0x25, 0xAB, 0x10, 0x98,
    0xE3, 0xF0, 0x50, 0x17, 0x5C, 0xAC, 0x40, 0x40, 0x0F, 0x9C, 0x21, 0x00, 0x44, 0xAD, 0x39, 0x14,
    0x57, 0x8C, 0x7A, 0xEA, 0xEE, 0xC5, 0xD8, 0xFB, 0x27, 0x66, 0xD5, 0x11, 0x7E, 0xA0, 0xE4, 0x1D,
    0xF3, 0x56, 0x2A, 0x8D, 0x30, 0xCE, 0xD5, 0x6F, 0x9A, 0xEF, 0x5C, 0xAC, 0x94, 0x02, 0xD2, 0x1A,
    0x47, 0x3B, 0x2B, 0x6C, 0xAD, 0x8B, 0x82, 0xD6, 0x9A, 0x35, 0x3B, 0x7C, 0x00, 0x00, 0x30, 0x0E,
    0xCC, 0xBA, 0x80, 0x75, 0x26, 0x21, 0x01, 0xAB, 0x7A, 0x88, 0x5B, 0x58, 0xC9, 0xA9, 0x59, 0x19,
    0xA9, 0x27, 0xB6, 0xF6, 0x5D, 0xCB, 0xD9, 0x75, 0x3A, 0xE5, 0x92, 0xE3, 0x52, 0x4D, 0xD1, 0xBA,
    0xB7, 0x5E, 0x2B, 0x5C, 0x32, 0xD8, 0x9A, 0x67, 0x9A, 0xEF, 0x64, 0xAC, 0x5B, 0xA6, 0xD0, 0xD2,
    0x38, 0xCB, 0x12, 0xC9, 0x84, 0x56, 0x56, 0xD2, 0xD9, 0xB2, 0x19, 0x45, 0x9B, 0x8A, 0x01, 0xCD,
    0x95, 0x30, 0x0C, 0x84, 0x89, 0x00, 0x4B, 0xE5, 0x7C, 0x50, 0x0C, 0x84, 0x3B, 0xC0, 0x50, 0x0B,
    0x8A, 0xB8, 0x6A, 0x25, 0xCF, 0x29, 0x19, 0xA7, 0x9C, 0x96, 0x30, 0xA9, 0x57, 0x3B, 0x27, 0x25,
    0x9C, 0xA1, 0xD9, 0x9B, 0x3B, 0xC9, 0x69, 0x58, 0x77, 0x19, 0xAF, 0x5A, 0x86, 0xBD, 0x5D, 0x93,
    0x9A, 0x8C, 0xA1, 0x48, 0x75, 0xC7, 0x66, 0xD2, 0x2A, 0x9B, 0xD8, 0xE6, 0x1D, 0xCB, 0x00, 0x28,
    0xC8, 0x37, 0x01, 0x36, 0xC9, 0x52, 0x39, 0xE1, 0xC9, 0x0A, 0x2C, 0x76, 0xAE, 0x55, 0x08, 0x4C,
    0xE8, 0xA4, 0xAF, 0xA6, 0x45, 0x8A, 0xB3, 0x37, 0x0C, 0x23, 0x11, 0x3A, 0xCA, 0x81, 0xB7, 0x1F,
    0x40, 0x13, 0x53, 0x3B, 0xC0, 0x60, 0x12, 0x6C, 0x3D, 0x23, 0x9B, 0x25, 0xA5, 0x52, 0x35, 0xC9,
    0x5D, 0x4A, 0x98, 0x3A, 0x8A, 0xF2, 0x58, 0xCA, 0xA6, 0x4D, 0xF3, 0x9C, 0x9A, 0x35, 0x89, 0x83,
    0xAB, 0x27, 0x28, 0x96, 0x21, 0x9D, 0x66, 0xB9, 0xAA, 0xA7, 0x96, 0x55, 0x5B, 0xAE, 0xE2, 0xCA,
    0x5D, 0x15, 0x9A, 0xAA, 0xB0, 0xB6, 0x12, 0x36, 0x77, 0x8E, 0x98, 0x00, 0x08, 0x02, 0x4E, 0xA0,
    0x40, 0x26, 0x31, 0x22, 0x01, 0x71, 0x95, 0x10, 0x0A, 0x94, 0x2F, 0x80, 0x00, 0x00, 0xA5, 0x5B,
    0xB0, 0x19, 0xC4, 0xF6, 0x2F, 0x56, 0xAA, 0xCC, 0x95, 0x41, 0x63, 0xD7, 0x89, 0xAF, 0x16, 0x40,
    0x88, 0xDA, 0xE6, 0x6C, 0x4C, 0xD4, 0x45, 0x24, 0xAE, 0xAE, 0xF3, 0xDE, 0xAB, 0xD9, 0x6B, 0x5A,
    0x86, 0xA7, 0x92, 0xBB, 0x56, 0xE9, 0xDF, 0x1B, 0xDF, 0x7A, 0xEE, 0x45, 0xCD, 0x34, 0xA2, 0xA4,
    0xB1, 0x3C, 0x00, 0x00, 0xD4, 0xAD, 0x8C, 0x62, 0x3C, 0xB6, 0xB9, 0x1C, 0x1D, 0x56, 0xE7, 0x3A,
    0x3E, 0x3E, 0xCA, 0x53, 0xB3, 0xEB, 0x57, 0x6E, 0x5D, 0xA2, 0x00, 0xB5, 0xD5, 0x00, 0x08, 0x04,
    0x56, 0x62, 0x10, 0x3D, 0xD3, 0x8C, 0xAD, 0x5C, 0xD4, 0xEF, 0x5C, 0xEC, 0x39, 0x5D, 0xBB, 0x47,
    0x6A, 0xED, 0x5D, 0xAB, 0x55, 0x31, 0x55, 0xD0, 0xE3, 0x2D, 0xCD, 0x58, 0xA9, 0x6A, 0xBF, 0x46,
    0x49, 0x6D, 0xAA, 0x71, 0xAF, 0xD9, 0x94, 0xDF, 0x4A, 0x93, 0x1C, 0x78, 0x62, 0x72, 0x22, 0xA3,
    0xD9, 0xED, 0x8D, 0x93, 0x9E, 0xE5, 0x13, 0x5C, 0xD5, 0x2A, 0x59, 0x7B, 0x47, 0x68, 0xE5, 0x12,
    0x7C, 0xD2, 0x93, 0xE7, 0x29, 0x43, 0x20, 0x92, 0x4D, 0x2F, 0xB8, 0xCC, 0xF9, 0xDD, 0x52, 0x5E,
    0x94, 0xEB, 0x91, 0xB6, 0x54, 0x66, 0xC3, 0x4B, 0xBE, 0x86, 0x96, 0xDA, 0xAD, 0x44, 0x66, 0x9C,
    0xED, 0x7C, 0xB6, 0x32, 0x87, 0x26, 0x6B, 0x7E, 0x2E, 0x74, 0xDD, 0x13, 0x62, 0x4F, 0x7B, 0xEB,
    0x8C, 0x31, 0x75, 0x8D, 0x22, 0xDA, 0x6A, 0xEC, 0x59, 0x81, 0x7A, 0xB8, 0x71, 0xBB, 0x17, 0xE1,
    0x49, 0x62, 0x5D, 0x6A, 0xC6, 0x39, 0x84, 0x14, 0x45, 0x6F, 0x80, 0x00, 0x00, 0xD5, 0x0F, 0x93,
    0xF1, 0xC5, 0x38, 0xF9, 0x53, 0xE5, 0x54, 0xAB, 0x15, 0xCE, 0xD5, 0xCA, 0xA5, 0x0B, 0x85, 0x27,
    0xB2, 0x4A, 0xA5, 0xC1, 0x60, 0xA2, 0x6C, 0x90, 0xA9, 0x10, 0x5B, 0x67, 0xB7, 0x0B, 0x2A, 0x1D,
    0x5E, 0x2D, 0xA5, 0x23, 0x4B, 0x22, 0xB5, 0x53, 0x68, 0x8E, 0x5A, 0xB7, 0xD5, 0x90, 0xED, 0xE5,
    0xF9, 0xAF, 0x36, 0x62, 0xC8, 0x65, 0xD4, 0x65, 0x9E, 0xD2, 0x02, 0xE7, 0x05, 0x80, 0x1F, 0x92,
    0xAC, 0x40, 0x70, 0x1F, 0x8B, 0x1A, 0x00, 0xFB, 0x0C, 0x41, 0x00, 0x1E, 0x8F, 0x5A, 0x8D, 0xF1,
    0x76, 0x67, 0xC8, 0xEF, 0x27, 0x8C, 0xE1, 0x95, 0xB2, 0xCB, 0xD9, 0xF7, 0x46, 0x6A, 0xCD, 0x58,
    0xB1, 0xF4, 0x67, 0x67, 0xB6, 0x9D, 0xEF, 0xA5, 0xED, 0xB3, 0x2B, 0xB5, 0xB5, 0x2B, 0x7C, 0x2F,
    0x6B, 0x8A, 0xD9, 0xA9, 0x66, 0xFB, 0xD9, 0x79, 0x9E, 0xD9, 0x49, 0x49, 0x39, 0xDE, 0xEB, 0xC6,
    0xFA, 0x99, 0x67, 0x4C, 0xC3, 0x0A, 0x29, 0xD1, 0x1E, 0x36, 0x0D, 0xC3, 0xC0, 0x00, 0x00, 0xE5,
    0x4E, 0x7D, 0x5B, 0xA4, 0xD7, 0x39, 0x54, 0x1D, 0x54, 0xE7, 0x55, 0xBE, 0xD5, 0x6A, 0x98, 0xE5,
    0x76, 0x56, 0xB3, 0x4E, 0xA9, 0xD5, 0x2A, 0xDA, 0xD1, 0xB6, 0x79, 0x59, 0xB6, 0xD4, 0x5F, 0x06,
    0xB2, 0xC2, 0x2B, 0x8E, 0x40, 0x55, 0x52, 0x92, 0x03, 0x49, 0x94, 0x40, 0x09, 0x7C, 0x4E, 0xA4,
    0x93, 0x9D, 0x19, 0xDF, 0xC9, 0xD9, 0x3B, 0x2E, 0xA6, 0x8C, 0x61, 0x95, 0x9B, 0xC9, 0xA9, 0xDE,
    0xF7, 0xA7, 0x57, 0xD6, 0x6A, 0xA6, 0xBA, 0x31, 0xD6, 0x2E, 0x52, 0xAC, 0xF9, 0xBC, 0x42, 0xB9,
    0x54, 0xEC, 0x8D, 0xB0, 0xB4, 0xFB, 0xBB, 0x34, 0x99, 0x5B, 0xAD, 0x37, 0x2E, 0x18, 0x69, 0xC6,
    0xAB, 0x4B, 0xDC, 0x36, 0x49, 0x8D, 0xAA, 0xD2, 0xDB, 0x65, 0x82, 0x9C, 0x9E, 0x00, 0x00, 0xD4,
    0x8D, 0x94, 0xE2, 0x3D, 0x58, 0xFB, 0x36, 0xA6, 0x65, 0x2B, 0x11, 0x72, 0xC7, 0xBA, 0x2D, 0x52,
    0xA7, 0x5A, 0xE9, 0x36, 0xB7, 0xD4, 0x00, 0x06, 0x02, 0x32, 0x75, 0x10, 0x0A, 0x73, 0xB0, 0xC0,
    0xF0, 0x00, 0x00, 0xE4, 0xF3, 0x74, 0x6B, 0xAA, 0x4F, 0x39, 0x33, 0xA1, 0x58, 0x6F, 0x32, 0xAB,
    0x4C, 0xAA, 0xCE, 0x15, 0x53, 0x6C, 0x00, 0x80, 0x12, 0x36, 0xEE, 0x02, 0x32, 0x76, 0x94, 0xCD,
    0xD1, 0x53, 0xBA, 0x6B, 0x6F, 0x55, 0xAB, 0x6E, 0xC6, 0x25, 0x93, 0x47, 0x5B, 0x65, 0x73, 0x74,
    0x4B, 0x52, 0x7A, 0x38, 0x5E, 0xCC, 0x8D, 0x5A, 0xBD, 0x65, 0xD8, 0x3B, 0x06, 0x95, 0x09, 0x29,
    0xF0, 0x00, 0x00, 0xB5, 0x5C, 0xBC, 0xC0, 0x01, 0xED, 0xB5, 0x45, 0xED, 0x92, 0x06, 0x73, 0xFE,
    0x51, 0x79, 0x4B, 0x03, 0x1D, 0xFF, 0xB4, 0x72, 0x8A, 0xB5, 0x94, 0xE4, 0xF7, 0xD9, 0xA3, 0x35,
    0x5A, 0xAA, 0x99, 0x2D, 0x65, 0x2F, 0xD7, 0xAB, 0x35, 0x66, 0xBB, 0xD9, 0x4B, 0x1C, 0x87, 0x85,
    0x74, 0xF1, 0xD6, 0xC2, 0x00, 0x25, 0xFC, 0x20, 0x0D, 0xB0, 0x41, 0x00, 0x7E, 0xCA, 0x06, 0x03,
    0xEF, 0x34, 0x30, 0x1C, 0x68, 0xB7, 0x80, 0x00, 0x00, 0xA5, 0x52, 0x7C, 0x22, 0x1A, 0xB9, 0xB5,
    0x55, 0x25, 0x08, 0x6A, 0x96, 0x5E, 0xD1, 0xDA, 0x39, 0x45, 0xA9, 0x04, 0x2B, 0x1E, 0x5D, 0x51,
    0x69, 0x39, 0x13, 0xCF, 0x97, 0x15, 0x5A, 0x6E, 0x23, 0x15, 0xE5, 0xC5, 0x56, 0x8B, 0x88, 0xCC,
    0xF7, 0x2D, 0x5D, 0xE0, 0xC4, 0x55, 0x5D, 0xBB, 0x59, 0x68, 0x28, 0x94, 0xD7, 0x72, 0x16, 0x56,
    0x28, 0x29, 0x55, 0x94, 0xF0, 0x00, 0x00, 0x65, 0xAB, 0x5B, 0x32, 0x9C, 0x4D, 0x65, 0x74, 0x1D,
    0x10, 0xA8, 0xDB, 0x3E, 0xD5, 0xCA, 0x1B, 0x28, 0x77, 0x7C, 0xB1, 0xF6, 0x7E, 0xCB, 0xD9, 0x79,
    0x34, 0x25, 0x2B, 0x0E, 0xDA, 0xBD, 0x54, 0xEB, 0xBA, 0xC3, 0xB6, 0xB3, 0xB6, 0x5A, 0xD6, 0x68,
    0xEA, 0x19, 0x2D, 0x97, 0xBB, 0x17, 0xBF, 0x6A, 0xEB, 0x27, 0x77, 0xB6, 0x12, 0xB9, 0x4A, 0x44,
    0x5B, 0x69, 0x94, 0x6C, 0x86, 0xD5, 0x1E, 0xC9, 0x63, 0x25, 0xB1, 0xAD, 0x56, 0x72, 0x38, 0xBB,
    0x29, 0x3D, 0x81, 0x6E, 0xEA, 0x6B, 0xC9, 0x79, 0x2F, 0x1F, 0x75, 0x8C, 0x63, 0xB1, 0x32, 0x6C,
    0xA9, 0x64, 0xDC, 0xEA, 0xAE, 0xFB, 0x5E, 0xCF, 0xD9, 0xFB, 0x3F, 0x26, 0x93, 0xDD, 0x55, 0xE6,
    0xEB, 0xC9, 0xE5, 0x28, 0x54, 0x86, 0x9F, 0x72, 0x87, 0xE1, 0xCD, 0xE0, 0xE7, 0xDB, 0xAB, 0x75,
    0xEA, 0xD7, 0xE6, 0x11, 0x60, 0xE6, 0xFA, 0xBA, 0x17, 0x74, 0x58, 0x4B, 0xBE, 0x70, 0xA6, 0x11,
    0x92, 0xA2, 0xE3, 0xFA, 0xE9, 0x8C, 0x9E, 0xA6, 0xD1, 0x3A, 0xA9, 0xE5, 0x3C, 0xBC, 0x00, 0x00,
    0x35, 0x83, 0x55, 0x45, 0x4D, 0x38, 0xF0, 0xE6, 0x19, 0x10, 0x6A, 0xF2, 0xEE, 0x50, 0xDA, 0xAB,
    0xC5, 0x5D, 0xAB, 0x13, 0x2E, 0xED, 0x2F, 0x5B, 0x1A, 0xC4, 0xAA, 0xB4, 0xCB, 0x35, 0xE6, 0x63,
    0x2B, 0x27, 0x43, 0xFE, 0x15, 0x5E, 0xD3, 0x7A, 0x31, 0x52, 0x95, 0xB6, 0xCE, 0x97, 0xAC, 0x54,
    0xD5, 0xCC, 0xB4, 0x0F, 0xF3, 0x56, 0x55, 0x8F, 0x27, 0x04, 0xFF, 0xB5, 0xB9, 0x79, 0x38, 0xAD,
    0xDA, 0xEF, 0x74, 0xAF, 0xA3, 0xD5, 0x42, 0xDF, 0xD7, 0x7B, 0xED, 0x7C, 0xA8, 0x86, 0x94, 0xDB,
    0xCA, 0x61, 0x19, 0x2A, 0x27, 0x27, 0xD2, 0x98, 0x35, 0xAE, 0xEB, 0xA9, 0xF3, 0x86, 0x0B, 0x6B,
    0xBB, 0xE2, 0x6E, 0xDD, 0x8A, 0x61, 0x2B, 0x4C, 0xDB, 0xB6, 0x62, 0xA5, 0xDB, 0x5C, 0x2B, 0xF5,
    0x98, 0xB9, 0x8E, 0x99, 0x2A, 0xEC, 0x55, 0xAF, 0x5A, 0xA5, 0x3A, 0x29, 0x3C, 0x65, 0x86, 0x6D,
    0x7A, 0x28, 0xBB, 0x1D, 0x59, 0x9F, 0x7E, 0x68, 0x4F, 0xC7, 0x54, 0x6A, 0xDE, 0xA2, 0x16, 0xD6,
    0xD4, 0x29, 0xF1, 0xB0, 0xC7, 0xB4, 0xE4, 0xF1, 0x8B, 0x3B, 0xC2, 0x6D, 0x39, 0x44, 0x66, 0xAC,
    0xCF, 0x39, 0xCE, 0x55, 0x38, 0x29, 0xAD, 0x4E, 0x6F, 0x35, 0xDE, 0xD7, 0x5E, 0xD6, 0x1C, 0x4D,
    0x5C, 0x31, 0x77, 0x80, 0x00, 0x38, 0x0A, 0x99, 0xE1, 0x40, 0x59, 0x54, 0x9E, 0x00, 0x00, 0x85,
    0x6A, 0x3C, 0x7B, 0x99, 0xB4, 0xDD, 0x59, 0xDB, 0xBE, 0xE2, 0x52, 0x3B, 0x56, 0x88, 0x7F, 0xB0,
    0x25, 0xB7, 0x15, 0x31, 0x7F, 0xAA, 0x4B, 0x66, 0xDD, 0x5C, 0xAA, 0x2A, 0xCC, 0x83, 0x4B, 0x67,
    0x6B, 0xED, 0x9A, 0xB5, 0xD1, 0xC9, 0x63, 0x7A, 0xE5, 0xEE, 0x95, 0xCD, 0xA4, 0x2C, 0x25, 0x45,
    0x25, 0x73, 0xD5, 0x0C, 0xCC, 0xAE, 0x58, 0xDE, 0x00, 0xE0, 0x1E, 0xA7, 0x24, 0x80, 0x1E, 0x00,
    0x00, 0x55, 0x43, 0x8D, 0xFA, 0x8B, 0xA7, 0x65, 0x59, 0xDF, 0x5E, 0xE0, 0x92, 0xEB, 0x54, 0x97,
    0xD7, 0xB0, 0x2C, 0xF7, 0x15, 0x31, 0x93, 0xEE, 0x0F, 0x6D, 0xB5, 0x0C, 0x7D, 0xFA, 0x0D, 0x58,
    0xB3, 0x3E, 0x28, 0x66, 0xB1, 0x12, 0x25, 0x9B, 0x7A, 0xAF, 0x64, 0xAD, 0x66, 0x2D, 0x4D, 0xA9,
    0x9B, 0x0B, 0x5B, 0xD5, 0x65, 0x79, 0x51, 0xB2, 0xE5, 0x46, 0x8E, 0x0E, 0xDB, 0x46, 0x9D, 0xCD,
    0x55, 0x82, 0x79, 0x28, 0x01, 0x00, 0x82, 0x1D, 0x50, 0x06, 0x4D, 0x30, 0x80, 0x3F, 0x76, 0x73,
    0x01, 0xFC, 0x32, 0x10, 0x0F, 0xB1, 0x54, 0x40, 0x7C, 0xE8, 0xFE, 0x00, 0x00, 0x35, 0xA3, 0xC6,
    0xC4, 0x09, 0xB9, 0x13, 0x6C, 0xAD, 0x4B, 0xEE, 0x91, 0x0A, 0xF9, 0xAA, 0xE5, 0x03, 0x39, 0xBA,
    0xCC, 0xEE, 0xBC, 0x57, 0x67, 0xB1, 0x86, 0x5E, 0x4F, 0x35, 0xE6, 0xAC, 0xD5, 0x9A, 0xF1, 0x65,
    0xAA, 0xC6, 0x0D, 0x5D, 0xC9, 0xD8, 0xBB, 0x13, 0x63, 0x2D, 0x93, 0x81, 0xAE, 0xA9, 0x99, 0xE0,
    0x55, 0x83, 0x96, 0x54, 0x2B, 0x19, 0x1D, 0x59, 0x9D, 0x7E, 0xAA, 0x6A, 0x4A, 0x56, 0x96, 0x57,
    0xA1, 0x8C, 0xD7, 0x55, 0x2D, 0x73, 0xEC, 0x49, 0x3D, 0xE5, 0x4D, 0x74, 0xE2, 0x2A, 0xED, 0x39,
    0x44, 0xE6, 0xCE, 0xCB, 0x1A, 0x5E, 0xCF, 0xCA, 0x29, 0x37, 0x36, 0x7A, 0xD1, 0xF6, 0xAE, 0xD5,
    0xDA, 0xFB, 0x67, 0x2E, 0xB4, 0x5C, 0x92, 0x27, 0x47, 0xBB, 0xB1, 0x7D, 0xE7, 0x04, 0x4F, 0x5E,
    0xAB, 0x5F, 0x5A, 0x21, 0x2C, 0x66, 0x4A, 0x57, 0xD2, 0x26, 0x31, 0x39, 0x43, 0x75, 0xEF, 0x3A,
    0xAE, 0x63, 0xC1, 0x15, 0x7A, 0xCE, 0xED, 0xD6, 0xA8, 0xD5, 0x5E, 0xC5, 0x1C, 0x73, 0x3B, 0x55,
    0x17, 0x31, 0x2C, 0x56, 0xCC, 0xE5, 0xF0, 0x01, 0x48, 0x2B, 0x64, 0xAA, 0xB2, 0x91, 0x75, 0x42,
    0xA2, 0xDA, 0xF0, 0x4D, 0xE6, 0x76, 0x9D, 0x12, 0xAF, 0x54, 0x5B, 0xE7, 0x26, 0x63, 0xDE, 0xED,
    0x62, 0xD7, 0xD9, 0xBB, 0x2F, 0x66, 0xED, 0x1A, 0xA9, 0x72, 0x9D, 0x74, 0xC8, 0xE5, 0xAC, 0x4E,
    0x72, 0x5D, 0x62, 0xA9, 0x7B, 0x6F, 0x74, 0xAE, 0x3F, 0x72, 0x4D, 0x96, 0x55, 0x1B, 0xD9, 0x79,
    0xBB, 0x70, 0x2F, 0x2E, 0xA6, 0x5E, 0x6E, 0xDA, 0x2A, 0x53, 0x8F, 0xC0, 0x45, 0x63, 0x86, 0x5C,
    0x2B, 0x18, 0xDD, 0x59, 0x9F, 0x7E, 0xA6, 0x2E, 0x59, 0x56, 0x86, 0xD7, 0xC2, 0x84, 0xBF, 0x55,
    0xB5, 0x53, 0x71, 0x00, 0xE7, 0xD5, 0x6D, 0x73, 0xC5, 0x61, 0xB9, 0xF5, 0x5A, 0xA7, 0x11, 0x12,
    0x53, 0x7D, 0x54, 0xC9, 0xC9, 0xC5, 0x23, 0xFF, 0x35, 0x62, 0xA7, 0x4E, 0xC9, 0x35, 0xD6, 0xF9,
    0xAA, 0xF5, 0x5E, 0xAB, 0x54, 0xEB, 0x59, 0x26, 0x3A, 0xDF, 0x15, 0xBF, 0x16, 0x69, 0x48, 0xB7,
    0xA5, 0x8F, 0xC4, 0x12, 0xD9, 0xBC, 0xDD, 0x6B, 0xDD, 0x04, 0x50, 0xCA, 0xC5, 0x5D, 0x08, 0x49,
    0x91, 0xCA, 0xA9, 0x16, 0xC5, 0x70, 0xCA, 0xD0, 0xE3, 0xF0, 0x00, 0x00, 0x64, 0x25, 0xC7, 0xC9,
    0x2A, 0xC9, 0x25, 0x22, 0x9B, 0xFC, 0x88, 0xB2, 0xDB, 0x48, 0xB7, 0x7E, 0x32, 0x2D, 0x77, 0x12,
    0xB2, 0x3B, 0x4C, 0x93, 0x24, 0xDC, 0xD8, 0xA1, 0xF4, 0xC7, 0x74, 0x8B, 0x27, 0x6A, 0xAD, 0xAB,
    0xBC, 0x14, 0x03, 0xCD, 0x50, 0xD0, 0x0A, 0x07, 0x80, 0x00, 0x95, 0x46, 0xB5, 0xF8, 0x1C, 0x5C,
    0xF9, 0x52, 0xE1, 0x3E, 0x48, 0xB6, 0xCE, 0x54, 0xE7, 0xC7, 0xB2, 0xBC, 0xAF, 0x94, 0x36, 0xF3,
    0x26, 0xF5, 0x23, 0xEC, 0xF6, 0xAA, 0x0B, 0x96, 0x49, 0x57, 0x24, 0x00, 0x9A, 0xA1, 0xD8, 0x04,
    0x21, 0x2C, 0x60, 0x1F, 0x37, 0x41, 0x00, 0xB7, 0x33, 0x4A, 0x83, 0x56, 0x62, 0x56, 0x64, 0x7C,
    0xAE, 0x2A, 0x99, 0x46, 0x4B, 0xBE, 0x2C, 0xA2, 0x22, 0x8D, 0x4E, 0x7E, 0xE0, 0x16, 0x3A, 0xC7,
    0x00, 0xF0, 0x36, 0xB0, 0x0A, 0x00, 0x98, 0x80, 0x2C, 0x8E, 0x6E, 0xA2, 0xD1, 0xC8, 0x66, 0x44,
    0xEE, 0x2A, 0x7B, 0xDD, 0xD5, 0x4F, 0x57, 0xCA, 0x9F, 0x08, 0x86, 0x56, 0xF6, 0x72, 0xA7, 0x59,
    0xE1, 0x63, 0x32, 0x9C, 0xA2, 0x31, 0xA6, 0x66, 0x7F, 0x1E, 0xA6, 0x7C, 0xE5, 0x5E, 0x22, 0x97,
    0xA9, 0xA1, 0x3A, 0x57, 0x78, 0xA9, 0xE2, 0x88, 0xD2, 0x99, 0x96, 0x32, 0x80, 0xE0, 0x30, 0xC8,
    0x85, 0x81, 0xE0, 0x00, 0x00, 0xA4, 0xA9, 0x87, 0x59, 0x33, 0x6A, 0xB1, 0x23, 0xA5, 0x70, 0xA8,
    0xBD, 0xCD, 0x49, 0x1B, 0x3B, 0xAA, 0xDD, 0x57, 0x72, 0x6E, 0x5E, 0xCF, 0xDA, 0xBB, 0x66, 0xAE,
    0x95, 0xA6, 0x90, 0xDE, 0xD7, 0x0B, 0xD9, 0x15, 0x63, 0x2B, 0x95, 0x47, 0x08, 0xE0, 0xFC, 0x19,
    0x83, 0x9A, 0x36, 0x8D, 0x6E, 0xB6, 0xE2, 0xDC, 0x7C, 0x00, 0x00, 0x00, 0x94, 0xC6, 0xAD, 0xEA,
    0x1A, 0xCB, 0x71, 0x32, 0xE3, 0x36, 0xAA, 0xD7, 0xDD, 0x4D, 0x19, 0xBA, 0xAB, 0xAE, 0xF3, 0xB3,
    0xEE, 0x8D, 0xD5, 0xDA, 0xF9, 0x64, 0x69, 0x26, 0xB4, 0xD3, 0xED, 0xDD, 0x8B, 0xE1, 0x87, 0x47,
    0xA4, 0xBE, 0xE6, 0xFB, 0x60, 0xFB, 0xAA, 0x45, 0xAD, 0xD2, 0x58, 0x3F, 0x25, 0x15, 0x0B, 0xA2,
    0x76, 0x10, 0xE8, 0xCC, 0x24, 0xE6, 0x5D, 0x84, 0x36, 0xA8, 0xAB, 0x0E, 0x35, 0x61, 0x1D, 0x23,
    0x20, 0xA3, 0x97, 0xC0, 0x30, 0x0A, 0x93, 0xCA, 0x80, 0x64, 0xDD, 0xD6, 0x04, 0xA2, 0x3C, 0x2E,
    0x91, 0x8E, 0x59, 0x58, 0xB5, 0x1C, 0x1E, 0xEA, 0xD7, 0x1A, 0x5D, 0xC9, 0xD9, 0xF1, 0x54, 0x64,
    0xE4, 0xF3, 0x19, 0xB4, 0xD4, 0x00, 0x0C, 0x03, 0xBB, 0xB7, 0x58, 0x0B, 0x01, 0x60, 0x24, 0x04,
    0x81, 0xE0, 0x00, 0x00, 0x10, 0x0C, 0xAB, 0xB0, 0x52, 0x54, 0x4B, 0x3D, 0x48, 0xE5, 0x58, 0x95,
    0x6F, 0x9F, 0x73, 0x3B, 0x66, 0xA5, 0x6C, 0xAB, 0xD0, 0xE2, 0xDB, 0xC9, 0x5D, 0x5A, 0xD6, 0x47,
    0xB2, 0xF2, 0x58, 0x5E, 0x6D, 0xD2, 0x2C, 0x9C, 0x9A, 0x58, 0x99, 0x64, 0x5B, 0x2F, 0x28, 0xAE,
    0x21, 0x95, 0x9E, 0x5B, 0xDA, 0xE5, 0x6C, 0xA0, 0x69, 0x11, 0x54, 0xD0, 0x00, 0x02, 0x00, 0x6A,
    0xDA, 0x38, 0x0B, 0x2E, 0x98, 0xC0, 0x1D, 0xF2, 0xDE, 0x00, 0x10, 0x0A, 0x8C, 0xA8, 0x80, 0x5A,
    0xAC, 0xD8, 0x02, 0x9B, 0x69, 0x49, 0x0F, 0x18, 0x98, 0x47, 0x91, 0x6A, 0x27, 0x26, 0x25, 0xDD,
    0x67, 0x98, 0x89, 0x88, 0x9A, 0x88, 0x59, 0xDD, 0xA3, 0x62, 0x26, 0xD6, 0x0F, 0x69, 0x79, 0x29,
    0x33, 0xC8, 0xF8, 0xD4, 0x53, 0x7A, 0xD5, 0x5B, 0x2B, 0x6C, 0x2E, 0x61, 0xEA, 0x91, 0xC6, 0xFE,
    0xEB, 0xD0, 0xBC, 0x94, 0x73, 0xD6, 0x2B, 0x02, 0x53, 0x1D, 0x59, 0xEC, 0x6A, 0xC5, 0x2B, 0xA7,
    0x65, 0x56, 0xE7, 0x80, 0x30, 0x08, 0x84, 0x41, 0x80, 0x4B, 0xEE, 0x64, 0x3C, 0xD6, 0x55, 0xC8,
    0x8D, 0x4E, 0x4E, 0xC7, 0x4F, 0xB8, 0xA5, 0xB3, 0x93, 0x39, 0xB3, 0xEE, 0x49, 0xAC, 0xE4, 0xEE,
    0x7D, 0xF2, 0x94, 0x59, 0x37, 0x47, 0x6A, 0xED, 0x5C, 0xAD, 0xF1, 0xBA, 0x66, 0x69, 0x2F, 0x6E,
    0xE5, 0xD1, 0x9B, 0xD3, 0xB3, 0x59, 0x3B, 0x7E, 0xAF, 0x95, 0x5D, 0x99, 0xE7, 0x29, 0x9B, 0xF1,
    0x84, 0xA8, 0xCA, 0xB5, 0x35, 0x4B, 0x61, 0x28, 0x9B, 0xBB, 0xE4, 0x12, 0x58, 0x4D, 0xE6, 0xB1,
    0x53, 0x02, 0x76, 0x14, 0xB1, 0x13, 0x35, 0x53, 0x40, 0x00, 0x09, 0x74, 0x19, 0x2E, 0xED, 0x2E,
    0xCF, 0x34, 0xA3, 0x85, 0xD4, 0xBC, 0x26, 0x91, 0x60, 0xA9, 0x97, 0x08, 0xC5, 0xA6, 0x54, 0x67,
    0x67, 0x99, 0x8C, 0x96, 0x95, 0xA1, 0x95, 0xEC, 0x83, 0x75, 0xD5, 0x4C, 0x6C, 0xD9, 0xB2, 0xEF,
    0xB9, 0x53, 0x9A, 0xEF, 0x29, 0x59, 0xBE, 0xD1, 0xDA, 0x35, 0x53, 0x59, 0x72, 0xE9, 0x1D, 0xBD,
    0xD5, 0xBA, 0xF1, 0x63, 0x1B, 0x5A, 0xE1, 0x36, 0x5C, 0xDB, 0x7B, 0x69, 0x6A, 0x23, 0x9A, 0xC5,
    0x0E, 0x47, 0x5A, 0x6E, 0xDD, 0x18, 0xD3, 0x79, 0xD7, 0x1B, 0x97, 0x22, 0xB0, 0xE3, 0x65, 0xC6,
    0xCD, 0xD1, 0x1C, 0xB8, 0xD5, 0x71, 0xDB, 0x94, 0xE8, 0xE5, 0xBF, 0x65, 0xA6, 0x75, 0xF3, 0x28,
    0x36, 0xDB, 0x6C, 0x6C, 0xA5, 0x4C, 0x3C, 0x7B, 0xB0, 0x29, 0xF5, 0x53, 0x51, 0x38, 0x88, 0xD2,
    0xFD, 0x4E, 0xC6, 0x3C, 0xC5, 0x35, 0xD3, 0x53, 0xB9, 0x8D, 0x11, 0xD1, 0x99, 0xCD, 0x19, 0xAB,
    0x36, 0x4E, 0xD1, 0x00, 0x75, 0xBA, 0x10, 0x07, 0xB1, 0xD0, 0x80, 0x41, 0x4E, 0xA4, 0x02, 0x2A,
    0x76, 0x20, 0x11, 0x5B, 0xB1, 0x80, 0x6B, 0x5D, 0xBC, 0x00, 0x00, 0x85, 0x86, 0x6E, 0xFB, 0x01,
    0xC7, 0xE5, 0x51, 0x7B, 0x2E, 0x4D, 0x13, 0xBA, 0x54, 0x7E, 0xA3, 0x3B, 0x4D, 0xE6, 0x94, 0x1F,
    0x4E, 0x93, 0x09, 0x72, 0xA5, 0x09, 0xAC, 0xA4, 0xE1, 0xCD, 0x2B, 0x45, 0x6A, 0xB5, 0x4D, 0xA4,
    0x0C, 0x69, 0xCF, 0x2F, 0x66, 0x2C, 0x84, 0xEC, 0x8E, 0xD9, 0x7F, 0x9B, 0x75, 0x6C, 0x63, 0x66,
    0x52, 0xEB, 0xFD, 0x5B, 0x28, 0x5A, 0x0B, 0xD3, 0xBE, 0x96, 0xC7, 0x30, 0x63, 0x0D, 0x27, 0x55,
    0xA5, 0x8A, 0xAD, 0xC6, 0x26, 0xD7, 0x72, 0x2E, 0x24, 0x1D, 0x62, 0xED, 0xB4, 0xBB, 0xD7, 0x79,
    0xEF, 0x00, 0x00, 0x25, 0x92, 0x64, 0xB4, 0x32, 0x37, 0x3C, 0x55, 0x03, 0x8E, 0x55, 0x2B, 0x27,
    0x1D, 0x59, 0xDF, 0xBE, 0xA2, 0x52, 0x7A, 0x54, 0x69, 0xDD, 0xB3, 0x1B, 0xBF, 0x15, 0x26, 0xEF,
    0x0C, 0xE4, 0xFF, 0xC5, 0x09, 0x9C, 0x34, 0xDA, 0x2F, 0xED, 0x42, 0xA9, 0x46, 0xF6, 0x8B, 0xFA,
    0x54, 0x9B, 0x39, 0x74, 0x15, 0xAA, 0x75, 0x4A, 0xB4, 0xD2, 0x0B, 0x6C, 0xA5, 0x74, 0xB1, 0xB7,
    0x71, 0x7D, 0x47, 0xED, 0x6C, 0xB5, 0xAF, 0xBC, 0x8A, 0x63, 0x2F, 0xED, 0x6C, 0x2F, 0x06, 0x55,
    0x0B, 0x76, 0x5C, 0x29, 0x3B, 0x4C, 0xD3, 0x69, 0x36, 0xA6, 0xD4, 0x5A, 0x38, 0xC2, 0xC5, 0x5B,
    0x6D, 0x57, 0x9D, 0x12, 0xF0, 0xF4, 0xE4, 0x40, 0x1E, 0x82, 0xB2, 0xC0, 0x68, 0x0B, 0x01, 0xA0,
    0x28, 0x0E, 0xA5, 0x17, 0xC0, 0x55, 0x83, 0xA6, 0xE3, 0x9A, 0xB6, 0xA1, 0x6A, 0x17, 0x5E, 0xCA,
    0x0A, 0xCA, 0x5A, 0xA6, 0x57, 0xBA, 0x82, 0x9F, 0x55, 0xB1, 0x93, 0x91, 0x26, 0x97, 0xE5, 0x4E,
    0x55, 0x4B, 0xDA, 0xA5, 0xF9, 0x53, 0x1D, 0x52, 0x94, 0xC7, 0x7C, 0x54, 0xCB, 0x49, 0x45, 0xA2,
    0xFF, 0x35, 0x5A, 0xA6, 0xD2, 0xC5, 0x71, 0xCF, 0xF4, 0xA9, 0xD8, 0x91, 0x5C, 0x55, 0xED, 0x2A,
    0x93, 0x65, 0xDC, 0xD9, 0x48, 0x01, 0x00, 0x1B, 0x16, 0x37, 0x81, 0xE0, 0x55, 0xA4, 0x95, 0xDB,
    0x2A, 0x28, 0xE5, 0x72, 0x5D, 0x5B, 0x0C, 0x0E, 0x7C, 0x56, 0x99, 0x55, 0xB3, 0x13, 0xBF, 0x95,
    0x2E, 0x14, 0xEF, 0x46, 0xA7, 0xE5, 0x4D, 0x6E, 0x42, 0x5A, 0xA9, 0xF9, 0x53, 0x25, 0x88, 0xB6,
    0xC7, 0x7D, 0x50, 0xE9, 0xD1, 0x2E, 0x2A, 0xFE, 0xB4, 0x20, 0x06, 0xA1, 0x1D, 0x20, 0x24, 0x08,
    0x00, 0xD3, 0x33, 0xEA, 0xAC, 0xC6, 0x18, 0x59, 0xB5, 0x7D, 0xB3, 0x76, 0xDA, 0xEB, 0x39, 0x8C,
    0xE6, 0x22, 0x54, 0xBE, 0x0D, 0x34, 0xA9, 0x76, 0xA3, 0x2F, 0x3B, 0x61, 0xF1, 0x5D, 0x94, 0xCB,
    0xCE, 0xD6, 0x8C, 0x38, 0x6D, 0x2A, 0xF3, 0xB1, 0xAB, 0x4E, 0x5B, 0x68, 0xBD, 0x2C, 0x59, 0xE3,
    0x86, 0xD2, 0x2F, 0x6B, 0x02, 0x6D, 0x25, 0xC6, 0x6B, 0x9E, 0xC2, 0x58, 0x36, 0x6D, 0xA2, 0xF9,
    0xCD, 0x55, 0xC5, 0x1B, 0x81, 0xE0, 0x00, 0x00, 0x45, 0xA6, 0x84, 0xBB, 0x9C, 0x38, 0xD1, 0x59,
    0x71, 0x09, 0x0D, 0x2E, 0x35, 0x56, 0x5C, 0x3A, 0x45, 0xC2, 0x91, 0x96, 0x1F, 0x4A, 0x71, 0x8C,
    0xE4, 0x95, 0x8B, 0xE0, 0xCD, 0x2A, 0x3B, 0xF5, 0x5B, 0x23, 0x58, 0xE6, 0xB9, 0xEE, 0xD7, 0xCA,
    0xA1, 0x39, 0x97, 0x3B, 0x8E, 0x76, 0xAE, 0x55, 0x1A, 0xCC, 0xB2, 0x5C, 0x77, 0x95, 0xCB, 0x0F,
    0x26, 0xF3, 0x5D, 0xE5, 0x93, 0xA2, 0x23, 0x45, 0x54, 0xB3, 0x74, 0xAF, 0x94, 0xCD, 0x22, 0xEA,
    0x86, 0xCC, 0x18, 0x96, 0x49, 0x97, 0x68, 0x00, 0x02, 0x80, 0xBA, 0x9E, 0x3C, 0xA5, 0x14, 0x8D,
    0x32, 0x34, 0x7B, 0x3B, 0x57, 0x2B, 0x95, 0x21, 0x99, 0x6F, 0x39, 0xDA, 0xFB, 0x5E, 0x6C, 0x8D,
    0xA0, 0x00, 0x00, 0x0C, 0x03, 0xD2, 0x76, 0x50, 0x1F, 0xAA, 0xBA, 0x40, 0x38, 0x07, 0x00, 0x60,
    0x0C, 0x0F, 0x45, 0xC3, 0x7D, 0xFA, 0x83, 0x37, 0x5D, 0x61, 0xDD, 0x3E, 0xC8, 0x4E, 0xCA, 0x58,
    0x88, 0xDF, 0x9A, 0x1C, 0xF3, 0x55, 0xAE, 0xBB, 0x4A, 0x91, 0x65, 0xDD, 0x7B, 0xAF, 0x95, 0xC1,
    0x99, 0xAC, 0xAF, 0x54, 0xED, 0x7A, 0xAD, 0xF0, 0xCA, 0x66, 0x8A, 0xA6, 0xAB, 0x8C, 0x36, 0x16,
    0x56, 0xB5, 0xBA, 0xB1, 0x54, 0x2A, 0xAC, 0xB5, 0x6D, 0xBB, 0xD5, 0x3A, 0xA5, 0x54, 0xA2, 0x8A,
    0x6F, 0x51, 0x26, 0xD4, 0xBA, 0xBC, 0x00, 0x00, 0x75, 0xDB, 0x90, 0x22, 0x3D, 0xF4, 0xA3, 0x74,
    0xAE, 0xCB, 0xC1, 0x51, 0xF3, 0xA5, 0x4B, 0x30, 0xB4, 0x52, 0x7D, 0xF1, 0xF2, 0xAA, 0xB5, 0xD4,
    0xE2, 0xF5, 0x9C, 0xA2, 0x2F, 0x68, 0x78, 0x9D, 0x1F, 0x28, 0x83, 0xDE, 0xDD, 0x9E, 0xD7, 0x8A,
    0x1E, 0xE7, 0xC9, 0x38, 0xB2, 0x52, 0xA8, 0x35, 0xF6, 0x90, 0xED, 0xD7, 0xB3, 0x76, 0x5A, 0xE5,
    0x4E, 0x7D, 0x55, 0x2D, 0x95, 0xBE, 0x17, 0xA6, 0x79, 0xC6, 0xC9, 0x6C, 0x66, 0x07, 0xC5, 0xD2,
    0x31, 0xDA, 0x95, 0x81, 0xE9, 0xB4, 0x8C, 0xAB, 0x25, 0x60, 0xD8, 0x24, 0xE3, 0x39, 0x6D, 0x17,
    0xBE, 0x28, 0x6E, 0x6F, 0x2C, 0xF0, 0x00, 0x00, 0x55, 0x59, 0x70, 0x2A, 0x56, 0x64, 0xE3, 0x65,
    0x6D, 0xD5, 0xB9, 0xAB, 0xB0, 0x1B, 0x7B, 0x79, 0x65, 0x22, 0xEA, 0xB1, 0x1E, 0xCE, 0xDB, 0xCB,
    0x69, 0x37, 0x75, 0x67, 0xD2, 0xEA, 0xD8, 0xD9, 0xE4, 0xD7, 0x5B, 0xB9, 0xAE, 0xD5, 0x43, 0x11,
    0x22, 0xD6, 0xDC, 0x85, 0x4D, 0x8B, 0xAA, 0x35, 0xC4, 0x23, 0x3B, 0x00, 0xFB, 0x11, 0x96, 0x02,
    0xC0, 0x48, 0x07, 0x00, 0xA0, 0x14, 0x01, 0x81, 0xE0, 0x75, 0xF9, 0x68, 0x31, 0xCE, 0xE2, 0xA3,
    0x85, 0x2F, 0xBC, 0x19, 0x02, 0x2F, 0xB9, 0xAB, 0xEB, 0x26, 0x41, 0x8A, 0xF1, 0xF2, 0xFB, 0x56,
    0x58, 0x94, 0xFE, 0xFC, 0xB6, 0x95, 0x68, 0x66, 0x7F, 0x2F, 0x6E, 0xED, 0xBA, 0xB2, 0x33, 0x5A,
    0x47, 0xAC, 0xE5, 0x2B, 0x8C, 0x53, 0x15, 0xB6, 0x42, 0x69, 0xD2, 0xA7, 0x6B, 0x67, 0x71, 0x00,
    0x28, 0x09, 0xAD, 0xD9, 0x00, 0x4A, 0x32, 0x61, 0xE0, 0x00, 0x00, 0x64, 0xD4, 0x41, 0x2A, 0x6E,
    0xD2, 0xE5, 0x6E, 0x20, 0x28, 0x6D, 0x5D, 0xBA, 0x5D, 0x79, 0x12, 0x0C, 0x57, 0x6B, 0x96, 0x56,
    0xCE, 0x80, 0xEF, 0xED, 0xE5, 0x56, 0xB5, 0x30, 0x30, 0xDF, 0xF1, 0x34, 0x5A, 0xAA, 0xB4, 0xBF,
    0x4A, 0x46, 0x76, 0x5D, 0x60, 0xA5, 0x9A, 0x71, 0x4E, 0x38, 0xC8, 0xE9, 0x8C, 0xEF, 0x86, 0x34,
    0xB2, 0xDA, 0x76, 0x26, 0x71, 0x98, 0x66, 0xBC, 0xAA, 0x68, 0x79, 0x6A, 0x1B, 0xAF, 0x2B, 0xAC,
    0x65, 0x56, 0x13, 0x59, 0xDB, 0x3B, 0x6F, 0x6D, 0xED, 0xB2, 0xB9, 0x2D, 0x66, 0x77, 0x7B, 0x1B,
    0xED, 0x55, 0xA5, 0x83, 0x43, 0x4D, 0x44, 0xD5, 0x61, 0x5E, 0xF4, 0xB1, 0x89, 0xB4, 0x56, 0x29,
    0xC4, 0xBC, 0xDB, 0x71, 0x15, 0x0D, 0xD3, 0x72, 0xD4, 0x9C, 0xF0, 0x00, 0x00, 0x65, 0x58, 0x58,
    0x32, 0x4D, 0xF4, 0x9F, 0x54, 0x6A, 0x9D, 0x58, 0xAA, 0x2F, 0x57, 0x48, 0x6D, 0xA5, 0xEA, 0xB5,
    0x4D, 0x8B, 0x45, 0x39, 0xA9, 0xEF, 0x5D, 0xEC, 0x95, 0xCA, 0xCA, 0x4E, 0xA2, 0xCD, 0x67, 0x84,
    0xB0, 0x66, 0x91, 0xF5, 0x92, 0x79, 0x2C, 0x17, 0x84, 0x6F, 0x39, 0x59, 0x53, 0x06, 0xDD, 0x13,
    0x59, 0xD5, 0x6E, 0xC2, 0x1A, 0x23, 0x85, 0x85, 0x9B, 0x30, 0x54, 0x99, 0x61, 0xDD, 0xB4, 0x8C,
    0x19, 0x15, 0x38, 0x67, 0x76, 0x07, 0x80, 0x00, 0x00, 0xA5, 0x52, 0x24, 0x33, 0x1C, 0xCE, 0xF1,
    0x5E, 0xCE, 0xEC, 0xA6, 0x6F, 0xDD, 0xD9, 0x6B, 0x3E, 0xF6, 0x56, 0x15, 0x77, 0x6A, 0x8B, 0xB2,
    0x95, 0x0D, 0x2F, 0x9C, 0x9E, 0x93, 0x94, 0x43, 0x6D, 0x9F, 0x26, 0xAC, 0x9C, 0x4E, 0x27, 0xC9,
    0xD9, 0xB5, 0x3D, 0x62, 0x82, 0x93, 0x79, 0xCD, 0xD5, 0x9A, 0xB3, 0x65, 0xEE, 0x85, 0xD3, 0x71,
    0x1C, 0x5E, 0x62, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
];
